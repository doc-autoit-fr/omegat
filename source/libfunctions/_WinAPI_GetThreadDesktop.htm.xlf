<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_WinAPI_GetThreadDesktop.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Retrieves a handle to the desktop assigned to the specified thread</source>
<seg-source><mrk mid="0" mtype="seg">Retrieves a handle to the desktop assigned to the specified thread</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieves a handle to the desktop assigned to the specified thread</mrk></target>
<note>Function _WinAPI_GetThreadDesktop</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> The thread identifier. The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateProcess.htm"></bpt>_WinAPI_CreateProcess()<ept id="1">&lt;/a></ept> and <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_GetCurrentThreadId.htm"></bpt>_WinAPI_GetCurrentThreadId()<ept id="2">&lt;/a></ept> return thread identifiers. </source>
<seg-source> <mrk mid="0" mtype="seg">The thread identifier.</mrk> <mrk mid="1" mtype="seg">The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateProcess.htm"></bpt>_WinAPI_CreateProcess()<ept id="1">&lt;/a></ept> and <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_GetCurrentThreadId.htm"></bpt>_WinAPI_GetCurrentThreadId()<ept id="2">&lt;/a></ept> return thread identifiers.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The thread identifier.</mrk> <mrk mid="1" mtype="seg">The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateProcess.htm"></bpt>_WinAPI_CreateProcess()<ept id="1">&lt;/a></ept> and <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_GetCurrentThreadId.htm"></bpt>_WinAPI_GetCurrentThreadId()<ept id="2">&lt;/a></ept> return thread identifiers.</mrk> </target>
<note>$iThreadId</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Handle to the desktop associated with the specified thread.</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the desktop associated with the specified thread.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the desktop associated with the specified thread.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> 0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information. </source>
<seg-source> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information.</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">You do not need to call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseDesktop.htm"></bpt>_WinAPI_CloseDesktop()<ept id="1">&lt;/a></ept> function to close the returned handle.</source>
<seg-source><mrk mid="0" mtype="seg">You do not need to call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseDesktop.htm"></bpt>_WinAPI_CloseDesktop()<ept id="1">&lt;/a></ept> function to close the returned handle.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">You do not need to call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseDesktop.htm"></bpt>_WinAPI_CloseDesktop()<ept id="1">&lt;/a></ept> function to close the returned handle.</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetThreadDesktop);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetThreadDesktop<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetThreadDesktop);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetThreadDesktop<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetThreadDesktop);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetThreadDesktop<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Retrieve a handle to the current desktop and create a new desktop named "MyDesktop"</source>
<seg-source><mrk mid="0" mtype="seg">Retrieve a handle to the current desktop and create a new desktop named "MyDesktop"</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieve a handle to the current desktop and create a new desktop named "MyDesktop"</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">MyDesktop</source>
<seg-source><mrk mid="0" mtype="seg">MyDesktop</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">MyDesktop</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Error</source>
<seg-source><mrk mid="0" mtype="seg">Error</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Error</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Unable to create desktop.</source>
<seg-source><mrk mid="0" mtype="seg">Unable to create desktop.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Unable to create desktop.</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Switch to the newly created desktop</source>
<seg-source><mrk mid="0" mtype="seg">Switch to the newly created desktop</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Switch to the newly created desktop</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Run "calc.exe" on "MyDesktop" and wait until a process will not be closed by user</source>
<seg-source><mrk mid="0" mtype="seg">Run "calc.exe" on "MyDesktop" and wait until a process will not be closed by user</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Run "calc.exe" on "MyDesktop" and wait until a process will not be closed by user</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">MyDesktop</source>
<seg-source><mrk mid="0" mtype="seg">MyDesktop</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">MyDesktop</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Size</source>
<seg-source><mrk mid="0" mtype="seg">Size</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Size</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Desktop</source>
<seg-source><mrk mid="0" mtype="seg">Desktop</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Desktop</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">\calc.exe</source>
<seg-source><mrk mid="0" mtype="seg">\calc.exe</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">\calc.exe</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">ProcessID</source>
<seg-source><mrk mid="0" mtype="seg">ProcessID</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ProcessID</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">Switch to previous desktop and close "MyDesktop"</source>
<seg-source><mrk mid="0" mtype="seg">Switch to previous desktop and close "MyDesktop"</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Switch to previous desktop and close "MyDesktop"</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Free memory allocated for a string</source>
<seg-source><mrk mid="0" mtype="seg">Free memory allocated for a string</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Free memory allocated for a string</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
