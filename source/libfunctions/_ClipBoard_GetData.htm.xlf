<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_ClipBoard_GetData.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Retrieves data from the clipboard in a specified format</source>
<seg-source><mrk mid="0" mtype="seg">Retrieves data from the clipboard in a specified format</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieves data from the clipboard in a specified format</mrk></target>
<note>Function _ClipBoard_GetData</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies a clipboard format:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies a clipboard format:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies a clipboard format:</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> $CF_TEXT - Text format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_TEXT - Text format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_TEXT - Text format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> $CF_BITMAP - Handle to a bitmap (HBITMAP)</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_BITMAP - Handle to a bitmap (HBITMAP)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_BITMAP - Handle to a bitmap (HBITMAP)</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> $CF_METAFILEPICT - Handle to a metafile picture (METAFILEPICT)</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_METAFILEPICT - Handle to a metafile picture (METAFILEPICT)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_METAFILEPICT - Handle to a metafile picture (METAFILEPICT)</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> $CF_SYLK - Microsoft Symbolic Link (SYLK) format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_SYLK - Microsoft Symbolic Link (SYLK) format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_SYLK - Microsoft Symbolic Link (SYLK) format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> $CF_DIF - Software Arts' Data Interchange Format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DIF - Software Arts' Data Interchange Format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DIF - Software Arts' Data Interchange Format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> $CF_TIFF - Tagged image file format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_TIFF - Tagged image file format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_TIFF - Tagged image file format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> $CF_OEMTEXT - Text format containing characters in the OEM character set</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_OEMTEXT - Text format containing characters in the OEM character set</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_OEMTEXT - Text format containing characters in the OEM character set</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> $CF_DIB - BITMAPINFO structure followed by the bitmap bits</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DIB - BITMAPINFO structure followed by the bitmap bits</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DIB - BITMAPINFO structure followed by the bitmap bits</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> $CF_PALETTE - Handle to a color palette</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_PALETTE - Handle to a color palette</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_PALETTE - Handle to a color palette</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> $CF_PENDATA - Data for the pen extensions to Pen Computing</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_PENDATA - Data for the pen extensions to Pen Computing</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_PENDATA - Data for the pen extensions to Pen Computing</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> $CF_RIFF - Represents audio data in RIFF format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_RIFF - Represents audio data in RIFF format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_RIFF - Represents audio data in RIFF format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> $CF_WAVE - Represents audio data in WAVE format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_WAVE - Represents audio data in WAVE format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_WAVE - Represents audio data in WAVE format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> $CF_UNICODETEXT - Unicode text format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_UNICODETEXT - Unicode text format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_UNICODETEXT - Unicode text format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> $CF_ENHMETAFILE - Handle to an enhanced metafile (HENHMETAFILE)</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_ENHMETAFILE - Handle to an enhanced metafile (HENHMETAFILE)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_ENHMETAFILE - Handle to an enhanced metafile (HENHMETAFILE)</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> $CF_HDROP - Handle to type HDROP that identifies a list of files</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_HDROP - Handle to type HDROP that identifies a list of files</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_HDROP - Handle to type HDROP that identifies a list of files</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> $CF_LOCALE - Handle to the locale identifier associated with text in the clipboard</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_LOCALE - Handle to the locale identifier associated with text in the clipboard</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_LOCALE - Handle to the locale identifier associated with text in the clipboard</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> $CF_DIBV5 - BITMAPV5HEADER structure followed by bitmap color and the bitmap bits</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DIBV5 - BITMAPV5HEADER structure followed by bitmap color and the bitmap bits</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DIBV5 - BITMAPV5HEADER structure followed by bitmap color and the bitmap bits</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> $CF_OWNERDISPLAY - Owner display format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_OWNERDISPLAY - Owner display format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_OWNERDISPLAY - Owner display format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> $CF_DSPTEXT - Text display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPTEXT - Text display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPTEXT - Text display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> $CF_DSPBITMAP - Bitmap display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPBITMAP - Bitmap display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPBITMAP - Bitmap display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> $CF_DSPMETAFILEPICT - Metafile picture display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPMETAFILEPICT - Metafile picture display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPMETAFILEPICT - Metafile picture display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> $CF_DSPENHMETAFILE - Enhanced metafile display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPENHMETAFILE - Enhanced metafile display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPENHMETAFILE - Enhanced metafile display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Text for text based formats or Binary data for all other formats</source>
<seg-source><mrk mid="0" mtype="seg">Text for text based formats or Binary data for all other formats</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Text for text based formats or Binary data for all other formats</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> @extended is set to the # of characters for Text, or # of bytes for Binary</source>
<seg-source> <mrk mid="0" mtype="seg">@extended is set to the # of characters for Text, or # of bytes for Binary</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">@extended is set to the # of characters for Text, or # of bytes for Binary</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">0</source>
<seg-source><mrk mid="0" mtype="seg">0</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">0</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">This function performs all of the steps neccesary to get data from the clipboard. It checks to see if the data format is available, opens the clipboard, closes the clipboard and returns the data in one of two formats: String format for datatypes $CF_TEXT, $CF_OEMTEXT, or $CF_UNICODETEXT, or Binary format for every other type.</source>
<seg-source><mrk mid="0" mtype="seg">This function performs all of the steps neccesary to get data from the clipboard.</mrk> <mrk mid="1" mtype="seg">It checks to see if the data format is available, opens the clipboard, closes the clipboard and returns the data in one of two formats:</mrk> <mrk mid="2" mtype="seg">String format for datatypes $CF_TEXT, $CF_OEMTEXT, or $CF_UNICODETEXT, or Binary format for every other type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This function performs all of the steps neccesary to get data from the clipboard.</mrk> <mrk mid="1" mtype="seg">It checks to see if the data format is available, opens the clipboard, closes the clipboard and returns the data in one of two formats:</mrk> <mrk mid="2" mtype="seg">String format for datatypes $CF_TEXT, $CF_OEMTEXT, or $CF_UNICODETEXT, or Binary format for every other type.</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en"> If you need a finer degree of control over retrieving data from the clipboard, you may want to use the <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_GetDataEx.htm"></bpt>_ClipBoard_GetDataEx()<ept id="1">&lt;/a></ept> function.</source>
<seg-source> <mrk mid="0" mtype="seg">If you need a finer degree of control over retrieving data from the clipboard, you may want to use the <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_GetDataEx.htm"></bpt>_ClipBoard_GetDataEx()<ept id="1">&lt;/a></ept> function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If you need a finer degree of control over retrieving data from the clipboard, you may want to use the <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_GetDataEx.htm"></bpt>_ClipBoard_GetDataEx()<ept id="1">&lt;/a></ept> function.</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Create GUI</source>
<seg-source><mrk mid="0" mtype="seg">Create GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create GUI</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">Clipboard</source>
<seg-source><mrk mid="0" mtype="seg">Clipboard</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Clipboard</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Courier New</source>
<seg-source><mrk mid="0" mtype="seg">Courier New</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Courier New</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">Set ClipBoard Data</source>
<seg-source><mrk mid="0" mtype="seg">Set ClipBoard Data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Set ClipBoard Data</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">Get ClipBoard Data</source>
<seg-source><mrk mid="0" mtype="seg">Get ClipBoard Data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Get ClipBoard Data</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">Loop until the user exits.</source>
<seg-source><mrk mid="0" mtype="seg">Loop until the user exits.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Loop until the user exits.</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">ClipBoard Library</source>
<seg-source><mrk mid="0" mtype="seg">ClipBoard Library</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ClipBoard Library</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">Write message to memo</source>
<seg-source><mrk mid="0" mtype="seg">Write message to memo</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write message to memo</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
