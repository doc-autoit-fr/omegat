<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_WinAPI_RedrawWindow.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Updates the specified rectangle or region in a window's client area</source>
<seg-source><mrk mid="0" mtype="seg">Updates the specified rectangle or region in a window's client area</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Updates the specified rectangle or region in a window's client area</mrk></target>
<note>Function _WinAPI_RedrawWindow</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Handle to a Window</source>
<seg-source><mrk mid="0" mtype="seg">Handle to a Window</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to a Window</mrk></target>
<note>$hWnd</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> $tagRECT structure containing the coordinates of the update rectangle. This parameter is</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagRECT structure containing the coordinates of the update rectangle.</mrk> <mrk mid="2" mtype="seg">This parameter is</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagRECT structure containing the coordinates of the update rectangle.</mrk> <mrk mid="2" mtype="seg">This parameter is</mrk></target>
<note>$tRECT</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> ignored if the $hRegion parameter identifies a region.</source>
<seg-source> <mrk mid="0" mtype="seg">ignored if the $hRegion parameter identifies a region.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">ignored if the $hRegion parameter identifies a region.</mrk></target>
<note>$tRECT</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Identifies the update region. If the $hRegion and $tRECT parameters are 0, the entire client</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Identifies the update region.</mrk> <mrk mid="2" mtype="seg">If the $hRegion and $tRECT parameters are 0, the entire client</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Identifies the update region.</mrk> <mrk mid="2" mtype="seg">If the $hRegion and $tRECT parameters are 0, the entire client</mrk></target>
<note>$hRegion</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> area is added to the update region.</source>
<seg-source> <mrk mid="0" mtype="seg">area is added to the update region.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">area is added to the update region.</mrk></target>
<note>$hRegion</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies the redraw flags. This parameter can be a combination of flags that invalidate or validate a window, control repainting, and control which windows are affected:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the redraw flags.</mrk> <mrk mid="2" mtype="seg">This parameter can be a combination of flags that invalidate or validate a window, control repainting, and control which windows are affected:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the redraw flags.</mrk> <mrk mid="2" mtype="seg">This parameter can be a combination of flags that invalidate or validate a window, control repainting, and control which windows are affected:</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">     $RDW_ERASE - Causes the window to receive a WM_ERASEBKGND message when the window is repainted</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_ERASE - Causes the window to receive a WM_ERASEBKGND message when the window is repainted</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_ERASE - Causes the window to receive a WM_ERASEBKGND message when the window is repainted</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">     $RDW_FRAME - Causes any part of the nonclient area of the window that intersects the update region to receive a WM_NCPAINT message.</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_FRAME - Causes any part of the nonclient area of the window that intersects the update region to receive a WM_NCPAINT message.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_FRAME - Causes any part of the nonclient area of the window that intersects the update region to receive a WM_NCPAINT message.</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">     $RDW_INTERNALPAINT - Causes a WM_PAINT message to be posted to the window regardless of whether any portion of the window is invalid.</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_INTERNALPAINT - Causes a WM_PAINT message to be posted to the window regardless of whether any portion of the window is invalid.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_INTERNALPAINT - Causes a WM_PAINT message to be posted to the window regardless of whether any portion of the window is invalid.</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">     $RDW_INVALIDATE - Invalidates $tRECT or $hRegion. If both are 0, the entire window is invalidated.</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_INVALIDATE - Invalidates $tRECT or $hRegion.</mrk> <mrk mid="1" mtype="seg">If both are 0, the entire window is invalidated.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_INVALIDATE - Invalidates $tRECT or $hRegion.</mrk> <mrk mid="1" mtype="seg">If both are 0, the entire window is invalidated.</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">     $RDW_NOERASE - Suppresses any pending $WM_ERASEBKGND messages</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_NOERASE - Suppresses any pending $WM_ERASEBKGND messages</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_NOERASE - Suppresses any pending $WM_ERASEBKGND messages</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">     $RDW_NOFRAME - Suppresses any pending $WM_NCPAINT messages</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_NOFRAME - Suppresses any pending $WM_NCPAINT messages</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_NOFRAME - Suppresses any pending $WM_NCPAINT messages</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">     $RDW_NOINTERNALPAINT - Suppresses any pending internal $WM_PAINT messages</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_NOINTERNALPAINT - Suppresses any pending internal $WM_PAINT messages</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_NOINTERNALPAINT - Suppresses any pending internal $WM_PAINT messages</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">     $RDW_VALIDATE - Validates $tRECT or $hRegion</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_VALIDATE - Validates $tRECT or $hRegion</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_VALIDATE - Validates $tRECT or $hRegion</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">     $RDW_ERASENOW - Causes the affected windows to receive $WM_NCPAINT and $WM_ERASEBKGND messages, if necessary, before the function returns</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_ERASENOW - Causes the affected windows to receive $WM_NCPAINT and $WM_ERASEBKGND messages, if necessary, before the function returns</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_ERASENOW - Causes the affected windows to receive $WM_NCPAINT and $WM_ERASEBKGND messages, if necessary, before the function returns</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">     $RDW_UPDATENOW - Causes the affected windows to receive $WM_NCPAINT, $WM_ERASEBKGND, and $WM_PAINT messages, if necessary, before the function returns.</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_UPDATENOW - Causes the affected windows to receive $WM_NCPAINT, $WM_ERASEBKGND, and $WM_PAINT messages, if necessary, before the function returns.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_UPDATENOW - Causes the affected windows to receive $WM_NCPAINT, $WM_ERASEBKGND, and $WM_PAINT messages, if necessary, before the function returns.</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">     $RDW_ALLCHILDREN - Includes child windows in the repainting operation</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_ALLCHILDREN - Includes child windows in the repainting operation</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_ALLCHILDREN - Includes child windows in the repainting operation</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">     $RDW_NOCHILDREN - Excludes child windows from the repainting operation</source>
<seg-source> <mrk mid="0" mtype="seg">    $RDW_NOCHILDREN - Excludes child windows from the repainting operation</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $RDW_NOCHILDREN - Excludes child windows from the repainting operation</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">True</source>
<seg-source><mrk mid="0" mtype="seg">True</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">True</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">False</source>
<seg-source><mrk mid="0" mtype="seg">False</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">False</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">When RedrawWindow is used to invalidate part of the desktop window, the desktop window does not receive a $WM_PAINT message.</source>
<seg-source><mrk mid="0" mtype="seg">When RedrawWindow is used to invalidate part of the desktop window, the desktop window does not receive a $WM_PAINT message.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When RedrawWindow is used to invalidate part of the desktop window, the desktop window does not receive a $WM_PAINT message.</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> To repaint the desktop an application uses the $RDW_ERASE flag to generate a $WM_ERASEBKGND message.</source>
<seg-source> <mrk mid="0" mtype="seg">To repaint the desktop an application uses the $RDW_ERASE flag to generate a $WM_ERASEBKGND message.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">To repaint the desktop an application uses the $RDW_ERASE flag to generate a $WM_ERASEBKGND message.</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en"> Above constants require #include &lt;WindowsConstants.au3></source>
<seg-source> <mrk mid="0" mtype="seg">Above constants require #include &lt;WindowsConstants.au3></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Above constants require #include &lt;WindowsConstants.au3></mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en"><bpt id="1" ctype="x-a">&lt;a href="$tagRECT.htm"></bpt>$tagRECT<ept id="1">&lt;/a></ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="$tagRECT.htm"></bpt>$tagRECT<ept id="1">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="$tagRECT.htm"></bpt>$tagRECT<ept id="1">&lt;/a></ept></mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RedrawWindow);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RedrawWindow<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RedrawWindow);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RedrawWindow<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RedrawWindow);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RedrawWindow<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">DC of entire screen (desktop)</source>
<seg-source><mrk mid="0" mtype="seg">DC of entire screen (desktop)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">DC of entire screen (desktop)</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">horizontal left</source>
<seg-source><mrk mid="0" mtype="seg">horizontal left</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">horizontal left</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">horizontal right</source>
<seg-source><mrk mid="0" mtype="seg">horizontal right</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">horizontal right</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">vertical up</source>
<seg-source><mrk mid="0" mtype="seg">vertical up</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">vertical up</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">_WinAPI_DrawLine($hDC, $iStart_x, $iStart_y + $iLength, $iStart_x, $iStart_y + 5) ; vertical down</source>
<seg-source><mrk mid="0" mtype="seg">_WinAPI_DrawLine($hDC, $iStart_x, $iStart_y + $iLength, $iStart_x, $iStart_y + 5) ; vertical down</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_WinAPI_DrawLine($hDC, $iStart_x, $iStart_y + $iLength, $iStart_x, $iStart_y + 5) ; vertical down</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">show cross over screen for defined seconds</source>
<seg-source><mrk mid="0" mtype="seg">show cross over screen for defined seconds</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">show cross over screen for defined seconds</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">refresh desktop (clear cross)</source>
<seg-source><mrk mid="0" mtype="seg">refresh desktop (clear cross)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">refresh desktop (clear cross)</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">clear resources</source>
<seg-source><mrk mid="0" mtype="seg">clear resources</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">clear resources</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
