<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/$tagSTARTUPINFO.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Keyword Reference</source>
<seg-source><mrk mid="0" mtype="seg">Keyword Reference</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Keyword Reference</mrk></target>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Specifies the window station, desktop, standard handles, and appearance of the main window for a process at creation time</source>
<seg-source><mrk mid="0" mtype="seg">Specifies the window station, desktop, standard handles, and appearance of the main window for a process at creation time</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies the window station, desktop, standard handles, and appearance of the main window for a process at creation time</mrk></target>
<note>Keyword $tagSTARTUPINFO</note>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">The size of the structure, in bytes</source>
<seg-source><mrk mid="0" mtype="seg">The size of the structure, in bytes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The size of the structure, in bytes</mrk></target>
<note>Size</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Reserved, must be zero</source>
<seg-source><mrk mid="0" mtype="seg">Reserved, must be zero</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reserved, must be zero</mrk></target>
<note>Reserved1</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">The name of the desktop, or the name of both the desktop and window station for this process</source>
<seg-source><mrk mid="0" mtype="seg">The name of the desktop, or the name of both the desktop and window station for this process</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The name of the desktop, or the name of both the desktop and window station for this process</mrk></target>
<note>Desktop</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">For console processes, the title displayed in the title bar if a new console is created</source>
<seg-source><mrk mid="0" mtype="seg">For console processes, the title displayed in the title bar if a new console is created</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">For console processes, the title displayed in the title bar if a new console is created</mrk></target>
<note>Title</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">If Flags specifies $STARTF_USEPOSITION, this member is the x offset of the upper left corner of a window if a new window is created, in pixels.</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USEPOSITION, this member is the x offset of the upper left corner of a window if a new window is created, in pixels.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USEPOSITION, this member is the x offset of the upper left corner of a window if a new window is created, in pixels.</mrk></target>
<note>X</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">If Flags specifies $STARTF_USEPOSITION, this member is the y offset of the upper left corner of a window if a new window is created, in pixels.</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USEPOSITION, this member is the y offset of the upper left corner of a window if a new window is created, in pixels.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USEPOSITION, this member is the y offset of the upper left corner of a window if a new window is created, in pixels.</mrk></target>
<note>Y</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">If Flags specifies $STARTF_USESIZE, this member is the height of the window, in pixels</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESIZE, this member is the height of the window, in pixels</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESIZE, this member is the height of the window, in pixels</mrk></target>
<note>XSize</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">If Flags specifies $STARTF_USESIZE, this member is the width of the window, in pixels</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESIZE, this member is the width of the window, in pixels</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESIZE, this member is the width of the window, in pixels</mrk></target>
<note>YSize</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">If Flags specifies $STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer width, in character columns.</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer width, in character columns.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer width, in character columns.</mrk></target>
<note>XCountChars</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">If Flags specifies $STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer height, in character rows.</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer height, in character rows.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USECOUNTCHARS, if a new console window is created in a console process, this member specifies the screen buffer height, in character rows.</mrk></target>
<note>YCountChars</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">If Flags specifies $STARTF_USEFILLATTRIBUTE, this member is the initial text and background colors if a new console window is created in a console application.</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USEFILLATTRIBUTE, this member is the initial text and background colors if a new console window is created in a console application.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USEFILLATTRIBUTE, this member is the initial text and background colors if a new console window is created in a console application.</mrk></target>
<note>FillAttribute</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Determines which members are used when the process creates a window:</source>
<seg-source><mrk mid="0" mtype="seg">Determines which members are used when the process creates a window:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Determines which members are used when the process creates a window:</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">     $STARTF_FORCEONFEEDBACK - The cursor is in feedback mode for two seconds after CreateProcess is called.</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_FORCEONFEEDBACK - The cursor is in feedback mode for two seconds after CreateProcess is called.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_FORCEONFEEDBACK - The cursor is in feedback mode for two seconds after CreateProcess is called.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">         The Working in Background cursor is displayed.</source>
<seg-source> <mrk mid="0" mtype="seg">        The Working in Background cursor is displayed.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        The Working in Background cursor is displayed.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">         If during those two seconds the process makes the first GUI call, the system gives five more seconds to the process.</source>
<seg-source> <mrk mid="0" mtype="seg">        If during those two seconds the process makes the first GUI call, the system gives five more seconds to the process.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If during those two seconds the process makes the first GUI call, the system gives five more seconds to the process.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">         If during those five seconds the process shows a window, the system gives five more seconds to the process to finish drawing the window.</source>
<seg-source> <mrk mid="0" mtype="seg">        If during those five seconds the process shows a window, the system gives five more seconds to the process to finish drawing the window.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If during those five seconds the process shows a window, the system gives five more seconds to the process to finish drawing the window.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">         The system turns the feedback cursor off after the first call to GetMessage, regardless of whether the process is drawing.</source>
<seg-source> <mrk mid="0" mtype="seg">        The system turns the feedback cursor off after the first call to GetMessage, regardless of whether the process is drawing.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        The system turns the feedback cursor off after the first call to GetMessage, regardless of whether the process is drawing.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">     $STARTF_FORCEOFFFEEDBACK - Indicates that the feedback cursor is forced off while the process is starting.</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_FORCEOFFFEEDBACK - Indicates that the feedback cursor is forced off while the process is starting.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_FORCEOFFFEEDBACK - Indicates that the feedback cursor is forced off while the process is starting.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">         The Normal Select cursor is displayed.</source>
<seg-source> <mrk mid="0" mtype="seg">        The Normal Select cursor is displayed.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        The Normal Select cursor is displayed.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">     $STARTF_RUNFULLSCREEN - Indicates that the process should be run in full screen mode, rather than in windowed mode.</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_RUNFULLSCREEN - Indicates that the process should be run in full screen mode, rather than in windowed mode.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_RUNFULLSCREEN - Indicates that the process should be run in full screen mode, rather than in windowed mode.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">         This flag is only valid for console applications running on an x86 computer.</source>
<seg-source> <mrk mid="0" mtype="seg">        This flag is only valid for console applications running on an x86 computer.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        This flag is only valid for console applications running on an x86 computer.</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">     $STARTF_USECOUNTCHARS - The XCountChars and YCountChars members are valid</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_USECOUNTCHARS - The XCountChars and YCountChars members are valid</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_USECOUNTCHARS - The XCountChars and YCountChars members are valid</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">     $STARTF_USEFILLATTRIBUTE - The FillAttribute member is valid</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_USEFILLATTRIBUTE - The FillAttribute member is valid</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_USEFILLATTRIBUTE - The FillAttribute member is valid</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">     $STARTF_USEPOSITION - The X and Y members are valid</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_USEPOSITION - The X and Y members are valid</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_USEPOSITION - The X and Y members are valid</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">     $STARTF_USESHOWWINDOW - The ShowWindow member is valid</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_USESHOWWINDOW - The ShowWindow member is valid</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_USESHOWWINDOW - The ShowWindow member is valid</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">     $STARTF_USESIZE - The XSize and YSize members are valid</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_USESIZE - The XSize and YSize members are valid</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_USESIZE - The XSize and YSize members are valid</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">     $STARTF_USESTDHANDLES - The hStdInput, hStdOutput, and hStdError members are valid</source>
<seg-source> <mrk mid="0" mtype="seg">    $STARTF_USESTDHANDLES - The hStdInput, hStdOutput, and hStdError members are valid</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $STARTF_USESTDHANDLES - The hStdInput, hStdOutput, and hStdError members are valid</mrk></target>
<note>Flags</note>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">If Flags specifies $STARTF_USESHOWWINDOW, this member can be any of the SW_ constants</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESHOWWINDOW, this member can be any of the SW_ constants</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESHOWWINDOW, this member can be any of the SW_ constants</mrk></target>
<note>ShowWindow</note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Reserved, must be zero</source>
<seg-source><mrk mid="0" mtype="seg">Reserved, must be zero</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reserved, must be zero</mrk></target>
<note>Reserved2</note>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Reserved, must be zero</source>
<seg-source><mrk mid="0" mtype="seg">Reserved, must be zero</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reserved, must be zero</mrk></target>
<note>Reserved3</note>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard input handle</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard input handle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard input handle</mrk></target>
<note>StdInput</note>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard output handle</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard output handle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard output handle</mrk></target>
<note>StdOutput</note>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard error handle</source>
<seg-source><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard error handle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If Flags specifies $STARTF_USESTDHANDLES, this member is the standard error handle</mrk></target>
<note>StdError</note>
</trans-unit>
</body>
</file>
</xliff>
