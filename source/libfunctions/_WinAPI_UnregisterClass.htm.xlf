<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_WinAPI_UnregisterClass.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Unregisters a window class, freeing the memory required for the class</source>
<seg-source><mrk mid="0" mtype="seg">Unregisters a window class, freeing the memory required for the class</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Unregisters a window class, freeing the memory required for the class</mrk></target>
<note>Function _WinAPI_UnregisterClass</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> A null-terminated string or a class atom. If $sClass is a string, it specifies the window class</source>
<seg-source> <mrk mid="0" mtype="seg">A null-terminated string or a class atom.</mrk> <mrk mid="1" mtype="seg">If $sClass is a string, it specifies the window class</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">A null-terminated string or a class atom.</mrk> <mrk mid="1" mtype="seg">If $sClass is a string, it specifies the window class</mrk></target>
<note>$sClass</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> name. This class name must have been registered by a previous call to the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegisterClass.htm"></bpt>_WinAPI_RegisterClass()<ept id="1">&lt;/a></ept></source>
<seg-source> <mrk mid="0" mtype="seg">name.</mrk> <mrk mid="1" mtype="seg">This class name must have been registered by a previous call to the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegisterClass.htm"></bpt>_WinAPI_RegisterClass()<ept id="1">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">name.</mrk> <mrk mid="1" mtype="seg">This class name must have been registered by a previous call to the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegisterClass.htm"></bpt>_WinAPI_RegisterClass()<ept id="1">&lt;/a></ept></mrk></target>
<note>$sClass</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> or <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegisterClassEx.htm"></bpt>_WinAPI_RegisterClassEx()<ept id="1">&lt;/a></ept> function. If this parameter is an atom, it must be in the low-order</source>
<seg-source> <mrk mid="0" mtype="seg">or <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegisterClassEx.htm"></bpt>_WinAPI_RegisterClassEx()<ept id="1">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">If this parameter is an atom, it must be in the low-order</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">or <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegisterClassEx.htm"></bpt>_WinAPI_RegisterClassEx()<ept id="1">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">If this parameter is an atom, it must be in the low-order</mrk></target>
<note>$sClass</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> word of $sClass; the high-order word must be zero. </source>
<seg-source> <mrk mid="0" mtype="seg">word of $sClass; the high-order word must be zero.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">word of $sClass; the high-order word must be zero.</mrk> </target>
<note>$sClass</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Handle to the instance of the module that created the class.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Handle to the instance of the module that created the class.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Handle to the instance of the module that created the class.</mrk></target>
<note>$hInstance</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">True</source>
<seg-source><mrk mid="0" mtype="seg">True</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">True</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">False</source>
<seg-source><mrk mid="0" mtype="seg">False</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">False</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Before calling this function, an application must destroy all windows created with the specified class.</source>
<seg-source><mrk mid="0" mtype="seg">Before calling this function, an application must destroy all windows created with the specified class.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Before calling this function, an application must destroy all windows created with the specified class.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> All window classes that an application registers are unregistered when it terminates.</source>
<seg-source> <mrk mid="0" mtype="seg">All window classes that an application registers are unregistered when it terminates.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">All window classes that an application registers are unregistered when it terminates.</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(UnregisterClass);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>UnregisterClass<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(UnregisterClass);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>UnregisterClass<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(UnregisterClass);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>UnregisterClass<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
