<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_WinAPI_CreateString.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Copies a specified string to the newly allocated memory block and returns its pointer</source>
<seg-source><mrk mid="0" mtype="seg">Copies a specified string to the newly allocated memory block and returns its pointer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Copies a specified string to the newly allocated memory block and returns its pointer</mrk></target>
<note>Function _WinAPI_CreateString</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">The source string to be copied.</source>
<seg-source><mrk mid="0" mtype="seg">The source string to be copied.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The source string to be copied.</mrk></target>
<note>$sString</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> A pointer to the existing string that to be replaced by a new string.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">A pointer to the existing string that to be replaced by a new string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">A pointer to the existing string that to be replaced by a new string.</mrk></target>
<note>$pString</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> If this parameter is a valid string pointer, the memory will be reallocated for a new string.</source>
<seg-source> <mrk mid="0" mtype="seg">If this parameter is a valid string pointer, the memory will be reallocated for a new string.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this parameter is a valid string pointer, the memory will be reallocated for a new string.</mrk></target>
<note>$pString</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> However, the new memory is allocated at a different location. Therefore, you should always use the pointer that returns this function.</source>
<seg-source> <mrk mid="0" mtype="seg">However, the new memory is allocated at a different location.</mrk> <mrk mid="1" mtype="seg">Therefore, you should always use the pointer that returns this function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">However, the new memory is allocated at a different location.</mrk> <mrk mid="1" mtype="seg">Therefore, you should always use the pointer that returns this function.</mrk></target>
<note>$pString</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> If this parameter is 0 (Default) or invalid string pointer, the function just allocates a new memory.</source>
<seg-source> <mrk mid="0" mtype="seg">If this parameter is 0 (Default) or invalid string pointer, the function just allocates a new memory.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this parameter is 0 (Default) or invalid string pointer, the function just allocates a new memory.</mrk></target>
<note>$pString</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> The required buffer length, in TCHARs, without null-terminating character.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The required buffer length, in TCHARs, without null-terminating character.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The required buffer length, in TCHARs, without null-terminating character.</mrk></target>
<note>$iLength</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> If this parameter is (-1), the buffer length will be equal to the length of the source string.</source>
<seg-source> <mrk mid="0" mtype="seg">If this parameter is (-1), the buffer length will be equal to the length of the source string.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this parameter is (-1), the buffer length will be equal to the length of the source string.</mrk></target>
<note>$iLength</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> If $iLength is less than a source string, the string will be truncated to the specified length. Default is 1.</source>
<seg-source> <mrk mid="0" mtype="seg">If $iLength is less than a source string, the string will be truncated to the specified length.</mrk> <mrk mid="1" mtype="seg">Default is 1.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If $iLength is less than a source string, the string will be truncated to the specified length.</mrk> <mrk mid="1" mtype="seg">Default is 1.</mrk></target>
<note>$iLength</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies whether a string is Unicode or ASCII code of a character, valid values:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies whether a string is Unicode or ASCII code of a character, valid values:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies whether a string is Unicode or ASCII code of a character, valid values:</mrk></target>
<note>$bUnicode</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">     True - Unicode (Default).</source>
<seg-source> <mrk mid="0" mtype="seg">    True - Unicode (Default).</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    True - Unicode (Default).</mrk></target>
<note>$bUnicode</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">     False - ASCII.</source>
<seg-source> <mrk mid="0" mtype="seg">    False - ASCII.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    False - ASCII.</mrk></target>
<note>$bUnicode</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies whether to exit the script if not enough memory, valid values:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies whether to exit the script if not enough memory, valid values:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies whether to exit the script if not enough memory, valid values:</mrk></target>
<note>$bAbort</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">     True - Displaying an error message and exit the script with error code 1 (Default).</source>
<seg-source> <mrk mid="0" mtype="seg">    True - Displaying an error message and exit the script with error code 1 (Default).</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    True - Displaying an error message and exit the script with error code 1 (Default).</mrk></target>
<note>$bAbort</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">     False - Continue the script and return an error.</source>
<seg-source> <mrk mid="0" mtype="seg">    False - Continue the script and return an error.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    False - Continue the script and return an error.</mrk></target>
<note>$bAbort</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Success: A pointer to the new null-terminated string, @extended returns the length of the string buffer, in TCHARs (not including the null-terminating character).</source>
<seg-source><mrk mid="0" mtype="seg">Success:</mrk> <mrk mid="1" mtype="seg">A pointer to the new null-terminated string, @extended returns the length of the string buffer, in TCHARs (not including the null-terminating character).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Success:</mrk> <mrk mid="1" mtype="seg">A pointer to the new null-terminated string, @extended returns the length of the string buffer, in TCHARs (not including the null-terminating character).</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> Failure: 0.</source>
<seg-source> <mrk mid="0" mtype="seg">Failure:</mrk> <mrk mid="1" mtype="seg">0.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Failure:</mrk> <mrk mid="1" mtype="seg">0.</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">When a string is no longer needed, you must destroy it by calling the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_FreeMemory.htm"></bpt>_WinAPI_FreeMemory()<ept id="1">&lt;/a></ept> function.</source>
<seg-source><mrk mid="0" mtype="seg">When a string is no longer needed, you must destroy it by calling the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_FreeMemory.htm"></bpt>_WinAPI_FreeMemory()<ept id="1">&lt;/a></ept> function.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When a string is no longer needed, you must destroy it by calling the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_FreeMemory.htm"></bpt>_WinAPI_FreeMemory()<ept id="1">&lt;/a></ept> function.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">MyMessage</source>
<seg-source><mrk mid="0" mtype="seg">MyMessage</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">MyMessage</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Test</source>
<seg-source><mrk mid="0" mtype="seg">Test</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Test</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">.au3</source>
<seg-source><mrk mid="0" mtype="seg">.au3</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">.au3</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">()</source>
<seg-source><mrk mid="0" mtype="seg">()</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">()</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Send</source>
<seg-source><mrk mid="0" mtype="seg">Send</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Send</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">WM_MYMESSAGE</source>
<seg-source><mrk mid="0" mtype="seg">WM_MYMESSAGE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">WM_MYMESSAGE</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">WM_MYMESSAGE | WP =</source>
<seg-source><mrk mid="0" mtype="seg">WM_MYMESSAGE | WP =</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">WM_MYMESSAGE | WP =</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">| LP =</source>
<seg-source><mrk mid="0" mtype="seg">| LP =</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">| LP =</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">| EXTRA = "</source>
<seg-source><mrk mid="0" mtype="seg">| EXTRA = "</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">| EXTRA = "</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
