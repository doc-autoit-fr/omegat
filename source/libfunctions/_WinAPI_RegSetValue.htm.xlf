<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_WinAPI_RegSetValue.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Sets the data and type of a specified value under a registry key</source>
<seg-source><mrk mid="0" mtype="seg">Sets the data and type of a specified value under a registry key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Sets the data and type of a specified value under a registry key</mrk></target>
<note>Function _WinAPI_RegSetValue</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> Handle to an open registry key. The key must have been opened with the $KEY_SET_VALUE access right.</source>
<seg-source> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">The key must have been opened with the $KEY_SET_VALUE access right.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">The key must have been opened with the $KEY_SET_VALUE access right.</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function. It can also</source>
<seg-source> <mrk mid="0" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">It can also</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">It can also</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> be one of the following predefined keys.</source>
<seg-source> <mrk mid="0" mtype="seg">be one of the following predefined keys.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">be one of the following predefined keys.</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> $HKEY_CLASSES_ROOT</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> $HKEY_CURRENT_CONFIG</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CURRENT_CONFIG</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CURRENT_CONFIG</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> $HKEY_CURRENT_USER</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> $HKEY_LOCAL_MACHINE</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> $HKEY_PERFORMANCE_DATA</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_DATA</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_DATA</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> $HKEY_USERS </source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">The name of the value to be set. If a value with this name is not already present in the key,</source>
<seg-source><mrk mid="0" mtype="seg">The name of the value to be set.</mrk> <mrk mid="1" mtype="seg">If a value with this name is not already present in the key,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The name of the value to be set.</mrk> <mrk mid="1" mtype="seg">If a value with this name is not already present in the key,</mrk></target>
<note>$sValueName</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> the function adds it to the key. If $sValueName is empty string, the function sets the type and</source>
<seg-source> <mrk mid="0" mtype="seg">the function adds it to the key.</mrk> <mrk mid="1" mtype="seg">If $sValueName is empty string, the function sets the type and</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">the function adds it to the key.</mrk> <mrk mid="1" mtype="seg">If $sValueName is empty string, the function sets the type and</mrk></target>
<note>$sValueName</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> data for the key's unnamed or default value.</source>
<seg-source> <mrk mid="0" mtype="seg">data for the key's unnamed or default value.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">data for the key's unnamed or default value.</mrk></target>
<note>$sValueName</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">The type of data. This parameter can be one of the following values.</source>
<seg-source><mrk mid="0" mtype="seg">The type of data.</mrk> <mrk mid="1" mtype="seg">This parameter can be one of the following values.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The type of data.</mrk> <mrk mid="1" mtype="seg">This parameter can be one of the following values.</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> $REG_BINARY</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_BINARY</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_BINARY</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> $REG_DWORD</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_DWORD</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_DWORD</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> $REG_DWORD_BIG_ENDIAN</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_DWORD_BIG_ENDIAN</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_DWORD_BIG_ENDIAN</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> $REG_DWORD_LITTLE_ENDIAN</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_DWORD_LITTLE_ENDIAN</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_DWORD_LITTLE_ENDIAN</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> $REG_EXPAND_SZ</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_EXPAND_SZ</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_EXPAND_SZ</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> $REG_LINK</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_LINK</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_LINK</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> $REG_MULTI_SZ</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_MULTI_SZ</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_MULTI_SZ</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> $REG_NONE</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_NONE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_NONE</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> $REG_QWORD</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_QWORD</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_QWORD</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> $REG_QWORD_LITTLE_ENDIAN</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_QWORD_LITTLE_ENDIAN</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_QWORD_LITTLE_ENDIAN</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> $REG_SZ</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_SZ</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_SZ</mrk></target>
<note>$iType</note>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">The structure (buffer) that contains the data to be stored. For string-based types, such as REG_SZ,</source>
<seg-source><mrk mid="0" mtype="seg">The structure (buffer) that contains the data to be stored.</mrk> <mrk mid="1" mtype="seg">For string-based types, such as REG_SZ,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The structure (buffer) that contains the data to be stored.</mrk> <mrk mid="1" mtype="seg">For string-based types, such as REG_SZ,</mrk></target>
<note>$tValueData</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> the string must be null-terminated. With the REG_MULTI_SZ data type, the string must be terminated</source>
<seg-source> <mrk mid="0" mtype="seg">the string must be null-terminated.</mrk> <mrk mid="1" mtype="seg">With the REG_MULTI_SZ data type, the string must be terminated</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">the string must be null-terminated.</mrk> <mrk mid="1" mtype="seg">With the REG_MULTI_SZ data type, the string must be terminated</mrk></target>
<note>$tValueData</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en"> with two null characters. A backslash must be preceded by another backslash as an escape character.</source>
<seg-source> <mrk mid="0" mtype="seg">with two null characters.</mrk> <mrk mid="1" mtype="seg">A backslash must be preceded by another backslash as an escape character.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">with two null characters.</mrk> <mrk mid="1" mtype="seg">A backslash must be preceded by another backslash as an escape character.</mrk></target>
<note>$tValueData</note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en"> For example, specify "C:\\mydir\\myfile" to store the string "C:\mydir\myfile".</source>
<seg-source> <mrk mid="0" mtype="seg">For example, specify "C:\\mydir\\myfile" to store the string "C:\mydir\myfile".</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">For example, specify "C:\\mydir\\myfile" to store the string "C:\mydir\myfile".</mrk></target>
<note>$tValueData</note>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">The size of the data, in bytes. If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type,</source>
<seg-source><mrk mid="0" mtype="seg">The size of the data, in bytes.</mrk> <mrk mid="1" mtype="seg">If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The size of the data, in bytes.</mrk> <mrk mid="1" mtype="seg">If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type,</mrk></target>
<note>$iBytes</note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en"> this size includes any terminating null character or characters unless the data was stored</source>
<seg-source> <mrk mid="0" mtype="seg">this size includes any terminating null character or characters unless the data was stored</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">this size includes any terminating null character or characters unless the data was stored</mrk></target>
<note>$iBytes</note>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en"> without them.</source>
<seg-source> <mrk mid="0" mtype="seg">without them.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">without them.</mrk></target>
<note>$iBytes</note>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">1.</source>
<seg-source><mrk mid="0" mtype="seg">1.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</source>
<seg-source><mrk mid="0" mtype="seg">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegSetValueEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegSetValueEx<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegSetValueEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegSetValueEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegSetValueEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegSetValueEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
