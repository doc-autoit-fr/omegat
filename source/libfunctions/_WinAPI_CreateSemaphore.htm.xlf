<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_WinAPI_CreateSemaphore.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Creates or opens a named or unnamed semaphore object</source>
<seg-source><mrk mid="0" mtype="seg">Creates or opens a named or unnamed semaphore object</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creates or opens a named or unnamed semaphore object</mrk></target>
<note>Function _WinAPI_CreateSemaphore</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">The name of the semaphore to be opened. Name comparisons are case sensitive.</source>
<seg-source><mrk mid="0" mtype="seg">The name of the semaphore to be opened.</mrk> <mrk mid="1" mtype="seg">Name comparisons are case sensitive.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The name of the semaphore to be opened.</mrk> <mrk mid="1" mtype="seg">Name comparisons are case sensitive.</mrk></target>
<note>$sSemaphore</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">The initial count for the semaphore object. This value must be greater than or equal to zero and less than or equal to $iMaximum.</source>
<seg-source><mrk mid="0" mtype="seg">The initial count for the semaphore object.</mrk> <mrk mid="1" mtype="seg">This value must be greater than or equal to zero and less than or equal to $iMaximum.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The initial count for the semaphore object.</mrk> <mrk mid="1" mtype="seg">This value must be greater than or equal to zero and less than or equal to $iMaximum.</mrk></target>
<note>$iInitial</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">The maximum count for the semaphore object. This value must be greater than zero.</source>
<seg-source><mrk mid="0" mtype="seg">The maximum count for the semaphore object.</mrk> <mrk mid="1" mtype="seg">This value must be greater than zero.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The maximum count for the semaphore object.</mrk> <mrk mid="1" mtype="seg">This value must be greater than zero.</mrk></target>
<note>$iMaximum</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> $tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new semaphore.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new semaphore.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagSECURITY_ATTRIBUTES structure that specifies a security descriptor for the new semaphore.</mrk></target>
<note>$tSecurity</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> If this parameter is 0 (Default), the semaphore gets a default security descriptor.</source>
<seg-source> <mrk mid="0" mtype="seg">If this parameter is 0 (Default), the semaphore gets a default security descriptor.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this parameter is 0 (Default), the semaphore gets a default security descriptor.</mrk></target>
<note>$tSecurity</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">The handle to the newly created semaphore object.</source>
<seg-source><mrk mid="0" mtype="seg">The handle to the newly created semaphore object.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The handle to the newly created semaphore object.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> 0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information. </source>
<seg-source> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information.</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">If the named semaphore object existed before the function call, the function returns a handle to the existing object.</source>
<seg-source><mrk mid="0" mtype="seg">If the named semaphore object existed before the function call, the function returns a handle to the existing object.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the named semaphore object existed before the function call, the function returns a handle to the existing object.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> Any process can specify the semaphore-object handle in a call to _WinAPI_WaitFor... functions. The single-object wait functions return when the state of the specified object is signaled. The multiple-object wait functions can be instructed to return either when any one or when all of the specified objects are signaled. When a wait function returns, the waiting process is released to continue its execution.</source>
<seg-source> <mrk mid="0" mtype="seg">Any process can specify the semaphore-object handle in a call to _WinAPI_WaitFor... functions.</mrk> <mrk mid="1" mtype="seg">The single-object wait functions return when the state of the specified object is signaled.</mrk> <mrk mid="2" mtype="seg">The multiple-object wait functions can be instructed to return either when any one or when all of the specified objects are signaled.</mrk> <mrk mid="3" mtype="seg">When a wait function returns, the waiting process is released to continue its execution.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Any process can specify the semaphore-object handle in a call to _WinAPI_WaitFor... functions.</mrk> <mrk mid="1" mtype="seg">The single-object wait functions return when the state of the specified object is signaled.</mrk> <mrk mid="2" mtype="seg">The multiple-object wait functions can be instructed to return either when any one or when all of the specified objects are signaled.</mrk> <mrk mid="3" mtype="seg">When a wait function returns, the waiting process is released to continue its execution.</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> The state of a semaphore object is signaled when its count is greater than zero, and nonsignaled when its count is equal to zero.</source>
<seg-source> <mrk mid="0" mtype="seg">The state of a semaphore object is signaled when its count is greater than zero, and nonsignaled when its count is equal to zero.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The state of a semaphore object is signaled when its count is greater than zero, and nonsignaled when its count is equal to zero.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> The $iInitial parameter specifies the initial count. Each time a waiting process is released because of the semaphore's signaled state, the count of the semaphore is decreased by one.</source>
<seg-source> <mrk mid="0" mtype="seg">The $iInitial parameter specifies the initial count.</mrk> <mrk mid="1" mtype="seg">Each time a waiting process is released because of the semaphore's signaled state, the count of the semaphore is decreased by one.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The $iInitial parameter specifies the initial count.</mrk> <mrk mid="1" mtype="seg">Each time a waiting process is released because of the semaphore's signaled state, the count of the semaphore is decreased by one.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_ReleaseSemaphore.htm"></bpt>_WinAPI_ReleaseSemaphore()<ept id="1">&lt;/a></ept> function to increment a semaphore's count by a specified amount.</source>
<seg-source> <mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_ReleaseSemaphore.htm"></bpt>_WinAPI_ReleaseSemaphore()<ept id="1">&lt;/a></ept> function to increment a semaphore's count by a specified amount.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_ReleaseSemaphore.htm"></bpt>_WinAPI_ReleaseSemaphore()<ept id="1">&lt;/a></ept> function to increment a semaphore's count by a specified amount.</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> The count can never be less than zero or greater than the value specified in the $iMaximum parameter.</source>
<seg-source> <mrk mid="0" mtype="seg">The count can never be less than zero or greater than the value specified in the $iMaximum parameter.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The count can never be less than zero or greater than the value specified in the $iMaximum parameter.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseHandle.htm"></bpt>_WinAPI_CloseHandle()<ept id="1">&lt;/a></ept> function to close the handle. The system closes the handle automatically when the process terminates. The semaphore object is destroyed when its last handle has been closed.</source>
<seg-source> <mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseHandle.htm"></bpt>_WinAPI_CloseHandle()<ept id="1">&lt;/a></ept> function to close the handle.</mrk> <mrk mid="1" mtype="seg">The system closes the handle automatically when the process terminates.</mrk> <mrk mid="2" mtype="seg">The semaphore object is destroyed when its last handle has been closed.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseHandle.htm"></bpt>_WinAPI_CloseHandle()<ept id="1">&lt;/a></ept> function to close the handle.</mrk> <mrk mid="1" mtype="seg">The system closes the handle automatically when the process terminates.</mrk> <mrk mid="2" mtype="seg">The semaphore object is destroyed when its last handle has been closed.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CreateSemaphore);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CreateSemaphore<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CreateSemaphore);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CreateSemaphore<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CreateSemaphore);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CreateSemaphore<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">To run this script, you must first compile it and then run the (.exe) file.</source>
<seg-source><mrk mid="0" mtype="seg">To run this script, you must first compile it and then run the (.exe) file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To run this script, you must first compile it and then run the (.exe) file.</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">MySemaphore</source>
<seg-source><mrk mid="0" mtype="seg">MySemaphore</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">MySemaphore</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Test</source>
<seg-source><mrk mid="0" mtype="seg">Test</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Test</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">.au3</source>
<seg-source><mrk mid="0" mtype="seg">.au3</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">.au3</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">()</source>
<seg-source><mrk mid="0" mtype="seg">()</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">()</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
