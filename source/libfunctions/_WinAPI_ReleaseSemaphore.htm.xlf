<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="libfunctions/_WinAPI_ReleaseSemaphore.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Increases the count of the specified semaphore object by a specified amount</source>
<seg-source><mrk mid="0" mtype="seg">Increases the count of the specified semaphore object by a specified amount</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Increases the count of the specified semaphore object by a specified amount</mrk></target>
<note>Function _WinAPI_ReleaseSemaphore</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> Handle to the semaphore object. The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateSemaphore.htm"></bpt>_WinAPI_CreateSemaphore()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_OpenSemaphore.htm"></bpt>_WinAPI_OpenSemaphore()<ept id="2">&lt;/a></ept> function</source>
<seg-source> <mrk mid="0" mtype="seg">Handle to the semaphore object.</mrk> <mrk mid="1" mtype="seg">The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateSemaphore.htm"></bpt>_WinAPI_CreateSemaphore()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_OpenSemaphore.htm"></bpt>_WinAPI_OpenSemaphore()<ept id="2">&lt;/a></ept> function</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Handle to the semaphore object.</mrk> <mrk mid="1" mtype="seg">The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateSemaphore.htm"></bpt>_WinAPI_CreateSemaphore()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_OpenSemaphore.htm"></bpt>_WinAPI_OpenSemaphore()<ept id="2">&lt;/a></ept> function</mrk></target>
<note>$hSemaphore</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> returns this handle. </source>
<seg-source> <mrk mid="0" mtype="seg">returns this handle.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">returns this handle.</mrk> </target>
<note>$hSemaphore</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> The amount by which the semaphore object's current count is to be increased. The value must be greater</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The amount by which the semaphore object's current count is to be increased.</mrk> <mrk mid="2" mtype="seg">The value must be greater</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The amount by which the semaphore object's current count is to be increased.</mrk> <mrk mid="2" mtype="seg">The value must be greater</mrk></target>
<note>$iIncrease</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> than zero. If the specified amount would cause the semaphore's count to exceed the maximum count that</source>
<seg-source> <mrk mid="0" mtype="seg">than zero.</mrk> <mrk mid="1" mtype="seg">If the specified amount would cause the semaphore's count to exceed the maximum count that</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">than zero.</mrk> <mrk mid="1" mtype="seg">If the specified amount would cause the semaphore's count to exceed the maximum count that</mrk></target>
<note>$iIncrease</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> was specified when the semaphore was created, the count is not changed and the function returns 0. Default is 1.</source>
<seg-source> <mrk mid="0" mtype="seg">was specified when the semaphore was created, the count is not changed and the function returns 0.</mrk> <mrk mid="1" mtype="seg">Default is 1.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">was specified when the semaphore was created, the count is not changed and the function returns 0.</mrk> <mrk mid="1" mtype="seg">Default is 1.</mrk></target>
<note>$iIncrease</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">The previous count for the semaphore.</source>
<seg-source><mrk mid="0" mtype="seg">The previous count for the semaphore.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The previous count for the semaphore.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> Sets the @error flag to non-zero, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to et extendd error information. </source>
<seg-source> <mrk mid="0" mtype="seg">Sets the @error flag to non-zero, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to et extendd error information.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Sets the @error flag to non-zero, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to et extendd error information.</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">The state of a semaphore object is signaled when its count is greater than zero and nonsignaled when its count</source>
<seg-source><mrk mid="0" mtype="seg">The state of a semaphore object is signaled when its count is greater than zero and nonsignaled when its count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The state of a semaphore object is signaled when its count is greater than zero and nonsignaled when its count</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> is equal to zero. The process that calls the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateSemaphore.htm"></bpt>_WinAPI_CreateSemaphore()<ept id="1">&lt;/a></ept> function specifies the semaphore's initial</source>
<seg-source> <mrk mid="0" mtype="seg">is equal to zero.</mrk> <mrk mid="1" mtype="seg">The process that calls the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateSemaphore.htm"></bpt>_WinAPI_CreateSemaphore()<ept id="1">&lt;/a></ept> function specifies the semaphore's initial</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">is equal to zero.</mrk> <mrk mid="1" mtype="seg">The process that calls the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateSemaphore.htm"></bpt>_WinAPI_CreateSemaphore()<ept id="1">&lt;/a></ept> function specifies the semaphore's initial</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> count. Each time a waiting process is released because of the semaphore's signaled state, the count of the</source>
<seg-source> <mrk mid="0" mtype="seg">count.</mrk> <mrk mid="1" mtype="seg">Each time a waiting process is released because of the semaphore's signaled state, the count of the</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">count.</mrk> <mrk mid="1" mtype="seg">Each time a waiting process is released because of the semaphore's signaled state, the count of the</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> semaphore is decreased by one.</source>
<seg-source> <mrk mid="0" mtype="seg">semaphore is decreased by one.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">semaphore is decreased by one.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(ReleaseSemaphore);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>ReleaseSemaphore<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(ReleaseSemaphore);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>ReleaseSemaphore<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(ReleaseSemaphore);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>ReleaseSemaphore<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">To run this script, you must first compile it and then run the (.exe) file.</source>
<seg-source><mrk mid="0" mtype="seg">To run this script, you must first compile it and then run the (.exe) file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">To run this script, you must first compile it and then run the (.exe) file.</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">MySemaphore</source>
<seg-source><mrk mid="0" mtype="seg">MySemaphore</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">MySemaphore</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Test</source>
<seg-source><mrk mid="0" mtype="seg">Test</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Test</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">.au3</source>
<seg-source><mrk mid="0" mtype="seg">.au3</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">.au3</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">()</source>
<seg-source><mrk mid="0" mtype="seg">()</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">()</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
