<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_CreateJobObject.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Creates or opens a job object</source>
<seg-source><mrk mid="0" mtype="seg">Creates or opens a job object</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creates or opens a job object</mrk></target>
<note>Function _WinAPI_CreateJobObject</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> The name of the job. Name comparison is case-sensitive. If this parameter is '', the job is created without a name.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The name of the job.</mrk> <mrk mid="2" mtype="seg">Name comparison is case-sensitive.</mrk> <mrk mid="3" mtype="seg">If this parameter is '', the job is created without a name.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The name of the job.</mrk> <mrk mid="2" mtype="seg">Name comparison is case-sensitive.</mrk> <mrk mid="3" mtype="seg">If this parameter is '', the job is created without a name.</mrk></target>
<note>$sName</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> $tagSECURITY_ATTRIBUTES structure that specifies the security descriptor for the job object and determines whether child processes can inherit the returned handle.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagSECURITY_ATTRIBUTES structure that specifies the security descriptor for the job object and determines whether child processes can inherit the returned handle.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagSECURITY_ATTRIBUTES structure that specifies the security descriptor for the job object and determines whether child processes can inherit the returned handle.</mrk></target>
<note>$tSecurity</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> If this parameter is 0 (Default), the job object gets a default security descriptor and the handle cannot be inherited.</source>
<seg-source> <mrk mid="0" mtype="seg">If this parameter is 0 (Default), the job object gets a default security descriptor and the handle cannot be inherited.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this parameter is 0 (Default), the job object gets a default security descriptor and the handle cannot be inherited.</mrk></target>
<note>$tSecurity</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">[optional] Handle to the job object. If the object existed before the function call, the function returns a handle to the existing job object.</source>
<seg-source><mrk mid="0" mtype="seg">[optional]</mrk> <mrk mid="1" mtype="seg">Handle to the job object.</mrk> <mrk mid="2" mtype="seg">If the object existed before the function call, the function returns a handle to the existing job object.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">[optional]</mrk> <mrk mid="1" mtype="seg">Handle to the job object.</mrk> <mrk mid="2" mtype="seg">If the object existed before the function call, the function returns a handle to the existing job object.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> 0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information. </source>
<seg-source> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information.</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">When a job is created, its accounting information is initialized to zero, all limits are inactive, and there are no associated processes. To assign a process to a job object, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_AssignProcessToJobObject.htm"></bpt>_WinAPI_AssignProcessToJobObject()<ept id="1">&lt;/a></ept> function.</source>
<seg-source><mrk mid="0" mtype="seg">When a job is created, its accounting information is initialized to zero, all limits are inactive, and there are no associated processes.</mrk> <mrk mid="1" mtype="seg">To assign a process to a job object, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_AssignProcessToJobObject.htm"></bpt>_WinAPI_AssignProcessToJobObject()<ept id="1">&lt;/a></ept> function.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When a job is created, its accounting information is initialized to zero, all limits are inactive, and there are no associated processes.</mrk> <mrk mid="1" mtype="seg">To assign a process to a job object, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_AssignProcessToJobObject.htm"></bpt>_WinAPI_AssignProcessToJobObject()<ept id="1">&lt;/a></ept> function.</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> To set limits for a job, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_SetInformationJobObject.htm"></bpt>_WinAPI_SetInformationJobObject()<ept id="1">&lt;/a></ept> function.</source>
<seg-source> <mrk mid="0" mtype="seg">To set limits for a job, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_SetInformationJobObject.htm"></bpt>_WinAPI_SetInformationJobObject()<ept id="1">&lt;/a></ept> function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">To set limits for a job, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_SetInformationJobObject.htm"></bpt>_WinAPI_SetInformationJobObject()<ept id="1">&lt;/a></ept> function.</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> To query accounting information, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_QueryInformationJobObject.htm"></bpt>_WinAPI_QueryInformationJobObject()<ept id="1">&lt;/a></ept> function.</source>
<seg-source> <mrk mid="0" mtype="seg">To query accounting information, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_QueryInformationJobObject.htm"></bpt>_WinAPI_QueryInformationJobObject()<ept id="1">&lt;/a></ept> function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">To query accounting information, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_QueryInformationJobObject.htm"></bpt>_WinAPI_QueryInformationJobObject()<ept id="1">&lt;/a></ept> function.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> All processes associated with a job must run in the same session. A job is associated with the session of the first process to be assigned to the job.</source>
<seg-source> <mrk mid="0" mtype="seg">All processes associated with a job must run in the same session.</mrk> <mrk mid="1" mtype="seg">A job is associated with the session of the first process to be assigned to the job.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">All processes associated with a job must run in the same session.</mrk> <mrk mid="1" mtype="seg">A job is associated with the session of the first process to be assigned to the job.</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> To close a job object handle, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseHandle.htm"></bpt>_WinAPI_CloseHandle()<ept id="1">&lt;/a></ept> function. The job is destroyed when its last handle has been closed and all associated processes have exited.</source>
<seg-source> <mrk mid="0" mtype="seg">To close a job object handle, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseHandle.htm"></bpt>_WinAPI_CloseHandle()<ept id="1">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">The job is destroyed when its last handle has been closed and all associated processes have exited.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">To close a job object handle, use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CloseHandle.htm"></bpt>_WinAPI_CloseHandle()<ept id="1">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">The job is destroyed when its last handle has been closed and all associated processes have exited.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CreateJobObject);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CreateJobObject<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CreateJobObject);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CreateJobObject<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CreateJobObject);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CreateJobObject<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">\Test.au3</source>
<seg-source><mrk mid="0" mtype="seg">\Test.au3</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">\Test.au3</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Create temporary .au3 file</source>
<seg-source><mrk mid="0" mtype="seg">Create temporary .au3 file</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create temporary .au3 file</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Run(@SystemDir &amp; "\calc.exe")</source>
<seg-source><mrk mid="0" mtype="seg">Run(@SystemDir &amp; "\calc.exe")</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Run(@SystemDir &amp; "\calc.exe")</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Sleep(100)</source>
<seg-source><mrk mid="0" mtype="seg">Sleep(100)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Sleep(100)</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">Run 3 times the "calc.exe" and wait until you have closed all 3 processes</source>
<seg-source><mrk mid="0" mtype="seg">Run 3 times the "calc.exe" and wait until you have closed all 3 processes</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Run 3 times the "calc.exe" and wait until you have closed all 3 processes</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">/AutoIt3ExecuteScript "</source>
<seg-source><mrk mid="0" mtype="seg">/AutoIt3ExecuteScript "</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">/AutoIt3ExecuteScript "</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Delete temporary .au3 file</source>
<seg-source><mrk mid="0" mtype="seg">Delete temporary .au3 file</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Delete temporary .au3 file</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Original idea by amel27</source>
<seg-source><mrk mid="0" mtype="seg">Original idea by amel27</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Original idea by amel27</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Size</source>
<seg-source><mrk mid="0" mtype="seg">Size</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Size</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">hProcess</source>
<seg-source><mrk mid="0" mtype="seg">hProcess</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">hProcess</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">hThread</source>
<seg-source><mrk mid="0" mtype="seg">hThread</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">hThread</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">ActiveProcesses</source>
<seg-source><mrk mid="0" mtype="seg">ActiveProcesses</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ActiveProcesses</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">kernel32.dll</source>
<seg-source><mrk mid="0" mtype="seg">kernel32.dll</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">kernel32.dll</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">dword</source>
<seg-source><mrk mid="0" mtype="seg">dword</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">dword</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">ResumeThread</source>
<seg-source><mrk mid="0" mtype="seg">ResumeThread</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ResumeThread</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">ptr</source>
<seg-source><mrk mid="0" mtype="seg">ptr</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ptr</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
