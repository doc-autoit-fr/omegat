<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_FileReadToArray.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Reads the specified file into a 1D or 2D array</source>
<seg-source><mrk mid="0" mtype="seg">Reads the specified file into a 1D or 2D array</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reads the specified file into a 1D or 2D array</mrk></target>
<note>Function _FileReadToArray</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Path and filename of the file to be read.</source>
<seg-source><mrk mid="0" mtype="seg">Path and filename of the file to be read.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Path and filename of the file to be read.</mrk></target>
<note>$sFilePath</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Variable to hold returned data - does not need to be an array.</source>
<seg-source><mrk mid="0" mtype="seg">Variable to hold returned data - does not need to be an array.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Variable to hold returned data - does not need to be an array.</mrk></target>
<note>$vReturn</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> <bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Add multiple values together as required</source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Add multiple values together as required</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Add multiple values together as required</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> $FRTA_NOCOUNT (0) - array is 0-based use <bpt id="1" ctype="x-a">&lt;a href="../functions/UBound.htm"></bpt>UBound()<ept id="1">&lt;/a></ept> to get size</source>
<seg-source> <mrk mid="0" mtype="seg">$FRTA_NOCOUNT (0) - array is 0-based use <bpt id="1" ctype="x-a">&lt;a href="../functions/UBound.htm"></bpt>UBound()<ept id="1">&lt;/a></ept> to get size</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$FRTA_NOCOUNT (0) - array is 0-based use <bpt id="1" ctype="x-a">&lt;a href="../functions/UBound.htm"></bpt>UBound()<ept id="1">&lt;/a></ept> to get size</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> $FRTA_COUNT (1) - array count in the first element. (default)</source>
<seg-source> <mrk mid="0" mtype="seg">$FRTA_COUNT (1) - array count in the first element.</mrk> <mrk mid="1" mtype="seg">(default)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$FRTA_COUNT (1) - array count in the first element.</mrk> <mrk mid="1" mtype="seg">(default)</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> $FRTA_INTARRAYS (2) - Create "array of arrays" - see remarks</source>
<seg-source> <mrk mid="0" mtype="seg">$FRTA_INTARRAYS (2) - Create "array of arrays" - see remarks</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$FRTA_INTARRAYS (2) - Create "array of arrays" - see remarks</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> $FRTA_ENTIRESPLIT (4) - Use entire delimiter string as split point (default each character defines a split point) </source>
<seg-source> <mrk mid="0" mtype="seg">$FRTA_ENTIRESPLIT (4) - Use entire delimiter string as split point (default each character defines a split point)</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$FRTA_ENTIRESPLIT (4) - Use entire delimiter string as split point (default each character defines a split point)</mrk> </target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk></target>
<note>$sDelimiter</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> Used to further split each line of the file - e.g. reading CSV files into a 2D array</source>
<seg-source> <mrk mid="0" mtype="seg">Used to further split each line of the file - e.g. reading CSV files into a 2D array</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Used to further split each line of the file - e.g. reading CSV files into a 2D array</mrk></target>
<note>$sDelimiter</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">1 and $vReturn holds an array.</source>
<seg-source><mrk mid="0" mtype="seg">1 and $vReturn holds an array.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1 and $vReturn holds an array.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">0, @error flag set to non-zero and $vReturn is set to 0.</source>
<seg-source><mrk mid="0" mtype="seg">0, @error flag set to non-zero and $vReturn is set to 0.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">0, @error flag set to non-zero and $vReturn is set to 0.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">@error:</source>
<seg-source><mrk mid="0" mtype="seg">@error:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">@error:</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">1 - Error opening specified file</source>
<seg-source><mrk mid="0" mtype="seg">1 - Error opening specified file</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1 - Error opening specified file</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> 2 - Unable to split the file</source>
<seg-source> <mrk mid="0" mtype="seg">2 - Unable to split the file</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">2 - Unable to split the file</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> 3 - File lines have different numbers of fields (only if $FRTA_INTARRAYS flag not set)</source>
<seg-source> <mrk mid="0" mtype="seg">3 - File lines have different numbers of fields (only if $FRTA_INTARRAYS flag not set)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">3 - File lines have different numbers of fields (only if $FRTA_INTARRAYS flag not set)</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> 4 - No delimiters found (only if $FRTA_INTARRAYS flag not set)</source>
<seg-source> <mrk mid="0" mtype="seg">4 - No delimiters found (only if $FRTA_INTARRAYS flag not set)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">4 - No delimiters found (only if $FRTA_INTARRAYS flag not set)</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">If a delimiter is not specified the function returns a 1D array with each element holding a line of the file - line endings can be any mix of @CR, @LF and @CRLF.</source>
<seg-source><mrk mid="0" mtype="seg">If a delimiter is not specified the function returns a 1D array with each element holding a line of the file - line endings can be any mix of @CR, @LF and @CRLF.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If a delimiter is not specified the function returns a 1D array with each element holding a line of the file - line endings can be any mix of @CR, @LF and @CRLF.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> When a delimiter is specified the function tries to further split each line of the file - how this is done depends on the setting of the $FRTA_INTARRAYS flag. If the flag is not set and each line has the same number of fields split by the delimiter then a 2D array is created, but if this is not the case then @error is set to 3 and no array is returned. If the $FRTA_INTARRAYS flag is set the function creates a 1D array where each element is a further array holding the fields of the line split on the delimiter - the lines do not need to have the same number of fields. See example below.</source>
<seg-source> <mrk mid="0" mtype="seg">When a delimiter is specified the function tries to further split each line of the file - how this is done depends on the setting of the $FRTA_INTARRAYS flag.</mrk> <mrk mid="1" mtype="seg">If the flag is not set and each line has the same number of fields split by the delimiter then a 2D array is created, but if this is not the case then @error is set to 3 and no array is returned.</mrk> <mrk mid="2" mtype="seg">If the $FRTA_INTARRAYS flag is set the function creates a 1D array where each element is a further array holding the fields of the line split on the delimiter - the lines do not need to have the same number of fields.</mrk> <mrk mid="3" mtype="seg">See example below.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">When a delimiter is specified the function tries to further split each line of the file - how this is done depends on the setting of the $FRTA_INTARRAYS flag.</mrk> <mrk mid="1" mtype="seg">If the flag is not set and each line has the same number of fields split by the delimiter then a 2D array is created, but if this is not the case then @error is set to 3 and no array is returned.</mrk> <mrk mid="2" mtype="seg">If the $FRTA_INTARRAYS flag is set the function creates a 1D array where each element is a further array holding the fields of the line split on the delimiter - the lines do not need to have the same number of fields.</mrk> <mrk mid="3" mtype="seg">See example below.</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> If the delimiter is more than a single character then the $FRTA_ENTIRESPLIT flag setting determines the split method.</source>
<seg-source> <mrk mid="0" mtype="seg">If the delimiter is more than a single character then the $FRTA_ENTIRESPLIT flag setting determines the split method.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the delimiter is more than a single character then the $FRTA_ENTIRESPLIT flag setting determines the split method.</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Example 1</source>
<seg-source><mrk mid="0" mtype="seg">Example 1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 1</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">\Test.txt</source>
<seg-source><mrk mid="0" mtype="seg">\Test.txt</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">\Test.txt</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Create 1D array</source>
<seg-source><mrk mid="0" mtype="seg">Create 1D array</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create 1D array</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Write it to file</source>
<seg-source><mrk mid="0" mtype="seg">Write it to file</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write it to file</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">Re-read it - with count</source>
<seg-source><mrk mid="0" mtype="seg">Re-read it - with count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Re-read it - with count</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">1D array - count</source>
<seg-source><mrk mid="0" mtype="seg">1D array - count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1D array - count</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Re-read it - without count</source>
<seg-source><mrk mid="0" mtype="seg">Re-read it - without count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Re-read it - without count</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">1D array - no count</source>
<seg-source><mrk mid="0" mtype="seg">1D array - no count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1D array - no count</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</source>
<seg-source><mrk mid="0" mtype="seg">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Create "square" 2D array</source>
<seg-source><mrk mid="0" mtype="seg">Create "square" 2D array</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create "square" 2D array</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">Original</source>
<seg-source><mrk mid="0" mtype="seg">Original</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Original</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Write it to file</source>
<seg-source><mrk mid="0" mtype="seg">Write it to file</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write it to file</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">,</source>
<seg-source><mrk mid="0" mtype="seg">,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">,</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">Re-read it - with count</source>
<seg-source><mrk mid="0" mtype="seg">Re-read it - with count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Re-read it - with count</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">,</source>
<seg-source><mrk mid="0" mtype="seg">,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">,</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">2D array - count</source>
<seg-source><mrk mid="0" mtype="seg">2D array - count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">2D array - count</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">Re-read it - without count</source>
<seg-source><mrk mid="0" mtype="seg">Re-read it - without count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Re-read it - without count</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">,</source>
<seg-source><mrk mid="0" mtype="seg">,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">,</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">2D array - no count</source>
<seg-source><mrk mid="0" mtype="seg">2D array - no count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">2D array - no count</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">Read into "array of arrays" with count</source>
<seg-source><mrk mid="0" mtype="seg">Read into "array of arrays" with count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Read into "array of arrays" with count</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">,</source>
<seg-source><mrk mid="0" mtype="seg">,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">,</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">Array of arrays - count</source>
<seg-source><mrk mid="0" mtype="seg">Array of arrays - count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Array of arrays - count</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">Now look inside the arrays inside the returned array</source>
<seg-source><mrk mid="0" mtype="seg">Now look inside the arrays inside the returned array</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Now look inside the arrays inside the returned array</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">Array 1 inside RetArray - count</source>
<seg-source><mrk mid="0" mtype="seg">Array 1 inside RetArray - count</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Array 1 inside RetArray - count</mrk></target>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</source>
<seg-source><mrk mid="0" mtype="seg">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</mrk></target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">Rewrite 2D array with multiple delimiters</source>
<seg-source><mrk mid="0" mtype="seg">Rewrite 2D array with multiple delimiters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Rewrite 2D array with multiple delimiters</mrk></target>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en">:|</source>
<seg-source><mrk mid="0" mtype="seg">:|</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">:|</mrk></target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">Re-read with each delimiter acting as a split point</source>
<seg-source><mrk mid="0" mtype="seg">Re-read with each delimiter acting as a split point</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Re-read with each delimiter acting as a split point</mrk></target>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en">:|</source>
<seg-source><mrk mid="0" mtype="seg">:|</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">:|</mrk></target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">Split on each character</source>
<seg-source><mrk mid="0" mtype="seg">Split on each character</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Split on each character</mrk></target>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en">Re-read with whole delimiter acting as a split point</source>
<seg-source><mrk mid="0" mtype="seg">Re-read with whole delimiter acting as a split point</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Re-read with whole delimiter acting as a split point</mrk></target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">:|</source>
<seg-source><mrk mid="0" mtype="seg">:|</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">:|</mrk></target>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en">Split on full delimiter</source>
<seg-source><mrk mid="0" mtype="seg">Split on full delimiter</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Split on full delimiter</mrk></target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">Example 2</source>
<seg-source><mrk mid="0" mtype="seg">Example 2</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 2</mrk></target>
</trans-unit>
<trans-unit id="60">
<source xml:lang="en">Define a variable to pass to _FileReadToArray.</source>
<seg-source><mrk mid="0" mtype="seg">Define a variable to pass to _FileReadToArray.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Define a variable to pass to _FileReadToArray.</mrk></target>
</trans-unit>
<trans-unit id="61">
<source xml:lang="en">Read the current script file into an array using the variable defined previously.</source>
<seg-source><mrk mid="0" mtype="seg">Read the current script file into an array using the variable defined previously.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Read the current script file into an array using the variable defined previously.</mrk></target>
</trans-unit>
<trans-unit id="62">
<source xml:lang="en">$iFlag is specified as 0 in which the array count will not be defined. Use UBound() to find the size of the array.</source>
<seg-source><mrk mid="0" mtype="seg">$iFlag is specified as 0 in which the array count will not be defined.</mrk> <mrk mid="1" mtype="seg">Use UBound() to find the size of the array.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$iFlag is specified as 0 in which the array count will not be defined.</mrk> <mrk mid="1" mtype="seg">Use UBound() to find the size of the array.</mrk></target>
</trans-unit>
<trans-unit id="63">
<source xml:lang="en">There was an error reading the file. @error:</source>
<seg-source><mrk mid="0" mtype="seg">There was an error reading the file.</mrk> <mrk mid="1" mtype="seg">@error:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">There was an error reading the file.</mrk> <mrk mid="1" mtype="seg">@error:</mrk></target>
</trans-unit>
<trans-unit id="64">
<source xml:lang="en">An error occurred reading the current script file.</source>
<seg-source><mrk mid="0" mtype="seg">An error occurred reading the current script file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An error occurred reading the current script file.</mrk></target>
</trans-unit>
<trans-unit id="65">
<source xml:lang="en">Display the array in _ArrayDisplay.</source>
<seg-source><mrk mid="0" mtype="seg">Display the array in _ArrayDisplay.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the array in _ArrayDisplay.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
