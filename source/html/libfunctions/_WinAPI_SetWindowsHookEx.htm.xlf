<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_SetWindowsHookEx.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Installs an application-defined hook procedure into a hook chain</source>
<seg-source><mrk mid="0" mtype="seg">Installs an application-defined hook procedure into a hook chain</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Installs an application-defined hook procedure into a hook chain</mrk></target>
<note>Function _WinAPI_SetWindowsHookEx</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Specifies the type of hook procedure to be installed. This parameter can be one of the following values:</source>
<seg-source><mrk mid="0" mtype="seg">Specifies the type of hook procedure to be installed.</mrk> <mrk mid="1" mtype="seg">This parameter can be one of the following values:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies the type of hook procedure to be installed.</mrk> <mrk mid="1" mtype="seg">This parameter can be one of the following values:</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">     $WH_CALLWNDPROC - Installs a hook procedure that monitors messages before the system sends them to the destination window procedure</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_CALLWNDPROC - Installs a hook procedure that monitors messages before the system sends them to the destination window procedure</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_CALLWNDPROC - Installs a hook procedure that monitors messages before the system sends them to the destination window procedure</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">     $WH_CALLWNDPROCRET - Installs a hook procedure that monitors messages after they have been processed by the destination window procedure</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_CALLWNDPROCRET - Installs a hook procedure that monitors messages after they have been processed by the destination window procedure</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_CALLWNDPROCRET - Installs a hook procedure that monitors messages after they have been processed by the destination window procedure</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">     $WH_CBT - Installs a hook procedure that receives notifications useful to a computer-based training (CBT) application</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_CBT - Installs a hook procedure that receives notifications useful to a computer-based training (CBT) application</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_CBT - Installs a hook procedure that receives notifications useful to a computer-based training (CBT) application</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">     $WH_DEBUG - Installs a hook procedure useful for debugging other hook procedures</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_DEBUG - Installs a hook procedure useful for debugging other hook procedures</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_DEBUG - Installs a hook procedure useful for debugging other hook procedures</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">     $WH_FOREGROUNDIDLE - Installs a hook procedure that will be called when the application's foreground thread is about to become idle</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_FOREGROUNDIDLE - Installs a hook procedure that will be called when the application's foreground thread is about to become idle</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_FOREGROUNDIDLE - Installs a hook procedure that will be called when the application's foreground thread is about to become idle</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">     $WH_GETMESSAGE - Installs a hook procedure that monitors messages posted to a message queue</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_GETMESSAGE - Installs a hook procedure that monitors messages posted to a message queue</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_GETMESSAGE - Installs a hook procedure that monitors messages posted to a message queue</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">     $WH_JOURNALPLAYBACK - Installs a hook procedure that posts messages previously recorded by a $WH_JOURNALRECORD hook procedure</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_JOURNALPLAYBACK - Installs a hook procedure that posts messages previously recorded by a $WH_JOURNALRECORD hook procedure</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_JOURNALPLAYBACK - Installs a hook procedure that posts messages previously recorded by a $WH_JOURNALRECORD hook procedure</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">     $WH_JOURNALRECORD - Installs a hook procedure that records input messages posted to the system message queue</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_JOURNALRECORD - Installs a hook procedure that records input messages posted to the system message queue</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_JOURNALRECORD - Installs a hook procedure that records input messages posted to the system message queue</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">     $WH_KEYBOARD - Installs a hook procedure that monitors keystroke messages</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_KEYBOARD - Installs a hook procedure that monitors keystroke messages</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_KEYBOARD - Installs a hook procedure that monitors keystroke messages</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">     $WH_KEYBOARD_LL - Installs a hook procedure that monitors low-level keyboard input events</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_KEYBOARD_LL - Installs a hook procedure that monitors low-level keyboard input events</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_KEYBOARD_LL - Installs a hook procedure that monitors low-level keyboard input events</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">     $WH_MOUSE - Installs a hook procedure that monitors mouse messages</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_MOUSE - Installs a hook procedure that monitors mouse messages</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_MOUSE - Installs a hook procedure that monitors mouse messages</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">     $WH_MOUSE_LL - Installs a hook procedure that monitors low-level mouse input events</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_MOUSE_LL - Installs a hook procedure that monitors low-level mouse input events</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_MOUSE_LL - Installs a hook procedure that monitors low-level mouse input events</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">     $WH_MSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_MSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_MSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">     $WH_SHELL - Installs a hook procedure that receives notifications useful to shell applications</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_SHELL - Installs a hook procedure that receives notifications useful to shell applications</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_SHELL - Installs a hook procedure that receives notifications useful to shell applications</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">     $WH_SYSMSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar</source>
<seg-source> <mrk mid="0" mtype="seg">    $WH_SYSMSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $WH_SYSMSGFILTER - Installs a hook procedure that monitors messages generated as a result of an input event in a dialog box, message box, menu, or scroll bar</mrk></target>
<note>$iHook</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Pointer to the hook procedure. If the $iThreadId parameter is zero or specifies the identifier of a thread created by a different process,</source>
<seg-source><mrk mid="0" mtype="seg">Pointer to the hook procedure.</mrk> <mrk mid="1" mtype="seg">If the $iThreadId parameter is zero or specifies the identifier of a thread created by a different process,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Pointer to the hook procedure.</mrk> <mrk mid="1" mtype="seg">If the $iThreadId parameter is zero or specifies the identifier of a thread created by a different process,</mrk></target>
<note>$pProc</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> the $pProc parameter must point to a hook procedure in a DLL.</source>
<seg-source> <mrk mid="0" mtype="seg">the $pProc parameter must point to a hook procedure in a DLL.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">the $pProc parameter must point to a hook procedure in a DLL.</mrk></target>
<note>$pProc</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> Otherwise, $pProc can point to a hook procedure in the code associated with the current process</source>
<seg-source> <mrk mid="0" mtype="seg">Otherwise, $pProc can point to a hook procedure in the code associated with the current process</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Otherwise, $pProc can point to a hook procedure in the code associated with the current process</mrk></target>
<note>$pProc</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Handle to the DLL containing the hook procedure pointed to by the $pProc parameter.</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the DLL containing the hook procedure pointed to by the $pProc parameter.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the DLL containing the hook procedure pointed to by the $pProc parameter.</mrk></target>
<note>$hDll</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> The $hMod parameter must be set to NULL if the $iThreadId parameter specifies a thread created by the current process and if the hook procedure is within the code associated with the current process</source>
<seg-source> <mrk mid="0" mtype="seg">The $hMod parameter must be set to NULL if the $iThreadId parameter specifies a thread created by the current process and if the hook procedure is within the code associated with the current process</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The $hMod parameter must be set to NULL if the $iThreadId parameter specifies a thread created by the current process and if the hook procedure is within the code associated with the current process</mrk></target>
<note>$hDll</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies the identifier of the thread with which the hook procedure is to be associated.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the identifier of the thread with which the hook procedure is to be associated.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the identifier of the thread with which the hook procedure is to be associated.</mrk></target>
<note>$iThreadId</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> If this parameter is zero, the hook procedure is associated with all existing threads running in the same desktop as the calling thread</source>
<seg-source> <mrk mid="0" mtype="seg">If this parameter is zero, the hook procedure is associated with all existing threads running in the same desktop as the calling thread</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this parameter is zero, the hook procedure is associated with all existing threads running in the same desktop as the calling thread</mrk></target>
<note>$iThreadId</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Handle to the hook procedure</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the hook procedure</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the hook procedure</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> 0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error informationt </source>
<seg-source> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error informationt</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error informationt</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(SetWindowsHookEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>SetWindowsHookEx<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(SetWindowsHookEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>SetWindowsHookEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(SetWindowsHookEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>SetWindowsHookEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Cleanup</source>
<seg-source><mrk mid="0" mtype="seg">Cleanup</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Cleanup</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">_KeyProc</source>
<seg-source><mrk mid="0" mtype="seg">_KeyProc</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_KeyProc</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">long</source>
<seg-source><mrk mid="0" mtype="seg">long</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">long</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">int;wparam;lparam</source>
<seg-source><mrk mid="0" mtype="seg">int;wparam;lparam</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int;wparam;lparam</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Click OK, then in notepad type...</source>
<seg-source><mrk mid="0" mtype="seg">Click OK, then in notepad type...</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Click OK, then in notepad type...</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">Jon</source>
<seg-source><mrk mid="0" mtype="seg">Jon</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Jon</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">AutoIt</source>
<seg-source><mrk mid="0" mtype="seg">AutoIt</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">AutoIt</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">Press Esc to exit script</source>
<seg-source><mrk mid="0" mtype="seg">Press Esc to exit script</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Press Esc to exit script</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">notepad.exe</source>
<seg-source><mrk mid="0" mtype="seg">notepad.exe</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">notepad.exe</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">[CLASS:Notepad]</source>
<seg-source><mrk mid="0" mtype="seg">[CLASS:Notepad]</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">[CLASS:Notepad]</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">[CLASS:Notepad]</source>
<seg-source><mrk mid="0" mtype="seg">[CLASS:Notepad]</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">[CLASS:Notepad]</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">a - z</source>
<seg-source><mrk mid="0" mtype="seg">a - z</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a - z</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">A - Z</source>
<seg-source><mrk mid="0" mtype="seg">A - Z</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A - Z</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">0 - 9</source>
<seg-source><mrk mid="0" mtype="seg">0 - 9</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">0 - 9</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">Jon</source>
<seg-source><mrk mid="0" mtype="seg">Jon</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Jon</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">What can you say?</source>
<seg-source><mrk mid="0" mtype="seg">What can you say?</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">What can you say?</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">AutoIt</source>
<seg-source><mrk mid="0" mtype="seg">AutoIt</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">AutoIt</mrk></target>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en">AutoIt Rocks</source>
<seg-source><mrk mid="0" mtype="seg">AutoIt Rocks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">AutoIt Rocks</mrk></target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">esc key</source>
<seg-source><mrk mid="0" mtype="seg">esc key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">esc key</mrk></target>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en"> ===========================================================</source>
<seg-source> <mrk mid="0" mtype="seg">===========================================================</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">===========================================================</mrk></target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">callback function</source>
<seg-source><mrk mid="0" mtype="seg">callback function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">callback function</mrk></target>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en"> ===========================================================</source>
<seg-source> <mrk mid="0" mtype="seg">===========================================================</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">===========================================================</mrk></target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">vkCode</source>
<seg-source><mrk mid="0" mtype="seg">vkCode</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">vkCode</mrk></target>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en">flags</source>
<seg-source><mrk mid="0" mtype="seg">flags</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">flags</mrk></target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">$LLKHF_ALTDOWN</source>
<seg-source><mrk mid="0" mtype="seg">$LLKHF_ALTDOWN</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$LLKHF_ALTDOWN</mrk></target>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en">$LLKHF_EXTENDED</source>
<seg-source><mrk mid="0" mtype="seg">$LLKHF_EXTENDED</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$LLKHF_EXTENDED</mrk></target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">$LLKHF_INJECTED</source>
<seg-source><mrk mid="0" mtype="seg">$LLKHF_INJECTED</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$LLKHF_INJECTED</mrk></target>
</trans-unit>
<trans-unit id="60">
<source xml:lang="en">$LLKHF_UP: scanCode -</source>
<seg-source><mrk mid="0" mtype="seg">$LLKHF_UP: scanCode -</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$LLKHF_UP: scanCode -</mrk></target>
</trans-unit>
<trans-unit id="61">
<source xml:lang="en">scanCode</source>
<seg-source><mrk mid="0" mtype="seg">scanCode</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">scanCode</mrk></target>
</trans-unit>
<trans-unit id="62">
<source xml:lang="en">vkCode -</source>
<seg-source><mrk mid="0" mtype="seg">vkCode -</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">vkCode -</mrk></target>
</trans-unit>
<trans-unit id="63">
<source xml:lang="en">vkCode</source>
<seg-source><mrk mid="0" mtype="seg">vkCode</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">vkCode</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
