<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_RegOpenKey.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Opens the specified registry key</source>
<seg-source><mrk mid="0" mtype="seg">Opens the specified registry key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Opens the specified registry key</mrk></target>
<note>Function _WinAPI_RegOpenKey</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> Handle to an open registry key. This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept></source>
<seg-source> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept></mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> function, or it can be one of the following predefined keys.</source>
<seg-source> <mrk mid="0" mtype="seg">function, or it can be one of the following predefined keys.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">function, or it can be one of the following predefined keys.</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> $HKEY_CLASSES_ROOT</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> $HKEY_CURRENT_USER</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> $HKEY_LOCAL_MACHINE</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> $HKEY_USERS </source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> The name of the registry subkey to be opened (see remarks).</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The name of the registry subkey to be opened (see remarks).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The name of the registry subkey to be opened (see remarks).</mrk></target>
<note>$sSubKey</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> A mask that specifies the desired access rights to the key. The function fails if the security</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">A mask that specifies the desired access rights to the key.</mrk> <mrk mid="2" mtype="seg">The function fails if the security</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">A mask that specifies the desired access rights to the key.</mrk> <mrk mid="2" mtype="seg">The function fails if the security</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> descriptor of the key does not permit the requested access for the calling process. This parameter</source>
<seg-source> <mrk mid="0" mtype="seg">descriptor of the key does not permit the requested access for the calling process.</mrk> <mrk mid="1" mtype="seg">This parameter</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">descriptor of the key does not permit the requested access for the calling process.</mrk> <mrk mid="1" mtype="seg">This parameter</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> can be one or more of the $KEY_* constants. Default is $KEY_ALL_ACCESS.</source>
<seg-source> <mrk mid="0" mtype="seg">can be one or more of the $KEY_* constants.</mrk> <mrk mid="1" mtype="seg">Default is $KEY_ALL_ACCESS.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">can be one or more of the $KEY_* constants.</mrk> <mrk mid="1" mtype="seg">Default is $KEY_ALL_ACCESS.</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">Handle to the opened key.</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the opened key.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the opened key.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</source>
<seg-source><mrk mid="0" mtype="seg">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Unlike the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> function, the <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function does not create the specified key</source>
<seg-source><mrk mid="0" mtype="seg">Unlike the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> function, the <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function does not create the specified key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Unlike the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> function, the <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function does not create the specified key</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> if the key does not exist in the registry.</source>
<seg-source> <mrk mid="0" mtype="seg">if the key does not exist in the registry.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">if the key does not exist in the registry.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> If the key is not one of the predefined registry keys ($HKEY_*) you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCloseKey.htm"></bpt>_WinAPI_RegCloseKey()<ept id="1">&lt;/a></ept></source>
<seg-source> <mrk mid="0" mtype="seg">If the key is not one of the predefined registry keys ($HKEY_*) you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCloseKey.htm"></bpt>_WinAPI_RegCloseKey()<ept id="1">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the key is not one of the predefined registry keys ($HKEY_*) you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCloseKey.htm"></bpt>_WinAPI_RegCloseKey()<ept id="1">&lt;/a></ept></mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> function after finished using the handle.</source>
<seg-source> <mrk mid="0" mtype="seg">function after finished using the handle.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">function after finished using the handle.</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> Key names are not case sensitive.</source>
<seg-source> <mrk mid="0" mtype="seg">Key names are not case sensitive.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Key names are not case sensitive.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> The $sSubKey parameter can be an an empty string.</source>
<seg-source> <mrk mid="0" mtype="seg">The $sSubKey parameter can be an an empty string.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The $sSubKey parameter can be an an empty string.</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> If $sSubKey is an empty string and $hKey is HKEY_CLASSES_ROOT, the return is the same $hKey handle passed into the function.</source>
<seg-source> <mrk mid="0" mtype="seg">If $sSubKey is an empty string and $hKey is HKEY_CLASSES_ROOT, the return is the same $hKey handle passed into the function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If $sSubKey is an empty string and $hKey is HKEY_CLASSES_ROOT, the return is the same $hKey handle passed into the function.</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> Otherwise, the return is a new handle to the key specified by $hKey.</source>
<seg-source> <mrk mid="0" mtype="seg">Otherwise, the return is a new handle to the key specified by $hKey.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Otherwise, the return is a new handle to the key specified by $hKey.</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> The $sSubKey parameter can be NULL only if $hKey is one of the predefined keys.</source>
<seg-source> <mrk mid="0" mtype="seg">The $sSubKey parameter can be NULL only if $hKey is one of the predefined keys.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The $sSubKey parameter can be NULL only if $hKey is one of the predefined keys.</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> If $sSubKey is NULL and $hKey is HKEY_CLASSES_ROOT, the return is a new handle to the key specified by $hKey.</source>
<seg-source> <mrk mid="0" mtype="seg">If $sSubKey is NULL and $hKey is HKEY_CLASSES_ROOT, the return is a new handle to the key specified by $hKey.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If $sSubKey is NULL and $hKey is HKEY_CLASSES_ROOT, the return is a new handle to the key specified by $hKey.</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en"> Otherwise, the return is the same $hKey handle passed in to the function.</source>
<seg-source> <mrk mid="0" mtype="seg">Otherwise, the return is the same $hKey handle passed in to the function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Otherwise, the return is the same $hKey handle passed in to the function.</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegOpenKeyEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegOpenKeyEx<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegOpenKeyEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegOpenKeyEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegOpenKeyEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegOpenKeyEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
