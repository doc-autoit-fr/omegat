<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_GetKeyState.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Retrieves the status of the specified virtual key</source>
<seg-source><mrk mid="0" mtype="seg">Retrieves the status of the specified virtual key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieves the status of the specified virtual key</mrk></target>
<note>Function _WinAPI_GetKeyState</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Specifies a virtual key ($VK_*). If the desired virtual key is a letter or digit (A through Z,</source>
<seg-source><mrk mid="0" mtype="seg">Specifies a virtual key ($VK_*).</mrk> <mrk mid="1" mtype="seg">If the desired virtual key is a letter or digit (A through Z,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies a virtual key ($VK_*).</mrk> <mrk mid="1" mtype="seg">If the desired virtual key is a letter or digit (A through Z,</mrk></target>
<note>$vKey</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> a through z, or 0 through 9).</source>
<seg-source> <mrk mid="0" mtype="seg">a through z, or 0 through 9).</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">a through z, or 0 through 9).</mrk></target>
<note>$vKey</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">Returns the value that specifies the status of the specified virtual key. If the high-order bit is 1, the key is</source>
<seg-source><mrk mid="0" mtype="seg">Returns the value that specifies the status of the specified virtual key.</mrk> <mrk mid="1" mtype="seg">If the high-order bit is 1, the key is</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the value that specifies the status of the specified virtual key.</mrk> <mrk mid="1" mtype="seg">If the high-order bit is 1, the key is</mrk></target>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> down; otherwise, it is up. If the low-order bit is 1, the key is toggled. A key, such as the</source>
<seg-source> <mrk mid="0" mtype="seg">down; otherwise, it is up.</mrk> <mrk mid="1" mtype="seg">If the low-order bit is 1, the key is toggled.</mrk> <mrk mid="2" mtype="seg">A key, such as the</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">down; otherwise, it is up.</mrk> <mrk mid="1" mtype="seg">If the low-order bit is 1, the key is toggled.</mrk> <mrk mid="2" mtype="seg">A key, such as the</mrk></target>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> CAPS LOCK key, is toggled if it is turned on. The key is off and untoggled if the low-order bit is 0.</source>
<seg-source> <mrk mid="0" mtype="seg">CAPS LOCK key, is toggled if it is turned on.</mrk> <mrk mid="1" mtype="seg">The key is off and untoggled if the low-order bit is 0.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">CAPS LOCK key, is toggled if it is turned on.</mrk> <mrk mid="1" mtype="seg">The key is off and untoggled if the low-order bit is 0.</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> A toggle key's indicator light (if any) on the keyboard will be on when the key is toggled, and off</source>
<seg-source> <mrk mid="0" mtype="seg">A toggle key's indicator light (if any) on the keyboard will be on when the key is toggled, and off</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">A toggle key's indicator light (if any) on the keyboard will be on when the key is toggled, and off</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> when the key is untoggled.</source>
<seg-source> <mrk mid="0" mtype="seg">when the key is untoggled.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">when the key is untoggled.</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">The key status returned from this function changes as a process reads key messages from its message queue.</source>
<seg-source><mrk mid="0" mtype="seg">The key status returned from this function changes as a process reads key messages from its message queue.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The key status returned from this function changes as a process reads key messages from its message queue.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> The status does not reflect the interrupt-level state associated with the hardware. Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetAsyncKeyState.htm"></bpt>_WinAPI_GetAsyncKeyState()<ept id="1">&lt;/a></ept></source>
<seg-source> <mrk mid="0" mtype="seg">The status does not reflect the interrupt-level state associated with the hardware.</mrk> <mrk mid="1" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetAsyncKeyState.htm"></bpt>_WinAPI_GetAsyncKeyState()<ept id="1">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The status does not reflect the interrupt-level state associated with the hardware.</mrk> <mrk mid="1" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetAsyncKeyState.htm"></bpt>_WinAPI_GetAsyncKeyState()<ept id="1">&lt;/a></ept></mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> function to retrieve that information.</source>
<seg-source> <mrk mid="0" mtype="seg">function to retrieve that information.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">function to retrieve that information.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetKeyState);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetKeyState<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetKeyState);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetKeyState<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetKeyState);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetKeyState<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">OFF</source>
<seg-source><mrk mid="0" mtype="seg">OFF</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">OFF</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">ON</source>
<seg-source><mrk mid="0" mtype="seg">ON</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ON</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">NumLock:</source>
<seg-source><mrk mid="0" mtype="seg">NumLock:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">NumLock:</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">NumLock:</source>
<seg-source><mrk mid="0" mtype="seg">NumLock:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">NumLock:</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">NumLock:</source>
<seg-source><mrk mid="0" mtype="seg">NumLock:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">NumLock:</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
