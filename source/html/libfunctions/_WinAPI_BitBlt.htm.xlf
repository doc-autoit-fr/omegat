<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_BitBlt.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Performs a bit-block transfer of color data</source>
<seg-source><mrk mid="0" mtype="seg">Performs a bit-block transfer of color data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Performs a bit-block transfer of color data</mrk></target>
<note>Function _WinAPI_BitBlt</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Handle to the destination device context</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the destination device context</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the destination device context</mrk></target>
<note>$hDestDC</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">X value of the upper-left corner of the destination rectangle</source>
<seg-source><mrk mid="0" mtype="seg">X value of the upper-left corner of the destination rectangle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">X value of the upper-left corner of the destination rectangle</mrk></target>
<note>$iXDest</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Y value of the upper-left corner of the destination rectangle</source>
<seg-source><mrk mid="0" mtype="seg">Y value of the upper-left corner of the destination rectangle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Y value of the upper-left corner of the destination rectangle</mrk></target>
<note>$iYDest</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">Width of the source and destination rectangles</source>
<seg-source><mrk mid="0" mtype="seg">Width of the source and destination rectangles</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Width of the source and destination rectangles</mrk></target>
<note>$iWidth</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">Height of the source and destination rectangles</source>
<seg-source><mrk mid="0" mtype="seg">Height of the source and destination rectangles</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Height of the source and destination rectangles</mrk></target>
<note>$iHeight</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">Handle to the source device context</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the source device context</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the source device context</mrk></target>
<note>$hSrcDC</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">X value of the upper-left corner of the source rectangle</source>
<seg-source><mrk mid="0" mtype="seg">X value of the upper-left corner of the source rectangle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">X value of the upper-left corner of the source rectangle</mrk></target>
<note>$iXSrc</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">Y value of the upper-left corner of the source rectangle</source>
<seg-source><mrk mid="0" mtype="seg">Y value of the upper-left corner of the source rectangle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Y value of the upper-left corner of the source rectangle</mrk></target>
<note>$iYSrc</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Specifies a raster operation code. These codes define how the color data for the source rectangle is to be combined with the color data for the destination rectangle to achieve the final color:</source>
<seg-source><mrk mid="0" mtype="seg">Specifies a raster operation code.</mrk> <mrk mid="1" mtype="seg">These codes define how the color data for the source rectangle is to be combined with the color data for the destination rectangle to achieve the final color:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies a raster operation code.</mrk> <mrk mid="1" mtype="seg">These codes define how the color data for the source rectangle is to be combined with the color data for the destination rectangle to achieve the final color:</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> $BLACKNESS - Fills the destination rectangle using the color associated with palette index 0</source>
<seg-source> <mrk mid="0" mtype="seg">$BLACKNESS - Fills the destination rectangle using the color associated with palette index 0</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$BLACKNESS - Fills the destination rectangle using the color associated with palette index 0</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> $CAPTUREBLT - Includes any window that are layered on top of your window in the resulting image</source>
<seg-source> <mrk mid="0" mtype="seg">$CAPTUREBLT - Includes any window that are layered on top of your window in the resulting image</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CAPTUREBLT - Includes any window that are layered on top of your window in the resulting image</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> $DSTINVERT - Inverts the destination rectangle</source>
<seg-source> <mrk mid="0" mtype="seg">$DSTINVERT - Inverts the destination rectangle</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$DSTINVERT - Inverts the destination rectangle</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> $MERGECOPY - Merges the color of the source rectangle with the brush currently selected in hDest, by using the AND operator.</source>
<seg-source> <mrk mid="0" mtype="seg">$MERGECOPY - Merges the color of the source rectangle with the brush currently selected in hDest, by using the AND operator.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$MERGECOPY - Merges the color of the source rectangle with the brush currently selected in hDest, by using the AND operator.</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> $MERGEPAINT - Merges the color of the inverted source rectangle with the colors of the destination rectangle by using the OR operator.</source>
<seg-source> <mrk mid="0" mtype="seg">$MERGEPAINT - Merges the color of the inverted source rectangle with the colors of the destination rectangle by using the OR operator.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$MERGEPAINT - Merges the color of the inverted source rectangle with the colors of the destination rectangle by using the OR operator.</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> $NOMIRRORBITMAP - Prevents the bitmap from being mirrored</source>
<seg-source> <mrk mid="0" mtype="seg">$NOMIRRORBITMAP - Prevents the bitmap from being mirrored</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$NOMIRRORBITMAP - Prevents the bitmap from being mirrored</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> $NOTSRCCOPY - Copies the inverted source rectangle to the destination</source>
<seg-source> <mrk mid="0" mtype="seg">$NOTSRCCOPY - Copies the inverted source rectangle to the destination</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$NOTSRCCOPY - Copies the inverted source rectangle to the destination</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> $NOTSRCERASE - Combines the colors of the source and destination rectangles by using the OR operator and then inverts the resultant color.</source>
<seg-source> <mrk mid="0" mtype="seg">$NOTSRCERASE - Combines the colors of the source and destination rectangles by using the OR operator and then inverts the resultant color.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$NOTSRCERASE - Combines the colors of the source and destination rectangles by using the OR operator and then inverts the resultant color.</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> $PATCOPY - Copies the brush selected in hdcDest, into the destination bitmap</source>
<seg-source> <mrk mid="0" mtype="seg">$PATCOPY - Copies the brush selected in hdcDest, into the destination bitmap</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$PATCOPY - Copies the brush selected in hdcDest, into the destination bitmap</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> $PATINVERT - Combines the colors of the brush currently selected in hDest, with the colors of the destination rectangle by using the XOR operator.</source>
<seg-source> <mrk mid="0" mtype="seg">$PATINVERT - Combines the colors of the brush currently selected in hDest, with the colors of the destination rectangle by using the XOR operator.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$PATINVERT - Combines the colors of the brush currently selected in hDest, with the colors of the destination rectangle by using the XOR operator.</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> $PATPAINT - Combines the colors of the brush currently selected in hDest, with the colors of the inverted source rectangle by using the OR operator. The result of this operation is combined with the color of the destination rectangle by using the OR operator.</source>
<seg-source> <mrk mid="0" mtype="seg">$PATPAINT - Combines the colors of the brush currently selected in hDest, with the colors of the inverted source rectangle by using the OR operator.</mrk> <mrk mid="1" mtype="seg">The result of this operation is combined with the color of the destination rectangle by using the OR operator.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$PATPAINT - Combines the colors of the brush currently selected in hDest, with the colors of the inverted source rectangle by using the OR operator.</mrk> <mrk mid="1" mtype="seg">The result of this operation is combined with the color of the destination rectangle by using the OR operator.</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> $SRCAND - Combines the colors of the source and destination rectangles by using the AND operator</source>
<seg-source> <mrk mid="0" mtype="seg">$SRCAND - Combines the colors of the source and destination rectangles by using the AND operator</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$SRCAND - Combines the colors of the source and destination rectangles by using the AND operator</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> $SRCCOPY - Copies the source rectangle directly to the destination rectangle</source>
<seg-source> <mrk mid="0" mtype="seg">$SRCCOPY - Copies the source rectangle directly to the destination rectangle</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$SRCCOPY - Copies the source rectangle directly to the destination rectangle</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> $SRCERASE - Combines the inverted color of the destination rectangle with the colors of the source rectangle by using the AND operator.</source>
<seg-source> <mrk mid="0" mtype="seg">$SRCERASE - Combines the inverted color of the destination rectangle with the colors of the source rectangle by using the AND operator.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$SRCERASE - Combines the inverted color of the destination rectangle with the colors of the source rectangle by using the AND operator.</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> $SRCINVERT - Combines the colors of the source and destination rectangles by using the XOR operator</source>
<seg-source> <mrk mid="0" mtype="seg">$SRCINVERT - Combines the colors of the source and destination rectangles by using the XOR operator</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$SRCINVERT - Combines the colors of the source and destination rectangles by using the XOR operator</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en"> $SRCPAINT - Combines the colors of the source and destination rectangles by using the OR operator</source>
<seg-source> <mrk mid="0" mtype="seg">$SRCPAINT - Combines the colors of the source and destination rectangles by using the OR operator</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$SRCPAINT - Combines the colors of the source and destination rectangles by using the OR operator</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> $WHITENESS - Fills the destination rectangle using the color associated with index 1 in the physical palette.</source>
<seg-source> <mrk mid="0" mtype="seg">$WHITENESS - Fills the destination rectangle using the color associated with index 1 in the physical palette.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$WHITENESS - Fills the destination rectangle using the color associated with index 1 in the physical palette.</mrk></target>
<note>$iROP</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">True</source>
<seg-source><mrk mid="0" mtype="seg">True</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">True</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">False</source>
<seg-source><mrk mid="0" mtype="seg">False</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">False</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(BitBlt);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>BitBlt<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(BitBlt);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>BitBlt<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(BitBlt);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>BitBlt<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">GUIOnEventMode</source>
<seg-source><mrk mid="0" mtype="seg">GUIOnEventMode</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">GUIOnEventMode</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">initialize GDI+</source>
<seg-source><mrk mid="0" mtype="seg">initialize GDI+</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">initialize GDI+</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">$iBGColor format RRGGBB</source>
<seg-source><mrk mid="0" mtype="seg">$iBGColor format RRGGBB</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$iBGColor format RRGGBB</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">GDI+ Example (</source>
<seg-source><mrk mid="0" mtype="seg">GDI+ Example (</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">GDI+ Example (</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">)</source>
<seg-source><mrk mid="0" mtype="seg">)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">)</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">create a test GUI</source>
<seg-source><mrk mid="0" mtype="seg">create a test GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">create a test GUI</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">set GUI background color</source>
<seg-source><mrk mid="0" mtype="seg">set GUI background color</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">set GUI background color</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">create a faster buffered graphics frame set for smoother gfx object movements</source>
<seg-source><mrk mid="0" mtype="seg">create a faster buffered graphics frame set for smoother gfx object movements</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">create a faster buffered graphics frame set for smoother gfx object movements</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">create an empty bitmap</source>
<seg-source><mrk mid="0" mtype="seg">create an empty bitmap</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">create an empty bitmap</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">convert GDI+ bitmap to GDI bitmap</source>
<seg-source><mrk mid="0" mtype="seg">convert GDI+ bitmap to GDI bitmap</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">convert GDI+ bitmap to GDI bitmap</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">delete GDI+ bitmap because not needed anymore</source>
<seg-source><mrk mid="0" mtype="seg">delete GDI+ bitmap because not needed anymore</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">delete GDI+ bitmap because not needed anymore</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">get device context from GUI</source>
<seg-source><mrk mid="0" mtype="seg">get device context from GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">get device context from GUI</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">creates a memory device context compatible with the specified device</source>
<seg-source><mrk mid="0" mtype="seg">creates a memory device context compatible with the specified device</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">creates a memory device context compatible with the specified device</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">selects an object into the specified device context</source>
<seg-source><mrk mid="0" mtype="seg">selects an object into the specified device context</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">selects an object into the specified device context</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">create a graphics object from a device context (DC)</source>
<seg-source><mrk mid="0" mtype="seg">create a graphics object from a device context (DC)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">create a graphics object from a device context (DC)</mrk></target>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en">set smoothing mode (8 X 4 box filter)</source>
<seg-source><mrk mid="0" mtype="seg">set smoothing mode (8 X 4 box filter)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">set smoothing mode (8 X 4 box filter)</mrk></target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">create a pen object</source>
<seg-source><mrk mid="0" mtype="seg">create a pen object</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">create a pen object</mrk></target>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en">_Exit</source>
<seg-source><mrk mid="0" mtype="seg">_Exit</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_Exit</mrk></target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">ACos(-1) is nearly pi</source>
<seg-source><mrk mid="0" mtype="seg">ACos(-1) is nearly pi</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ACos(-1) is nearly pi</mrk></target>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en">create an array to save coordinates of the x/y coordinates</source>
<seg-source><mrk mid="0" mtype="seg">create an array to save coordinates of the x/y coordinates</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">create an array to save coordinates of the x/y coordinates</mrk></target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">clear bitmap with given color (AARRGGBB format)</source>
<seg-source><mrk mid="0" mtype="seg">clear bitmap with given color (AARRGGBB format)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">clear bitmap with given color (AARRGGBB format)</mrk></target>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en">calculate x position</source>
<seg-source><mrk mid="0" mtype="seg">calculate x position</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">calculate x position</mrk></target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">calculate y position</source>
<seg-source><mrk mid="0" mtype="seg">calculate y position</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">calculate y position</mrk></target>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en">set pen color for inner lines</source>
<seg-source><mrk mid="0" mtype="seg">set pen color for inner lines</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">set pen color for inner lines</mrk></target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">set pen size for outer lines</source>
<seg-source><mrk mid="0" mtype="seg">set pen size for outer lines</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">set pen size for outer lines</mrk></target>
</trans-unit>
<trans-unit id="60">
<source xml:lang="en">draw inner lines</source>
<seg-source><mrk mid="0" mtype="seg">draw inner lines</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">draw inner lines</mrk></target>
</trans-unit>
<trans-unit id="61">
<source xml:lang="en">draw to opposite side</source>
<seg-source><mrk mid="0" mtype="seg">draw to opposite side</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">draw to opposite side</mrk></target>
</trans-unit>
<trans-unit id="62">
<source xml:lang="en">set pen color</source>
<seg-source><mrk mid="0" mtype="seg">set pen color</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">set pen color</mrk></target>
</trans-unit>
<trans-unit id="63">
<source xml:lang="en">set pen size</source>
<seg-source><mrk mid="0" mtype="seg">set pen size</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">set pen size</mrk></target>
</trans-unit>
<trans-unit id="64">
<source xml:lang="en">array of coordinates should be filled before first draw to screen</source>
<seg-source><mrk mid="0" mtype="seg">array of coordinates should be filled before first draw to screen</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">array of coordinates should be filled before first draw to screen</mrk></target>
</trans-unit>
<trans-unit id="65">
<source xml:lang="en">;draw outer lines</source>
<seg-source><mrk mid="0" mtype="seg">;draw outer lines</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">;draw outer lines</mrk></target>
</trans-unit>
<trans-unit id="66">
<source xml:lang="en">increase angle to next dot</source>
<seg-source><mrk mid="0" mtype="seg">increase angle to next dot</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">increase angle to next dot</mrk></target>
</trans-unit>
<trans-unit id="67">
<source xml:lang="en">draw last line to 1st line</source>
<seg-source><mrk mid="0" mtype="seg">draw last line to 1st line</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">draw last line to 1st line</mrk></target>
</trans-unit>
<trans-unit id="68">
<source xml:lang="en">copy backbuffer to screen (GUI)</source>
<seg-source><mrk mid="0" mtype="seg">copy backbuffer to screen (GUI)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">copy backbuffer to screen (GUI)</mrk></target>
</trans-unit>
<trans-unit id="69">
<source xml:lang="en">decrease overall angle</source>
<seg-source><mrk mid="0" mtype="seg">decrease overall angle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">decrease overall angle</mrk></target>
</trans-unit>
<trans-unit id="70">
<source xml:lang="en">Sleep() always returns 1 and Not 1 is 0 correspond to False</source>
<seg-source><mrk mid="0" mtype="seg">Sleep() always returns 1 and Not 1 is 0 correspond to False</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Sleep() always returns 1 and Not 1 is 0 correspond to False</mrk></target>
</trans-unit>
<trans-unit id="71">
<source xml:lang="en">cleanup GDI+ resources</source>
<seg-source><mrk mid="0" mtype="seg">cleanup GDI+ resources</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">cleanup GDI+ resources</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
