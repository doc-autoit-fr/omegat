<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_RegCreateKey.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Creates the specified registry key</source>
<seg-source><mrk mid="0" mtype="seg">Creates the specified registry key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creates the specified registry key</mrk></target>
<note>Function _WinAPI_RegCreateKey</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> Handle to an open registry key. If the key already exists, the function opens it. The calling process</source>
<seg-source> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">If the key already exists, the function opens it.</mrk> <mrk mid="2" mtype="seg">The calling process</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">If the key already exists, the function opens it.</mrk> <mrk mid="2" mtype="seg">The calling process</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> must have $KEY_CREATE_SUB_KEY access to the key. This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept></source>
<seg-source> <mrk mid="0" mtype="seg">must have $KEY_CREATE_SUB_KEY access to the key.</mrk> <mrk mid="1" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">must have $KEY_CREATE_SUB_KEY access to the key.</mrk> <mrk mid="1" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept></mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> or <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="1">&lt;/a></ept> function, or it can be one of the following predefined keys.</source>
<seg-source> <mrk mid="0" mtype="seg">or <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="1">&lt;/a></ept> function, or it can be one of the following predefined keys.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">or <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="1">&lt;/a></ept> function, or it can be one of the following predefined keys.</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> $HKEY_CLASSES_ROOT</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> $HKEY_CURRENT_CONFIG</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CURRENT_CONFIG</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CURRENT_CONFIG</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> $HKEY_CURRENT_USER</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> $HKEY_LOCAL_MACHINE</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> $HKEY_USERS </source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> The name of a subkey that this function opens or creates. The subkey specified must be a subkey of</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The name of a subkey that this function opens or creates.</mrk> <mrk mid="2" mtype="seg">The subkey specified must be a subkey of</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The name of a subkey that this function opens or creates.</mrk> <mrk mid="2" mtype="seg">The subkey specified must be a subkey of</mrk></target>
<note>$sSubKey</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> the key identified by the $hKey parameter; it can be up to 32 levels deep in the registry tree.</source>
<seg-source> <mrk mid="0" mtype="seg">the key identified by the $hKey parameter; it can be up to 32 levels deep in the registry tree.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">the key identified by the $hKey parameter; it can be up to 32 levels deep in the registry tree.</mrk></target>
<note>$sSubKey</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> If an empty string (Default), the return is a new handle to the key specified by $hKey.</source>
<seg-source> <mrk mid="0" mtype="seg">If an empty string (Default), the return is a new handle to the key specified by $hKey.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If an empty string (Default), the return is a new handle to the key specified by $hKey.</mrk></target>
<note>$sSubKey</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> The mask that specifies the access rights for the key.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The mask that specifies the access rights for the key.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The mask that specifies the access rights for the key.</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> This parameter can be one or more of the following values.</source>
<seg-source> <mrk mid="0" mtype="seg">This parameter can be one or more of the following values.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">This parameter can be one or more of the following values.</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> $KEY_ALL_ACCESS</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_ALL_ACCESS</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_ALL_ACCESS</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> $KEY_CREATE_LINK</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_CREATE_LINK</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_CREATE_LINK</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> $KEY_CREATE_SUB_KEY</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_CREATE_SUB_KEY</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_CREATE_SUB_KEY</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> $KEY_ENUMERATE_SUB_KEYS</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_ENUMERATE_SUB_KEYS</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_ENUMERATE_SUB_KEYS</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> $KEY_EXECUTE</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_EXECUTE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_EXECUTE</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> $KEY_NOTIFY</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_NOTIFY</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_NOTIFY</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> $KEY_QUERY_VALUE</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_QUERY_VALUE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_QUERY_VALUE</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> $KEY_READ</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_READ</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_READ</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> $KEY_SET_VALUE</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_SET_VALUE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_SET_VALUE</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> $KEY_WOW64_32KEY</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_WOW64_32KEY</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_WOW64_32KEY</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> $KEY_WOW64_64KEY</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_WOW64_64KEY</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_WOW64_64KEY</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en"> $KEY_WRITE</source>
<seg-source> <mrk mid="0" mtype="seg">$KEY_WRITE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$KEY_WRITE</mrk></target>
<note>$iAccess</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> This parameter can be one of the following values.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">This parameter can be one of the following values.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">This parameter can be one of the following values.</mrk></target>
<note>$iOptions</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en"> $REG_OPTION_BACKUP_RESTORE</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_OPTION_BACKUP_RESTORE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_OPTION_BACKUP_RESTORE</mrk></target>
<note>$iOptions</note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en"> $REG_OPTION_CREATE_LINK</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_OPTION_CREATE_LINK</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_OPTION_CREATE_LINK</mrk></target>
<note>$iOptions</note>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en"> $REG_OPTION_NON_VOLATILE (Default)</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_OPTION_NON_VOLATILE (Default)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_OPTION_NON_VOLATILE (Default)</mrk></target>
<note>$iOptions</note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en"> $REG_OPTION_VOLATILE</source>
<seg-source> <mrk mid="0" mtype="seg">$REG_OPTION_VOLATILE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$REG_OPTION_VOLATILE</mrk></target>
<note>$iOptions</note>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> $tagSECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagSECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagSECURITY_ATTRIBUTES structure that determines whether the returned handle can be inherited by</mrk></target>
<note>$tSecurity</note>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en"> child processes. If this parameter is 0 (Default), the handle cannot be inherited.</source>
<seg-source> <mrk mid="0" mtype="seg">child processes.</mrk> <mrk mid="1" mtype="seg">If this parameter is 0 (Default), the handle cannot be inherited.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">child processes.</mrk> <mrk mid="1" mtype="seg">If this parameter is 0 (Default), the handle cannot be inherited.</mrk></target>
<note>$tSecurity</note>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">Handle to the opened or created key, @extended flag will contain one of the following</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the opened or created key, @extended flag will contain one of the following</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the opened or created key, @extended flag will contain one of the following</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en"> disposition values:</source>
<seg-source> <mrk mid="0" mtype="seg">disposition values:</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">disposition values:</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en"> 0 (False) - The key existed and was simply opened without being changed.</source>
<seg-source> <mrk mid="0" mtype="seg">0 (False) - The key existed and was simply opened without being changed.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">0 (False) - The key existed and was simply opened without being changed.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en"> 1 (True) - The key did not exist and was created.</source>
<seg-source> <mrk mid="0" mtype="seg">1 (True) - The key did not exist and was created.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">1 (True) - The key did not exist and was created.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">Sets the @error flag to non-zero, @extended flag may contain the system error code.</source>
<seg-source><mrk mid="0" mtype="seg">Sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">An application cannot create a key that is a direct child of HKEY_USERS or HKEY_LOCAL_MACHINE. An application</source>
<seg-source><mrk mid="0" mtype="seg">An application cannot create a key that is a direct child of HKEY_USERS or HKEY_LOCAL_MACHINE.</mrk> <mrk mid="1" mtype="seg">An application</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An application cannot create a key that is a direct child of HKEY_USERS or HKEY_LOCAL_MACHINE.</mrk> <mrk mid="1" mtype="seg">An application</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en"> can create subkeys in lower levels of the HKEY_USERS or HKEY_LOCAL_MACHINE trees.</source>
<seg-source> <mrk mid="0" mtype="seg">can create subkeys in lower levels of the HKEY_USERS or HKEY_LOCAL_MACHINE trees.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">can create subkeys in lower levels of the HKEY_USERS or HKEY_LOCAL_MACHINE trees.</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en"> If the key is not one of the predefined registry keys ($HKEY_*) you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCloseKey.htm"></bpt>_WinAPI_RegCloseKey()<ept id="1">&lt;/a></ept></source>
<seg-source> <mrk mid="0" mtype="seg">If the key is not one of the predefined registry keys ($HKEY_*) you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCloseKey.htm"></bpt>_WinAPI_RegCloseKey()<ept id="1">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the key is not one of the predefined registry keys ($HKEY_*) you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCloseKey.htm"></bpt>_WinAPI_RegCloseKey()<ept id="1">&lt;/a></ept></mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en"> function after finished using the handle.</source>
<seg-source> <mrk mid="0" mtype="seg">function after finished using the handle.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">function after finished using the handle.</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegCreateKeyEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegCreateKeyEx<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegCreateKeyEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegCreateKeyEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegCreateKeyEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegCreateKeyEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
