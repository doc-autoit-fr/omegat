<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_RegQueryValue.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Retrieves the type and data for the specified value name associated with an open registry key</source>
<seg-source><mrk mid="0" mtype="seg">Retrieves the type and data for the specified value name associated with an open registry key</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieves the type and data for the specified value name associated with an open registry key</mrk></target>
<note>Function _WinAPI_RegQueryValue</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> Handle to an open registry key. The key must have been opened with the KEY_QUERY_VALUE access right.</source>
<seg-source> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">The key must have been opened with the KEY_QUERY_VALUE access right.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Handle to an open registry key.</mrk> <mrk mid="1" mtype="seg">The key must have been opened with the KEY_QUERY_VALUE access right.</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function. It can also</source>
<seg-source> <mrk mid="0" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">It can also</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">This handle is returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_RegCreateKey.htm"></bpt>_WinAPI_RegCreateKey()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_RegOpenKey.htm"></bpt>_WinAPI_RegOpenKey()<ept id="2">&lt;/a></ept> function.</mrk> <mrk mid="1" mtype="seg">It can also</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> be one of the following predefined keys.</source>
<seg-source> <mrk mid="0" mtype="seg">be one of the following predefined keys.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">be one of the following predefined keys.</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> $HKEY_CLASSES_ROOT</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CLASSES_ROOT</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> $HKEY_CURRENT_CONFIG</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CURRENT_CONFIG</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CURRENT_CONFIG</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> $HKEY_CURRENT_USER</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_CURRENT_USER</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> $HKEY_LOCAL_MACHINE</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_LOCAL_MACHINE</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> $HKEY_PERFORMANCE_DATA</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_DATA</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_DATA</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> $HKEY_PERFORMANCE_NLSTEXT</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_NLSTEXT</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_NLSTEXT</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> $HKEY_PERFORMANCE_TEXT</source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_TEXT</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_PERFORMANCE_TEXT</mrk></target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> $HKEY_USERS </source>
<seg-source> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$HKEY_USERS</mrk> </target>
<note>$hKey</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">The name of the registry value. If $sValueName is empty string, the function retrieves the type and</source>
<seg-source><mrk mid="0" mtype="seg">The name of the registry value.</mrk> <mrk mid="1" mtype="seg">If $sValueName is empty string, the function retrieves the type and</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The name of the registry value.</mrk> <mrk mid="1" mtype="seg">If $sValueName is empty string, the function retrieves the type and</mrk></target>
<note>$sValueName</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> data for the key's unnamed or default value, if any.</source>
<seg-source> <mrk mid="0" mtype="seg">data for the key's unnamed or default value, if any.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">data for the key's unnamed or default value, if any.</mrk></target>
<note>$sValueName</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">The structure (buffer) that receives the value data. This structure must be created before function call.</source>
<seg-source><mrk mid="0" mtype="seg">The structure (buffer) that receives the value data.</mrk> <mrk mid="1" mtype="seg">This structure must be created before function call.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The structure (buffer) that receives the value data.</mrk> <mrk mid="1" mtype="seg">This structure must be created before function call.</mrk></target>
<note>$tValueData</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">The size of the data copied to $tValueData, in bytes, @extended flag will contain the code that</source>
<seg-source><mrk mid="0" mtype="seg">The size of the data copied to $tValueData, in bytes, @extended flag will contain the code that</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The size of the data copied to $tValueData, in bytes, @extended flag will contain the code that</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> indicates the data type ($REG_*).</source>
<seg-source> <mrk mid="0" mtype="seg">indicates the data type ($REG_*).</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">indicates the data type ($REG_*).</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</source>
<seg-source><mrk mid="0" mtype="seg">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">0 and sets the @error flag to non-zero, @extended flag may contain the system error code.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type, returned size includes any terminating null</source>
<seg-source><mrk mid="0" mtype="seg">If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type, returned size includes any terminating null</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If the data has the REG_SZ, REG_MULTI_SZ or REG_EXPAND_SZ type, returned size includes any terminating null</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> character or characters unless the data was stored without them.</source>
<seg-source> <mrk mid="0" mtype="seg">character or characters unless the data was stored without them.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">character or characters unless the data was stored without them.</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> If the buffer specified by $tValueData parameter is not large enough to hold the data, the function returns</source>
<seg-source> <mrk mid="0" mtype="seg">If the buffer specified by $tValueData parameter is not large enough to hold the data, the function returns</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the buffer specified by $tValueData parameter is not large enough to hold the data, the function returns</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> ERROR_MORE_DATA (234) and returns the required buffer size. In this case, the contents of the buffer are</source>
<seg-source> <mrk mid="0" mtype="seg">ERROR_MORE_DATA (234) and returns the required buffer size.</mrk> <mrk mid="1" mtype="seg">In this case, the contents of the buffer are</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">ERROR_MORE_DATA (234) and returns the required buffer size.</mrk> <mrk mid="1" mtype="seg">In this case, the contents of the buffer are</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> undefined.</source>
<seg-source> <mrk mid="0" mtype="seg">undefined.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">undefined.</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegQueryValueEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegQueryValueEx<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegQueryValueEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegQueryValueEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(RegQueryValueEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>RegQueryValueEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">X64 running support</source>
<seg-source><mrk mid="0" mtype="seg">X64 running support</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">X64 running support</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">\Wow6432Node</source>
<seg-source><mrk mid="0" mtype="seg">\Wow6432Node</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">\Wow6432Node</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">SOFTWARE</source>
<seg-source><mrk mid="0" mtype="seg">SOFTWARE</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">SOFTWARE</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">\AutoIt v3\AutoIt</source>
<seg-source><mrk mid="0" mtype="seg">\AutoIt v3\AutoIt</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">\AutoIt v3\AutoIt</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">wchar[260]</source>
<seg-source><mrk mid="0" mtype="seg">wchar[260]</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">wchar[260]</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">InstallDir</source>
<seg-source><mrk mid="0" mtype="seg">InstallDir</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">InstallDir</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
