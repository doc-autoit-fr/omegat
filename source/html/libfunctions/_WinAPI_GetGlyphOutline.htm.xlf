<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_GetGlyphOutline.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Retrieves the outline or bitmap for a character in the TrueType font</source>
<seg-source><mrk mid="0" mtype="seg">Retrieves the outline or bitmap for a character in the TrueType font</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieves the outline or bitmap for a character in the TrueType font</mrk></target>
<note>Function _WinAPI_GetGlyphOutline</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">A handle to the device context which font is selected.</source>
<seg-source><mrk mid="0" mtype="seg">A handle to the device context which font is selected.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A handle to the device context which font is selected.</mrk></target>
<note>$hDC</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">The character for which data is to be returned.</source>
<seg-source><mrk mid="0" mtype="seg">The character for which data is to be returned.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The character for which data is to be returned.</mrk></target>
<note>$sChar</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">The format of the data that the function retrieves.</source>
<seg-source><mrk mid="0" mtype="seg">The format of the data that the function retrieves.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The format of the data that the function retrieves.</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> This parameter can be one of the following values:</source>
<seg-source> <mrk mid="0" mtype="seg">This parameter can be one of the following values:</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">This parameter can be one of the following values:</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">     $GGO_BEZIER</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_BEZIER</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_BEZIER</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">     $GGO_BITMAP</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_BITMAP</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_BITMAP</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">     $GGO_GLYPH_INDEX</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_GLYPH_INDEX</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_GLYPH_INDEX</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">     $GGO_GRAY2_BITMAP</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_GRAY2_BITMAP</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_GRAY2_BITMAP</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">     $GGO_GRAY4_BITMAP</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_GRAY4_BITMAP</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_GRAY4_BITMAP</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">     $GGO_GRAY8_BITMAP</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_GRAY8_BITMAP</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_GRAY8_BITMAP</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">     $GGO_METRICS</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_METRICS</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_METRICS</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">     $GGO_NATIVE</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_NATIVE</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_NATIVE</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">     $GGO_UNHINTED</source>
<seg-source> <mrk mid="0" mtype="seg">    $GGO_UNHINTED</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GGO_UNHINTED</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> Returns a pointer to a memory block (buffer) that receives the outline or bitmap data.</source>
<seg-source> <mrk mid="0" mtype="seg">Returns a pointer to a memory block (buffer) that receives the outline or bitmap data.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Returns a pointer to a memory block (buffer) that receives the outline or bitmap data.</mrk></target>
<note>$pBuffer</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.</source>
<seg-source> <mrk mid="0" mtype="seg">Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Optionaly, you can set this parameter to 0 before function call, then the function will allocate the required memory block itself.</mrk></target>
<note>$pBuffer</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> Otherwise, it must be a valid memory pointer returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateBuffer.htm"></bpt>_WinAPI_CreateBuffer()<ept id="1">&lt;/a></ept> function, or by previously calling this function.</source>
<seg-source> <mrk mid="0" mtype="seg">Otherwise, it must be a valid memory pointer returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateBuffer.htm"></bpt>_WinAPI_CreateBuffer()<ept id="1">&lt;/a></ept> function, or by previously calling this function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Otherwise, it must be a valid memory pointer returned by the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CreateBuffer.htm"></bpt>_WinAPI_CreateBuffer()<ept id="1">&lt;/a></ept> function, or by previously calling this function.</mrk></target>
<note>$pBuffer</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> If the $GGO_METRICS is specified, this parameter is ignored, and function only returns the information about a glyph (see below). </source>
<seg-source> <mrk mid="0" mtype="seg">If the $GGO_METRICS is specified, this parameter is ignored, and function only returns the information about a glyph (see below).</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the $GGO_METRICS is specified, this parameter is ignored, and function only returns the information about a glyph (see below).</mrk> </target>
<note>$pBuffer</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> $tagMAT2 structure specifying a transformation matrix for the character.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagMAT2 structure specifying a transformation matrix for the character.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">$tagMAT2 structure specifying a transformation matrix for the character.</mrk></target>
<note>$tMAT2</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> If this parameter is 0 (Default), the transformation will not be used (it is identity matrix).</source>
<seg-source> <mrk mid="0" mtype="seg">If this parameter is 0 (Default), the transformation will not be used (it is identity matrix).</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this parameter is 0 (Default), the transformation will not be used (it is identity matrix).</mrk></target>
<note>$tMAT2</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">$tagGLYPHMETRICS structure containing information about the placement and orientation of a glyph,</source>
<seg-source><mrk mid="0" mtype="seg">$tagGLYPHMETRICS structure containing information about the placement and orientation of a glyph,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$tagGLYPHMETRICS structure containing information about the placement and orientation of a glyph,</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> @extended flag returns a number of bytes copied to the buffer (if used), in bytes.</source>
<seg-source> <mrk mid="0" mtype="seg">@extended flag returns a number of bytes copied to the buffer (if used), in bytes.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">@extended flag returns a number of bytes copied to the buffer (if used), in bytes.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Sets the @error flag to non-zero.</source>
<seg-source><mrk mid="0" mtype="seg">Sets the @error flag to non-zero.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Sets the @error flag to non-zero.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Note that, for the $GGO_GRAY... values, the function retrieves a glyph bitmap that contains n^2+1 (n squared plus one) levels of gray.</source>
<seg-source><mrk mid="0" mtype="seg">Note that, for the $GGO_GRAY... values, the function retrieves a glyph bitmap that contains n^2+1 (n squared plus one) levels of gray.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Note that, for the $GGO_GRAY... values, the function retrieves a glyph bitmap that contains n^2+1 (n squared plus one) levels of gray.</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> The glyph bitmap returned by <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetGlyphOutline.htm"></bpt>_WinAPI_GetGlyphOutline()<ept id="1">&lt;/a></ept> when $GGO_BITMAP is specified is a DWORD-aligned, row-oriented, monochrome bitmap.</source>
<seg-source> <mrk mid="0" mtype="seg">The glyph bitmap returned by <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetGlyphOutline.htm"></bpt>_WinAPI_GetGlyphOutline()<ept id="1">&lt;/a></ept> when $GGO_BITMAP is specified is a DWORD-aligned, row-oriented, monochrome bitmap.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The glyph bitmap returned by <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetGlyphOutline.htm"></bpt>_WinAPI_GetGlyphOutline()<ept id="1">&lt;/a></ept> when $GGO_BITMAP is specified is a DWORD-aligned, row-oriented, monochrome bitmap.</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en"> When $GGO_GRAY2_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 4.</source>
<seg-source> <mrk mid="0" mtype="seg">When $GGO_GRAY2_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 4.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">When $GGO_GRAY2_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 4.</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en"> When $GGO_GRAY4_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 16.</source>
<seg-source> <mrk mid="0" mtype="seg">When $GGO_GRAY4_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 16.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">When $GGO_GRAY4_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 16.</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en"> When $GGO_GRAY8_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 64.</source>
<seg-source> <mrk mid="0" mtype="seg">When $GGO_GRAY8_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 64.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">When $GGO_GRAY8_BITMAP is specified, the bitmap returned is a DWORD-aligned, row-oriented array of bytes whose values range from 0 to 64.</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en"> When you no longer need the buffer allocated by this function, you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_FreeMemory.htm"></bpt>_WinAPI_FreeMemory()<ept id="1">&lt;/a></ept> function (do not use any other memory routines) to release occupied memory.</source>
<seg-source> <mrk mid="0" mtype="seg">When you no longer need the buffer allocated by this function, you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_FreeMemory.htm"></bpt>_WinAPI_FreeMemory()<ept id="1">&lt;/a></ept> function (do not use any other memory routines) to release occupied memory.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">When you no longer need the buffer allocated by this function, you must call the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_FreeMemory.htm"></bpt>_WinAPI_FreeMemory()<ept id="1">&lt;/a></ept> function (do not use any other memory routines) to release occupied memory.</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetGlyphOutline);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetGlyphOutline<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetGlyphOutline);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetGlyphOutline<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetGlyphOutline);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetGlyphOutline<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Creates logical font ("Times") and retrieve bitmap bits for a random character</source>
<seg-source><mrk mid="0" mtype="seg">Creates logical font ("Times") and retrieve bitmap bits for a random character</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creates logical font ("Times") and retrieve bitmap bits for a random character</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">Times</source>
<seg-source><mrk mid="0" mtype="seg">Times</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Times</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">BlackBoxX</source>
<seg-source><mrk mid="0" mtype="seg">BlackBoxX</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BlackBoxX</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">BlackBoxY</source>
<seg-source><mrk mid="0" mtype="seg">BlackBoxY</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">BlackBoxY</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">Create 1 bits-per-pixel bitmap</source>
<seg-source><mrk mid="0" mtype="seg">Create 1 bits-per-pixel bitmap</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create 1 bits-per-pixel bitmap</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">Crop bitmap to the required size and colorize it</source>
<seg-source><mrk mid="0" mtype="seg">Crop bitmap to the required size and colorize it</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Crop bitmap to the required size and colorize it</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">Free unnecessary resources</source>
<seg-source><mrk mid="0" mtype="seg">Free unnecessary resources</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Free unnecessary resources</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">Create GUI</source>
<seg-source><mrk mid="0" mtype="seg">Create GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create GUI</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">Test</source>
<seg-source><mrk mid="0" mtype="seg">Test</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Test</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">.au3</source>
<seg-source><mrk mid="0" mtype="seg">.au3</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">.au3</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">()</source>
<seg-source><mrk mid="0" mtype="seg">()</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">()</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">Set bitmap to control</source>
<seg-source><mrk mid="0" mtype="seg">Set bitmap to control</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Set bitmap to control</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">Show GUI</source>
<seg-source><mrk mid="0" mtype="seg">Show GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Show GUI</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
