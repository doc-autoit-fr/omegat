<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_LoadLibraryEx.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Maps a specified executable module into the address space of the calling process</source>
<seg-source><mrk mid="0" mtype="seg">Maps a specified executable module into the address space of the calling process</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Maps a specified executable module into the address space of the calling process</mrk></target>
<note>Function _WinAPI_LoadLibraryEx</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Names a Win32 executable module (either a .dll or an .exe file). The name specified is the</source>
<seg-source><mrk mid="0" mtype="seg">Names a Win32 executable module (either a .dll or an .exe file).</mrk> <mrk mid="1" mtype="seg">The name specified is the</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Names a Win32 executable module (either a .dll or an .exe file).</mrk> <mrk mid="1" mtype="seg">The name specified is the</mrk></target>
<note>$sFileName</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> filename of the executable module.</source>
<seg-source> <mrk mid="0" mtype="seg">filename of the executable module.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">filename of the executable module.</mrk></target>
<note>$sFileName</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies the action to take when loading the module. This parameter can be one of the</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the action to take when loading the module.</mrk> <mrk mid="2" mtype="seg">This parameter can be one of the</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the action to take when loading the module.</mrk> <mrk mid="2" mtype="seg">This parameter can be one of the</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> following values:</source>
<seg-source> <mrk mid="0" mtype="seg">following values:</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">following values:</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> $DONT_RESOLVE_DLL_REFERENCES - If this value is used and the executable module is a DLL the system does not call DllMain for process and thread initialization and termination. Also, the system does not load additional executable modules that are referenced by the specified module.</source>
<seg-source> <mrk mid="0" mtype="seg">$DONT_RESOLVE_DLL_REFERENCES - If this value is used and the executable module is a DLL the system does not call DllMain for process and thread initialization and termination.</mrk> <mrk mid="1" mtype="seg">Also, the system does not load additional executable modules that are referenced by the specified module.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$DONT_RESOLVE_DLL_REFERENCES - If this value is used and the executable module is a DLL the system does not call DllMain for process and thread initialization and termination.</mrk> <mrk mid="1" mtype="seg">Also, the system does not load additional executable modules that are referenced by the specified module.</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> $LOAD_LIBRARY_AS_DATAFILE - If this value is used, the system maps the file into the calling process's address space as if it were a data file. Nothing is done to execute or prepare to execute the mapped file.</source>
<seg-source> <mrk mid="0" mtype="seg">$LOAD_LIBRARY_AS_DATAFILE - If this value is used, the system maps the file into the calling process's address space as if it were a data file.</mrk> <mrk mid="1" mtype="seg">Nothing is done to execute or prepare to execute the mapped file.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$LOAD_LIBRARY_AS_DATAFILE - If this value is used, the system maps the file into the calling process's address space as if it were a data file.</mrk> <mrk mid="1" mtype="seg">Nothing is done to execute or prepare to execute the mapped file.</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> $LOAD_WITH_ALTERED_SEARCH_PATH - If this value is used, and $FileName specifies a path, the system uses the alternate file search strategy to find the associated executable modules that the specified module causes to be loaded.</source>
<seg-source> <mrk mid="0" mtype="seg">$LOAD_WITH_ALTERED_SEARCH_PATH - If this value is used, and $FileName specifies a path, the system uses the alternate file search strategy to find the associated executable modules that the specified module causes to be loaded.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$LOAD_WITH_ALTERED_SEARCH_PATH - If this value is used, and $FileName specifies a path, the system uses the alternate file search strategy to find the associated executable modules that the specified module causes to be loaded.</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">A handle to the executable module</source>
<seg-source><mrk mid="0" mtype="seg">A handle to the executable module</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A handle to the executable module</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> 0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information </source>
<seg-source> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">Above constants require #include &lt;WinAPIConstants.au3></source>
<seg-source><mrk mid="0" mtype="seg">Above constants require #include &lt;WinAPIConstants.au3></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Above constants require #include &lt;WinAPIConstants.au3></mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(LoadLibraryEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>LoadLibraryEx<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(LoadLibraryEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>LoadLibraryEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(LoadLibraryEx);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>LoadLibraryEx<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Create GUI</source>
<seg-source><mrk mid="0" mtype="seg">Create GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create GUI</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">WinAPI</source>
<seg-source><mrk mid="0" mtype="seg">WinAPI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">WinAPI</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">create the rebar control</source>
<seg-source><mrk mid="0" mtype="seg">create the rebar control</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">create the rebar control</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Courier New</source>
<seg-source><mrk mid="0" mtype="seg">Courier New</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Courier New</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">add band containing the control</source>
<seg-source><mrk mid="0" mtype="seg">add band containing the control</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">add band containing the control</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">String ID:</source>
<seg-source><mrk mid="0" mtype="seg">String ID:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">String ID:</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Get String</source>
<seg-source><mrk mid="0" mtype="seg">Get String</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Get String</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">add band containing the control</source>
<seg-source><mrk mid="0" mtype="seg">add band containing the control</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">add band containing the control</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">shell32.dll</source>
<seg-source><mrk mid="0" mtype="seg">shell32.dll</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">shell32.dll</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Got the String (chars:</source>
<seg-source><mrk mid="0" mtype="seg">Got the String (chars:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Got the String (chars:</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">):</source>
<seg-source><mrk mid="0" mtype="seg">):</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">):</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">Last Error Message:</source>
<seg-source><mrk mid="0" mtype="seg">Last Error Message:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Last Error Message:</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Success Freeing?</source>
<seg-source><mrk mid="0" mtype="seg">Success Freeing?</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Success Freeing?</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Write message to memo</source>
<seg-source><mrk mid="0" mtype="seg">Write message to memo</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write message to memo</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
