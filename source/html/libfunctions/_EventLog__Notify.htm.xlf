<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_EventLog__Notify.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Enables an application to receive event notifications</source>
<seg-source><mrk mid="0" mtype="seg">Enables an application to receive event notifications</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Enables an application to receive event notifications</mrk></target>
<note>Function _EventLog__Notify</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">A handle to the event log</source>
<seg-source><mrk mid="0" mtype="seg">A handle to the event log</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A handle to the event log</mrk></target>
<note>$hEventLog</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">A handle to a manual-reset event object</source>
<seg-source><mrk mid="0" mtype="seg">A handle to a manual-reset event object</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A handle to a manual-reset event object</mrk></target>
<note>$hEvent</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">True</source>
<seg-source><mrk mid="0" mtype="seg">True</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">True</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">False</source>
<seg-source><mrk mid="0" mtype="seg">False</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">False</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">This function does not work with remote handles.</source>
<seg-source><mrk mid="0" mtype="seg">This function does not work with remote handles.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This function does not work with remote handles.</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> If the $hEventLog parameter is the handle to an event log on a remote computer, this function returns zero, and GetLastError returns ERROR_INVALID_HANDLE.</source>
<seg-source> <mrk mid="0" mtype="seg">If the $hEventLog parameter is the handle to an event log on a remote computer, this function returns zero, and GetLastError returns ERROR_INVALID_HANDLE.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the $hEventLog parameter is the handle to an event log on a remote computer, this function returns zero, and GetLastError returns ERROR_INVALID_HANDLE.</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> When an event is written to the log specified by $hEventLog, the system uses the PulseEvent function to set the event specified by the $hEvent parameter to the signaled state.</source>
<seg-source> <mrk mid="0" mtype="seg">When an event is written to the log specified by $hEventLog, the system uses the PulseEvent function to set the event specified by the $hEvent parameter to the signaled state.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">When an event is written to the log specified by $hEventLog, the system uses the PulseEvent function to set the event specified by the $hEvent parameter to the signaled state.</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> If the thread is not waiting on the event when the system calls PulseEvent, the thread will not receive the notification.</source>
<seg-source> <mrk mid="0" mtype="seg">If the thread is not waiting on the event when the system calls PulseEvent, the thread will not receive the notification.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the thread is not waiting on the event when the system calls PulseEvent, the thread will not receive the notification.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> Therefore, you should create a separate thread to wait for notifications.</source>
<seg-source> <mrk mid="0" mtype="seg">Therefore, you should create a separate thread to wait for notifications.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Therefore, you should create a separate thread to wait for notifications.</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> Note that the system calls PulseEvent no more than once every five seconds.</source>
<seg-source> <mrk mid="0" mtype="seg">Note that the system calls PulseEvent no more than once every five seconds.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Note that the system calls PulseEvent no more than once every five seconds.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> Therefore, even if more than one event log change occurs within a five second interval, you will only receive one notification.</source>
<seg-source> <mrk mid="0" mtype="seg">Therefore, even if more than one event log change occurs within a five second interval, you will only receive one notification.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Therefore, even if more than one event log change occurs within a five second interval, you will only receive one notification.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> The system will continue to notify you of changes until you close the handle to the event log.</source>
<seg-source> <mrk mid="0" mtype="seg">The system will continue to notify you of changes until you close the handle to the event log.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The system will continue to notify you of changes until you close the handle to the event log.</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> To close the event log, use the <bpt id="1" ctype="x-a">&lt;a href="_EventLog__Close.htm"></bpt>_EventLog__Close()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_EventLog__DeregisterSource.htm"></bpt>_EventLog__DeregisterSource()<ept id="2">&lt;/a></ept>.</source>
<seg-source> <mrk mid="0" mtype="seg">To close the event log, use the <bpt id="1" ctype="x-a">&lt;a href="_EventLog__Close.htm"></bpt>_EventLog__Close()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_EventLog__DeregisterSource.htm"></bpt>_EventLog__DeregisterSource()<ept id="2">&lt;/a></ept>.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">To close the event log, use the <bpt id="1" ctype="x-a">&lt;a href="_EventLog__Close.htm"></bpt>_EventLog__Close()<ept id="1">&lt;/a></ept> or <bpt id="2" ctype="x-a">&lt;a href="_EventLog__DeregisterSource.htm"></bpt>_EventLog__DeregisterSource()<ept id="2">&lt;/a></ept>.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Create GUI</source>
<seg-source><mrk mid="0" mtype="seg">Create GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create GUI</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">EventLog</source>
<seg-source><mrk mid="0" mtype="seg">EventLog</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">EventLog</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Courier New</source>
<seg-source><mrk mid="0" mtype="seg">Courier New</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Courier New</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">Set up event</source>
<seg-source><mrk mid="0" mtype="seg">Set up event</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Set up event</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">Security</source>
<seg-source><mrk mid="0" mtype="seg">Security</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Security</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Wait for new event to occur</source>
<seg-source><mrk mid="0" mtype="seg">Wait for new event to occur</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Wait for new event to occur</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Waiting for new event</source>
<seg-source><mrk mid="0" mtype="seg">Waiting for new event</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Waiting for new event</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Write results</source>
<seg-source><mrk mid="0" mtype="seg">Write results</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write results</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Wait failed</source>
<seg-source><mrk mid="0" mtype="seg">Wait failed</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Wait failed</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">New event occurred</source>
<seg-source><mrk mid="0" mtype="seg">New event occurred</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">New event occurred</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">Loop until the user exits.</source>
<seg-source><mrk mid="0" mtype="seg">Loop until the user exits.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Loop until the user exits.</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Write a line to the memo control</source>
<seg-source><mrk mid="0" mtype="seg">Write a line to the memo control</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write a line to the memo control</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
