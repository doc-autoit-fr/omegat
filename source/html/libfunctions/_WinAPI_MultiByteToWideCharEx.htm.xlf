<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_MultiByteToWideCharEx.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Maps a character string to a wide-character (Unicode) string</source>
<seg-source><mrk mid="0" mtype="seg">Maps a character string to a wide-character (Unicode) string</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Maps a character string to a wide-character (Unicode) string</mrk></target>
<note>Function _WinAPI_MultiByteToWideCharEx</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Text to be converted</source>
<seg-source><mrk mid="0" mtype="seg">Text to be converted</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Text to be converted</mrk></target>
<note>$sText</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Pointer to a byte structure where the converted string will be stored</source>
<seg-source><mrk mid="0" mtype="seg">Pointer to a byte structure where the converted string will be stored</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Pointer to a byte structure where the converted string will be stored</mrk></target>
<note>$pText</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies the code page to be used to perform the conversion:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the code page to be used to perform the conversion:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the code page to be used to perform the conversion:</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">     0 - ANSI code page</source>
<seg-source> <mrk mid="0" mtype="seg">    0 - ANSI code page</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    0 - ANSI code page</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">     1 - OEM code page</source>
<seg-source> <mrk mid="0" mtype="seg">    1 - OEM code page</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    1 - OEM code page</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">     2 - Macintosh code page</source>
<seg-source> <mrk mid="0" mtype="seg">    2 - Macintosh code page</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    2 - Macintosh code page</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Flags that indicate whether to translate to precomposed or composite wide characters:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Flags that indicate whether to translate to precomposed or composite wide characters:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Flags that indicate whether to translate to precomposed or composite wide characters:</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">     $MB_PRECOMPOSED - Always use precomposed characters</source>
<seg-source> <mrk mid="0" mtype="seg">    $MB_PRECOMPOSED - Always use precomposed characters</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $MB_PRECOMPOSED - Always use precomposed characters</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">     $MB_COMPOSITE - Always use composite characters</source>
<seg-source> <mrk mid="0" mtype="seg">    $MB_COMPOSITE - Always use composite characters</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $MB_COMPOSITE - Always use composite characters</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">     $MB_USEGLYPHCHARS - Use glyph characters instead of control characters</source>
<seg-source> <mrk mid="0" mtype="seg">    $MB_USEGLYPHCHARS - Use glyph characters instead of control characters</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $MB_USEGLYPHCHARS - Use glyph characters instead of control characters</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">True</source>
<seg-source><mrk mid="0" mtype="seg">True</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">True</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> False, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information </source>
<seg-source> <mrk mid="0" mtype="seg">False, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">False, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">The byte structure must be at least twice the length of $sText.</source>
<seg-source><mrk mid="0" mtype="seg">The byte structure must be at least twice the length of $sText.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The byte structure must be at least twice the length of $sText.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
