<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_IETableWriteToArray.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Reads the contents of a Table into an array</source>
<seg-source><mrk mid="0" mtype="seg">Reads the contents of a Table into an array</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reads the contents of a Table into an array</mrk></target>
<note>Function _IETableWriteToArray</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Object variable of an InternetExplorer.Application, Table object</source>
<seg-source><mrk mid="0" mtype="seg">Object variable of an InternetExplorer.</mrk><mrk mid="1" mtype="seg">Application, Table object</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Object variable of an InternetExplorer.</mrk><mrk mid="1" mtype="seg">Application, Table object</mrk></target>
<note>$oObject</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Boolean value specifying whether to swap the rows and columns in the output array</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Boolean value specifying whether to swap the rows and columns in the output array</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Boolean value specifying whether to swap the rows and columns in the output array</mrk></target>
<note>$bTranspose</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">a 2-dimensional array containing the contents of the Table.</source>
<seg-source><mrk mid="0" mtype="seg">a 2-dimensional array containing the contents of the Table.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a 2-dimensional array containing the contents of the Table.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">sets the @error flag to non-zero.</source>
<seg-source><mrk mid="0" mtype="seg">sets the @error flag to non-zero.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">sets the @error flag to non-zero.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">@error:</source>
<seg-source><mrk mid="0" mtype="seg">@error:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">@error:</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">2 ($_IEStatus_COMError) - COM Error in Object reference</source>
<seg-source><mrk mid="0" mtype="seg">2 ($_IEStatus_COMError) - COM Error in Object reference</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">2 ($_IEStatus_COMError) - COM Error in Object reference</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> 3 ($_IEStatus_InvalidDataType) - Invalid Data Type</source>
<seg-source> <mrk mid="0" mtype="seg">3 ($_IEStatus_InvalidDataType) - Invalid Data Type</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">3 ($_IEStatus_InvalidDataType) - Invalid Data Type</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> 4 ($_IEStatus_InvalidObjectType) - Invalid Object Type</source>
<seg-source> <mrk mid="0" mtype="seg">4 ($_IEStatus_InvalidObjectType) - Invalid Object Type</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">4 ($_IEStatus_InvalidObjectType) - Invalid Object Type</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">@extended:</source>
<seg-source><mrk mid="0" mtype="seg">@extended:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">@extended:</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Contains invalid parameter number</source>
<seg-source><mrk mid="0" mtype="seg">Contains invalid parameter number</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Contains invalid parameter number</mrk></target>
<note>@extended:</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">When table cells span multiple columns or rows, blank array elements are added to properly align the results.</source>
<seg-source><mrk mid="0" mtype="seg">When table cells span multiple columns or rows, blank array elements are added to properly align the results.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">When table cells span multiple columns or rows, blank array elements are added to properly align the results.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> Data in spanning cells will be in the left or uppermost array elements.</source>
<seg-source> <mrk mid="0" mtype="seg">Data in spanning cells will be in the left or uppermost array elements.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Data in spanning cells will be in the left or uppermost array elements.</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> Tables are often nested in HTML documents.</source>
<seg-source> <mrk mid="0" mtype="seg">Tables are often nested in HTML documents.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Tables are often nested in HTML documents.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> If all of your data is unexpectedly returned in a single array element, you may need to reference a more deeply nested table to this function.</source>
<seg-source> <mrk mid="0" mtype="seg">If all of your data is unexpectedly returned in a single array element, you may need to reference a more deeply nested table to this function.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If all of your data is unexpectedly returned in a single array element, you may need to reference a more deeply nested table to this function.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Example 1</source>
<seg-source><mrk mid="0" mtype="seg">Example 1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 1</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Open a browser with the table example, get a reference to the second table</source>
<seg-source><mrk mid="0" mtype="seg">Open a browser with the table example, get a reference to the second table</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Open a browser with the table example, get a reference to the second table</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">on the page (index 1) and read its contents into a 2-D array</source>
<seg-source><mrk mid="0" mtype="seg">on the page (index 1) and read its contents into a 2-D array</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">on the page (index 1) and read its contents into a 2-D array</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">table</source>
<seg-source><mrk mid="0" mtype="seg">table</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">table</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Example 2</source>
<seg-source><mrk mid="0" mtype="seg">Example 2</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 2</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Same as Example 1, except transpose the output array and display</source>
<seg-source><mrk mid="0" mtype="seg">Same as Example 1, except transpose the output array and display</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Same as Example 1, except transpose the output array and display</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">the results with _ArrayDisplay()</source>
<seg-source><mrk mid="0" mtype="seg">the results with _ArrayDisplay()</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">the results with _ArrayDisplay()</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">table</source>
<seg-source><mrk mid="0" mtype="seg">table</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">table</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
