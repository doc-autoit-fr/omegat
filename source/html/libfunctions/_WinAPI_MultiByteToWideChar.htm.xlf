<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_MultiByteToWideChar.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Maps a character string to a wide-character (Unicode) string</source>
<seg-source><mrk mid="0" mtype="seg">Maps a character string to a wide-character (Unicode) string</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Maps a character string to a wide-character (Unicode) string</mrk></target>
<note>Function _WinAPI_MultiByteToWideChar</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Text or DllStruct containing multibyte text to be converted</source>
<seg-source><mrk mid="0" mtype="seg">Text or DllStruct containing multibyte text to be converted</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Text or DllStruct containing multibyte text to be converted</mrk></target>
<note>$vText</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies the code page to be used to perform the conversion:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the code page to be used to perform the conversion:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies the code page to be used to perform the conversion:</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">     0 - ANSI code page</source>
<seg-source> <mrk mid="0" mtype="seg">    0 - ANSI code page</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    0 - ANSI code page</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">     1 - OEM code page</source>
<seg-source> <mrk mid="0" mtype="seg">    1 - OEM code page</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    1 - OEM code page</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">     2 - Macintosh code page</source>
<seg-source> <mrk mid="0" mtype="seg">    2 - Macintosh code page</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    2 - Macintosh code page</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">     3 - The Windows ANSI code page for the current thread</source>
<seg-source> <mrk mid="0" mtype="seg">    3 - The Windows ANSI code page for the current thread</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    3 - The Windows ANSI code page for the current thread</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">     42 - Symbol code page</source>
<seg-source> <mrk mid="0" mtype="seg">    42 - Symbol code page</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    42 - Symbol code page</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">     65000 - UTF-7</source>
<seg-source> <mrk mid="0" mtype="seg">    65000 - UTF-7</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    65000 - UTF-7</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">     65001 - UTF-8</source>
<seg-source> <mrk mid="0" mtype="seg">    65001 - UTF-8</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    65001 - UTF-8</mrk></target>
<note>$iCodePage</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Flags that indicate whether to translate to precomposed or composite wide characters:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Flags that indicate whether to translate to precomposed or composite wide characters:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Flags that indicate whether to translate to precomposed or composite wide characters:</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">     $MB_PRECOMPOSED - Always use precomposed characters</source>
<seg-source> <mrk mid="0" mtype="seg">    $MB_PRECOMPOSED - Always use precomposed characters</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $MB_PRECOMPOSED - Always use precomposed characters</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">     $MB_COMPOSITE - Always use composite characters</source>
<seg-source> <mrk mid="0" mtype="seg">    $MB_COMPOSITE - Always use composite characters</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $MB_COMPOSITE - Always use composite characters</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">     $MB_USEGLYPHCHARS - Use glyph characters instead of control characters</source>
<seg-source> <mrk mid="0" mtype="seg">    $MB_USEGLYPHCHARS - Use glyph characters instead of control characters</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $MB_USEGLYPHCHARS - Use glyph characters instead of control characters</mrk></target>
<note>$iFlags</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Flags that indicate whether to return a String or a DllStruct (default False : Structure)</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Flags that indicate whether to return a String or a DllStruct (default False :</mrk> <mrk mid="2" mtype="seg">Structure)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Flags that indicate whether to return a String or a DllStruct (default False :</mrk> <mrk mid="2" mtype="seg">Structure)</mrk></target>
<note>$bRetString</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">String or DllStruct that contains the Unicode character string</source>
<seg-source><mrk mid="0" mtype="seg">String or DllStruct that contains the Unicode character string</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">String or DllStruct that contains the Unicode character string</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> Sets the @error flag to non-zero, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information </source>
<seg-source> <mrk mid="0" mtype="seg">Sets the @error flag to non-zero, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Sets the @error flag to non-zero, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(MultiByteToWideChar);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>MultiByteToWideChar<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(MultiByteToWideChar);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>MultiByteToWideChar<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(MultiByteToWideChar);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>MultiByteToWideChar<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
