<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_GetWindow.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Retrieves the handle of a window that has a specified relationship to the specified window</source>
<seg-source><mrk mid="0" mtype="seg">Retrieves the handle of a window that has a specified relationship to the specified window</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieves the handle of a window that has a specified relationship to the specified window</mrk></target>
<note>Function _WinAPI_GetWindow</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Handle of the window</source>
<seg-source><mrk mid="0" mtype="seg">Handle of the window</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle of the window</mrk></target>
<note>$hWnd</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Specifies the relationship between the specified window and the window whose handle is to be retrieved.</source>
<seg-source><mrk mid="0" mtype="seg">Specifies the relationship between the specified window and the window whose handle is to be retrieved.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies the relationship between the specified window and the window whose handle is to be retrieved.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> This parameter can be one of the following values:</source>
<seg-source> <mrk mid="0" mtype="seg">This parameter can be one of the following values:</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">This parameter can be one of the following values:</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">     $GW_CHILD - The retrieved handle identifies the child window at the top of the Z order, if the specified</source>
<seg-source> <mrk mid="0" mtype="seg">    $GW_CHILD - The retrieved handle identifies the child window at the top of the Z order, if the specified</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GW_CHILD - The retrieved handle identifies the child window at the top of the Z order, if the specified</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">         window is a parent window; otherwise, the retrieved handle is 0.</source>
<seg-source> <mrk mid="0" mtype="seg">        window is a parent window; otherwise, the retrieved handle is 0.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        window is a parent window; otherwise, the retrieved handle is 0.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">         The function examines only child windows of the specified window. It does not examine descendant windows.</source>
<seg-source> <mrk mid="0" mtype="seg">        The function examines only child windows of the specified window.</mrk> <mrk mid="1" mtype="seg">It does not examine descendant windows.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        The function examines only child windows of the specified window.</mrk> <mrk mid="1" mtype="seg">It does not examine descendant windows.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">     $GW_HWNDFIRST - The retrieved handle identifies the window of the same type that is highest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">    $GW_HWNDFIRST - The retrieved handle identifies the window of the same type that is highest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GW_HWNDFIRST - The retrieved handle identifies the window of the same type that is highest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">         If the specified window is a topmost window, the handle identifies the topmost window that is highest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window that is highest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window that is highest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">         If the specified window is a top-level window, the handle identifies the top level window that is highest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a top-level window, the handle identifies the top level window that is highest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a top-level window, the handle identifies the top level window that is highest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">         If the specified window is a child window, the handle identifies the sibling window that is highest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a child window, the handle identifies the sibling window that is highest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a child window, the handle identifies the sibling window that is highest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">     $GW_HWNDLAST - The retrieved handle identifies the window of the same type that is lowest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">    $GW_HWNDLAST - The retrieved handle identifies the window of the same type that is lowest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GW_HWNDLAST - The retrieved handle identifies the window of the same type that is lowest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">         If the specified window is a topmost window, the handle identifies the topmost window that is lowest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window that is lowest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window that is lowest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">         If the specified window is a top-level window the handle identifies the top-level window that's lowest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a top-level window the handle identifies the top-level window that's lowest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a top-level window the handle identifies the top-level window that's lowest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">         If the specified window is a child window, the handle identifies the sibling window that is lowest in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a child window, the handle identifies the sibling window that is lowest in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a child window, the handle identifies the sibling window that is lowest in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">     $GW_HWNDNEXT - The retrieved handle identifies the window below the specified window in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">    $GW_HWNDNEXT - The retrieved handle identifies the window below the specified window in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GW_HWNDNEXT - The retrieved handle identifies the window below the specified window in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">         If the specified window is a topmost window, the handle identifies the topmost window below the specified window.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window below the specified window.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window below the specified window.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">         If the specified window is a top-level window, the handle identifies the top-level window below the specified window.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a top-level window, the handle identifies the top-level window below the specified window.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a top-level window, the handle identifies the top-level window below the specified window.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">         If the specified window is a child window the handle identifies the sibling window below the specified window.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a child window the handle identifies the sibling window below the specified window.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a child window the handle identifies the sibling window below the specified window.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">     $GW_HWNDPREV - The retrieved handle identifies the window above the specified window in the Z order.</source>
<seg-source> <mrk mid="0" mtype="seg">    $GW_HWNDPREV - The retrieved handle identifies the window above the specified window in the Z order.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GW_HWNDPREV - The retrieved handle identifies the window above the specified window in the Z order.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">         If the specified window is a topmost window, the handle identifies the topmost window above the specified window.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window above the specified window.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a topmost window, the handle identifies the topmost window above the specified window.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">         If the specified window is a top-level window, the handle identifies the top-level window above the specified window.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a top-level window, the handle identifies the top-level window above the specified window.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a top-level window, the handle identifies the top-level window above the specified window.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">         If the specified window is a child window, the handle identifies the sibling window above the specified window.</source>
<seg-source> <mrk mid="0" mtype="seg">        If the specified window is a child window, the handle identifies the sibling window above the specified window.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">        If the specified window is a child window, the handle identifies the sibling window above the specified window.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">     $GW_OWNER - The retrieved handle identifies the specified window's owner window if any.</source>
<seg-source> <mrk mid="0" mtype="seg">    $GW_OWNER - The retrieved handle identifies the specified window's owner window if any.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $GW_OWNER - The retrieved handle identifies the specified window's owner window if any.</mrk></target>
<note>$iCmd</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">The window handle</source>
<seg-source><mrk mid="0" mtype="seg">The window handle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The window handle</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> 0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information </source>
<seg-source> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">0, call <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetLastError.htm"></bpt>_WinAPI_GetLastError()<ept id="1">&lt;/a></ept> to get extended error information</mrk> </target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">Above constants require #include &lt;WinAPIConstants.au3></source>
<seg-source><mrk mid="0" mtype="seg">Above constants require #include &lt;WinAPIConstants.au3></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Above constants require #include &lt;WinAPIConstants.au3></mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetWindow);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetWindow<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetWindow);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetWindow<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(GetWindow);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>GetWindow<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
