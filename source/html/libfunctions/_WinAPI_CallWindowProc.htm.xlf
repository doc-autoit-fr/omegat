<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_WinAPI_CallWindowProc.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Passes the hook information to the next hook procedure in the current hook chain</source>
<seg-source><mrk mid="0" mtype="seg">Passes the hook information to the next hook procedure in the current hook chain</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Passes the hook information to the next hook procedure in the current hook chain</mrk></target>
<note>Function _WinAPI_CallWindowProc</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> Pointer to the previous window procedure.</source>
<seg-source> <mrk mid="0" mtype="seg">Pointer to the previous window procedure.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Pointer to the previous window procedure.</mrk></target>
<note>$pPrevWndFunc</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> If this value is obtained by calling the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetWindowLong.htm"></bpt>_WinAPI_GetWindowLong()<ept id="1">&lt;/a></ept> function with the $iIndex parameter set to $GWL_WNDPROC or $DWL_DLGPROC, it is actually either the address of a window or dialog box procedure, or a special internal value meaningful only to <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="2">&lt;/a></ept>. </source>
<seg-source> <mrk mid="0" mtype="seg">If this value is obtained by calling the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetWindowLong.htm"></bpt>_WinAPI_GetWindowLong()<ept id="1">&lt;/a></ept> function with the $iIndex parameter set to $GWL_WNDPROC or $DWL_DLGPROC, it is actually either the address of a window or dialog box procedure, or a special internal value meaningful only to <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="2">&lt;/a></ept>.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this value is obtained by calling the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_GetWindowLong.htm"></bpt>_WinAPI_GetWindowLong()<ept id="1">&lt;/a></ept> function with the $iIndex parameter set to $GWL_WNDPROC or $DWL_DLGPROC, it is actually either the address of a window or dialog box procedure, or a special internal value meaningful only to <bpt id="2" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="2">&lt;/a></ept>.</mrk> </target>
<note>$pPrevWndFunc</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Handle to the window procedure to receive the message</source>
<seg-source><mrk mid="0" mtype="seg">Handle to the window procedure to receive the message</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Handle to the window procedure to receive the message</mrk></target>
<note>$hWnd</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">Specifies the message</source>
<seg-source><mrk mid="0" mtype="seg">Specifies the message</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies the message</mrk></target>
<note>$iMsg</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">Specifies additional message-specific information. The contents of this parameter depend on the value of the Msg parameter</source>
<seg-source><mrk mid="0" mtype="seg">Specifies additional message-specific information.</mrk> <mrk mid="1" mtype="seg">The contents of this parameter depend on the value of the Msg parameter</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies additional message-specific information.</mrk> <mrk mid="1" mtype="seg">The contents of this parameter depend on the value of the Msg parameter</mrk></target>
<note>$wParam</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">Specifies additional message-specific information. The contents of this parameter depend on the value of the Msg parameter</source>
<seg-source><mrk mid="0" mtype="seg">Specifies additional message-specific information.</mrk> <mrk mid="1" mtype="seg">The contents of this parameter depend on the value of the Msg parameter</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Specifies additional message-specific information.</mrk> <mrk mid="1" mtype="seg">The contents of this parameter depend on the value of the Msg parameter</mrk></target>
<note>$lParam</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">Returns the return value specifies the result of the message processing and depends on the message sent</source>
<seg-source><mrk mid="0" mtype="seg">Returns the return value specifies the result of the message processing and depends on the message sent</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the return value specifies the result of the message processing and depends on the message sent</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="1">&lt;/a></ept> function for window subclassing. Usually, all windows with the same class share one window procedure.</source>
<seg-source><mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="1">&lt;/a></ept> function for window subclassing.</mrk> <mrk mid="1" mtype="seg">Usually, all windows with the same class share one window procedure.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Use the <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="1">&lt;/a></ept> function for window subclassing.</mrk> <mrk mid="1" mtype="seg">Usually, all windows with the same class share one window procedure.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> A subclass is a window or set of windows with the same class whose messages are intercepted and processed by another window procedure (or procedures) before being passed to the window procedure of the class.</source>
<seg-source> <mrk mid="0" mtype="seg">A subclass is a window or set of windows with the same class whose messages are intercepted and processed by another window procedure (or procedures) before being passed to the window procedure of the class.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">A subclass is a window or set of windows with the same class whose messages are intercepted and processed by another window procedure (or procedures) before being passed to the window procedure of the class.</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_SetWindowLong.htm"></bpt>_WinAPI_SetWindowLong()<ept id="1">&lt;/a></ept> function creates the subclass by changing the window procedure associated with a particular window, causing the system to call the new window procedure instead of the previous one.</source>
<seg-source> <mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_SetWindowLong.htm"></bpt>_WinAPI_SetWindowLong()<ept id="1">&lt;/a></ept> function creates the subclass by changing the window procedure associated with a particular window, causing the system to call the new window procedure instead of the previous one.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_SetWindowLong.htm"></bpt>_WinAPI_SetWindowLong()<ept id="1">&lt;/a></ept> function creates the subclass by changing the window procedure associated with a particular window, causing the system to call the new window procedure instead of the previous one.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> An application must pass any messages not processed by the new window procedure to the previous window procedure by calling <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="1">&lt;/a></ept>.</source>
<seg-source> <mrk mid="0" mtype="seg">An application must pass any messages not processed by the new window procedure to the previous window procedure by calling <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="1">&lt;/a></ept>.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">An application must pass any messages not processed by the new window procedure to the previous window procedure by calling <bpt id="1" ctype="x-a">&lt;a href="_WinAPI_CallWindowProc.htm"></bpt>_WinAPI_CallWindowProc()<ept id="1">&lt;/a></ept>.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> This allows the application to create a chain of window procedures.</source>
<seg-source> <mrk mid="0" mtype="seg">This allows the application to create a chain of window procedures.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">This allows the application to create a chain of window procedures.</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CallWindowProc);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CallWindowProc<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CallWindowProc);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CallWindowProc<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(CallWindowProc);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>CallWindowProc<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Type or paste some stuff</source>
<seg-source><mrk mid="0" mtype="seg">Type or paste some stuff</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Type or paste some stuff</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">abcd</source>
<seg-source><mrk mid="0" mtype="seg">abcd</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">abcd</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">_MyWindowProc</source>
<seg-source><mrk mid="0" mtype="seg">_MyWindowProc</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_MyWindowProc</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">ptr</source>
<seg-source><mrk mid="0" mtype="seg">ptr</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ptr</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">hwnd;uint;long;ptr</source>
<seg-source><mrk mid="0" mtype="seg">hwnd;uint;long;ptr</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">hwnd;uint;long;ptr</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">_WinAPI_SetWindowLong(GUICtrlGetHandle($g_idInput3), $GWL_WNDPROC, DllCallbackGetPtr($hProcNew)) and so on</source>
<seg-source><mrk mid="0" mtype="seg">_WinAPI_SetWindowLong(GUICtrlGetHandle($g_idInput3), $GWL_WNDPROC, DllCallbackGetPtr($hProcNew)) and so on</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_WinAPI_SetWindowLong(GUICtrlGetHandle($g_idInput3), $GWL_WNDPROC, DllCallbackGetPtr($hProcNew)) and so on</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Common</source>
<seg-source><mrk mid="0" mtype="seg">Common</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Common</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">File</source>
<seg-source><mrk mid="0" mtype="seg">File</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">File</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Exit</source>
<seg-source><mrk mid="0" mtype="seg">Exit</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Exit</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">clip data is not text or clip empty</source>
<seg-source><mrk mid="0" mtype="seg">clip data is not text or clip empty</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">clip data is not text or clip empty</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">do whatever</source>
<seg-source><mrk mid="0" mtype="seg">do whatever</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">do whatever</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">set text</source>
<seg-source><mrk mid="0" mtype="seg">set text</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">set text</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">or _GUICtrlEdit_SetText($hWnd, $sData)</source>
<seg-source><mrk mid="0" mtype="seg">or _GUICtrlEdit_SetText($hWnd, $sData)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">or _GUICtrlEdit_SetText($hWnd, $sData)</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">Show a menu in a given GUI window which belongs to a given GUI ctrl</source>
<seg-source><mrk mid="0" mtype="seg">Show a menu in a given GUI window which belongs to a given GUI ctrl</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Show a menu in a given GUI window which belongs to a given GUI ctrl</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Common</source>
<seg-source><mrk mid="0" mtype="seg">Common</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Common</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">File</source>
<seg-source><mrk mid="0" mtype="seg">File</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">File</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Exit</source>
<seg-source><mrk mid="0" mtype="seg">Exit</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Exit</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">;set Ibeam cursor</source>
<seg-source><mrk mid="0" mtype="seg">;set Ibeam cursor</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">;set Ibeam cursor</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">;and don't let default windowproc mess things up</source>
<seg-source><mrk mid="0" mtype="seg">;and don't let default windowproc mess things up</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">;and don't let default windowproc mess things up</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">pass the unhandled messages to default WindowProc</source>
<seg-source><mrk mid="0" mtype="seg">pass the unhandled messages to default WindowProc</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">pass the unhandled messages to default WindowProc</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
