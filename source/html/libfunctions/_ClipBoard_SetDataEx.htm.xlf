<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/libfunctions/_ClipBoard_SetDataEx.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Places data on the clipboard in a specified clipboard format</source>
<seg-source><mrk mid="0" mtype="seg">Places data on the clipboard in a specified clipboard format</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Places data on the clipboard in a specified clipboard format</mrk></target>
<note>Function _ClipBoard_SetDataEx</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> Handle to the data in the specified format. This parameter can be NULL, indicating that the window provides data in the specified clipboard format upon request.</source>
<seg-source> <mrk mid="0" mtype="seg">Handle to the data in the specified format.</mrk> <mrk mid="1" mtype="seg">This parameter can be NULL, indicating that the window provides data in the specified clipboard format upon request.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Handle to the data in the specified format.</mrk> <mrk mid="1" mtype="seg">This parameter can be NULL, indicating that the window provides data in the specified clipboard format upon request.</mrk></target>
<note>$hMemory</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"> If a window delays rendering, it must process the $WM_RENDERFORMAT and $WM_RENDERALLFORMATS messages.</source>
<seg-source> <mrk mid="0" mtype="seg">If a window delays rendering, it must process the $WM_RENDERFORMAT and $WM_RENDERALLFORMATS messages.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If a window delays rendering, it must process the $WM_RENDERFORMAT and $WM_RENDERALLFORMATS messages.</mrk></target>
<note>$hMemory</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> If this function succeeds, the system owns the object identified by the $hMemory parameter.</source>
<seg-source> <mrk mid="0" mtype="seg">If this function succeeds, the system owns the object identified by the $hMemory parameter.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If this function succeeds, the system owns the object identified by the $hMemory parameter.</mrk></target>
<note>$hMemory</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> The application may not write to or free the data once ownership has been transferred to the system, but it can lock and read from the data until the <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_Close.htm"></bpt>_ClipBoard_Close()<ept id="1">&lt;/a></ept> function is called.</source>
<seg-source> <mrk mid="0" mtype="seg">The application may not write to or free the data once ownership has been transferred to the system, but it can lock and read from the data until the <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_Close.htm"></bpt>_ClipBoard_Close()<ept id="1">&lt;/a></ept> function is called.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The application may not write to or free the data once ownership has been transferred to the system, but it can lock and read from the data until the <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_Close.htm"></bpt>_ClipBoard_Close()<ept id="1">&lt;/a></ept> function is called.</mrk></target>
<note>$hMemory</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"> The memory must be unlocked before the clipboard is closed.</source>
<seg-source> <mrk mid="0" mtype="seg">The memory must be unlocked before the clipboard is closed.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The memory must be unlocked before the clipboard is closed.</mrk></target>
<note>$hMemory</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> If the $hMemory parameter identifies a memory object, the object must have been allocated using the function with the $GMEM_MOVEABLE flag. </source>
<seg-source> <mrk mid="0" mtype="seg">If the $hMemory parameter identifies a memory object, the object must have been allocated using the function with the $GMEM_MOVEABLE flag.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If the $hMemory parameter identifies a memory object, the object must have been allocated using the function with the $GMEM_MOVEABLE flag.</mrk> </target>
<note>$hMemory</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Specifies a clipboard format:</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies a clipboard format:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Specifies a clipboard format:</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> $CF_TEXT - Text format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_TEXT - Text format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_TEXT - Text format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"> $CF_BITMAP - Handle to a bitmap (HBITMAP)</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_BITMAP - Handle to a bitmap (HBITMAP)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_BITMAP - Handle to a bitmap (HBITMAP)</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> $CF_METAFILEPICT - Handle to a metafile picture (METAFILEPICT)</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_METAFILEPICT - Handle to a metafile picture (METAFILEPICT)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_METAFILEPICT - Handle to a metafile picture (METAFILEPICT)</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> $CF_SYLK - Microsoft Symbolic Link (SYLK) format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_SYLK - Microsoft Symbolic Link (SYLK) format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_SYLK - Microsoft Symbolic Link (SYLK) format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> $CF_DIF - Software Arts' Data Interchange Format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DIF - Software Arts' Data Interchange Format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DIF - Software Arts' Data Interchange Format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> $CF_TIFF - Tagged image file format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_TIFF - Tagged image file format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_TIFF - Tagged image file format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> $CF_OEMTEXT - Text format containing characters in the OEM character set</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_OEMTEXT - Text format containing characters in the OEM character set</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_OEMTEXT - Text format containing characters in the OEM character set</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> $CF_DIB - BITMAPINFO structure followed by the bitmap bits</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DIB - BITMAPINFO structure followed by the bitmap bits</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DIB - BITMAPINFO structure followed by the bitmap bits</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> $CF_PALETTE - Handle to a color palette</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_PALETTE - Handle to a color palette</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_PALETTE - Handle to a color palette</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> $CF_PENDATA - Data for the pen extensions to Pen Computing</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_PENDATA - Data for the pen extensions to Pen Computing</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_PENDATA - Data for the pen extensions to Pen Computing</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> $CF_RIFF - Represents audio data in RIFF format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_RIFF - Represents audio data in RIFF format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_RIFF - Represents audio data in RIFF format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"> $CF_WAVE - Represents audio data in WAVE format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_WAVE - Represents audio data in WAVE format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_WAVE - Represents audio data in WAVE format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> $CF_UNICODETEXT - Unicode text format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_UNICODETEXT - Unicode text format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_UNICODETEXT - Unicode text format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en"> $CF_ENHMETAFILE - Handle to an enhanced metafile (HENHMETAFILE)</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_ENHMETAFILE - Handle to an enhanced metafile (HENHMETAFILE)</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_ENHMETAFILE - Handle to an enhanced metafile (HENHMETAFILE)</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> $CF_HDROP - Handle to type HDROP that identifies a list of files</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_HDROP - Handle to type HDROP that identifies a list of files</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_HDROP - Handle to type HDROP that identifies a list of files</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en"> $CF_LOCALE - Handle to the locale identifier associated with text in the clipboard</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_LOCALE - Handle to the locale identifier associated with text in the clipboard</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_LOCALE - Handle to the locale identifier associated with text in the clipboard</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> $CF_DIBV5 - BITMAPV5HEADER structure followed by bitmap color and the bitmap bits</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DIBV5 - BITMAPV5HEADER structure followed by bitmap color and the bitmap bits</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DIBV5 - BITMAPV5HEADER structure followed by bitmap color and the bitmap bits</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en"> $CF_OWNERDISPLAY - Owner display format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_OWNERDISPLAY - Owner display format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_OWNERDISPLAY - Owner display format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> $CF_DSPTEXT - Text display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPTEXT - Text display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPTEXT - Text display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en"> $CF_DSPBITMAP - Bitmap display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPBITMAP - Bitmap display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPBITMAP - Bitmap display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en"> $CF_DSPMETAFILEPICT - Metafile picture display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPMETAFILEPICT - Metafile picture display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPMETAFILEPICT - Metafile picture display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en"> $CF_DSPENHMETAFILE - Enhanced metafile display format associated with a private format</source>
<seg-source> <mrk mid="0" mtype="seg">$CF_DSPENHMETAFILE - Enhanced metafile display format associated with a private format</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$CF_DSPENHMETAFILE - Enhanced metafile display format associated with a private format</mrk></target>
<note>$iFormat</note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">The handle to the data</source>
<seg-source><mrk mid="0" mtype="seg">The handle to the data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The handle to the data</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">0</source>
<seg-source><mrk mid="0" mtype="seg">0</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">0</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">The $iFormat parameter can identify a registered clipboard format, or it can be one of the standard clipboard formats.</source>
<seg-source><mrk mid="0" mtype="seg">The $iFormat parameter can identify a registered clipboard format, or it can be one of the standard clipboard formats.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The $iFormat parameter can identify a registered clipboard format, or it can be one of the standard clipboard formats.</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en"> If an application calls this function in response to $WM_RENDERFORMAT or $WM_RENDERALLFORMATS, the application should not use the handle after this function has been called.</source>
<seg-source> <mrk mid="0" mtype="seg">If an application calls this function in response to $WM_RENDERFORMAT or $WM_RENDERALLFORMATS, the application should not use the handle after this function has been called.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If an application calls this function in response to $WM_RENDERFORMAT or $WM_RENDERALLFORMATS, the application should not use the handle after this function has been called.</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en"> If an application calls <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_Open.htm"></bpt>_ClipBoard_Open()<ept id="1">&lt;/a></ept> with a NULL handle, <bpt id="2" ctype="x-a">&lt;a href="_ClipBoard_Empty.htm"></bpt>_ClipBoard_Empty()<ept id="2">&lt;/a></ept> sets the clipboard owner to NULL; this causes this function to fail.</source>
<seg-source> <mrk mid="0" mtype="seg">If an application calls <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_Open.htm"></bpt>_ClipBoard_Open()<ept id="1">&lt;/a></ept> with a NULL handle, <bpt id="2" ctype="x-a">&lt;a href="_ClipBoard_Empty.htm"></bpt>_ClipBoard_Empty()<ept id="2">&lt;/a></ept> sets the clipboard owner to NULL; this causes this function to fail.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If an application calls <bpt id="1" ctype="x-a">&lt;a href="_ClipBoard_Open.htm"></bpt>_ClipBoard_Open()<ept id="1">&lt;/a></ept> with a NULL handle, <bpt id="2" ctype="x-a">&lt;a href="_ClipBoard_Empty.htm"></bpt>_ClipBoard_Empty()<ept id="2">&lt;/a></ept> sets the clipboard owner to NULL; this causes this function to fail.</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">See Also</source>
<seg-source><mrk mid="0" mtype="seg">See Also</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">See Also</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(SetClipboardData);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>SetClipboardData<ept id="1">&lt;/a></ept> in MSDN Library.</source>
<seg-source><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(SetClipboardData);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>SetClipboardData<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Search <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;amp;l=EN-US&amp;amp;k=k(SetClipboardData);k(DevLang-C);k(TargetOS-WINDOWS)&amp;amp;rd=true"></bpt>SetClipboardData<ept id="1">&lt;/a></ept> in MSDN Library.</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">Create GUI</source>
<seg-source><mrk mid="0" mtype="seg">Create GUI</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create GUI</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">Clipboard</source>
<seg-source><mrk mid="0" mtype="seg">Clipboard</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Clipboard</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">Courier New</source>
<seg-source><mrk mid="0" mtype="seg">Courier New</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Courier New</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">Set ClipBoard Data</source>
<seg-source><mrk mid="0" mtype="seg">Set ClipBoard Data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Set ClipBoard Data</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">Get ClipBoard Data</source>
<seg-source><mrk mid="0" mtype="seg">Get ClipBoard Data</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Get ClipBoard Data</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">Loop until the user exits.</source>
<seg-source><mrk mid="0" mtype="seg">Loop until the user exits.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Loop until the user exits.</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">Open clipboard</source>
<seg-source><mrk mid="0" mtype="seg">Open clipboard</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Open clipboard</mrk></target>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en">Empty clipboard</source>
<seg-source><mrk mid="0" mtype="seg">Empty clipboard</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Empty clipboard</mrk></target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">Create global memory buffer (show why using _ClipBoard_SetData is MUCH easier!)</source>
<seg-source><mrk mid="0" mtype="seg">Create global memory buffer (show why using _ClipBoard_SetData is MUCH easier!)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create global memory buffer (show why using _ClipBoard_SetData is MUCH easier!)</mrk></target>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en">Hello from AutoIt</source>
<seg-source><mrk mid="0" mtype="seg">Hello from AutoIt</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Hello from AutoIt</mrk></target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">_Mem_GlobalLock failed</source>
<seg-source><mrk mid="0" mtype="seg">_Mem_GlobalLock failed</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_Mem_GlobalLock failed</mrk></target>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en">char Text[</source>
<seg-source><mrk mid="0" mtype="seg">char Text[</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">char Text[</mrk></target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">]</source>
<seg-source><mrk mid="0" mtype="seg">]</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">]</mrk></target>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en">Text</source>
<seg-source><mrk mid="0" mtype="seg">Text</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Text</mrk></target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">Write clipboard text</source>
<seg-source><mrk mid="0" mtype="seg">Write clipboard text</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write clipboard text</mrk></target>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en">_ClipBoard_SetDataEx failed</source>
<seg-source><mrk mid="0" mtype="seg">_ClipBoard_SetDataEx failed</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_ClipBoard_SetDataEx failed</mrk></target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">_Mem_GlobalAlloc failed</source>
<seg-source><mrk mid="0" mtype="seg">_Mem_GlobalAlloc failed</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_Mem_GlobalAlloc failed</mrk></target>
</trans-unit>
<trans-unit id="60">
<source xml:lang="en">Close clipboard</source>
<seg-source><mrk mid="0" mtype="seg">Close clipboard</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close clipboard</mrk></target>
</trans-unit>
<trans-unit id="61">
<source xml:lang="en">Close clipboard</source>
<seg-source><mrk mid="0" mtype="seg">Close clipboard</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close clipboard</mrk></target>
</trans-unit>
<trans-unit id="62">
<source xml:lang="en">_ClipBoard_Empty failed</source>
<seg-source><mrk mid="0" mtype="seg">_ClipBoard_Empty failed</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_ClipBoard_Empty failed</mrk></target>
</trans-unit>
<trans-unit id="63">
<source xml:lang="en">_ClipBoard_Open failed</source>
<seg-source><mrk mid="0" mtype="seg">_ClipBoard_Open failed</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">_ClipBoard_Open failed</mrk></target>
</trans-unit>
<trans-unit id="64">
<source xml:lang="en">Write message to memo</source>
<seg-source><mrk mid="0" mtype="seg">Write message to memo</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Write message to memo</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
