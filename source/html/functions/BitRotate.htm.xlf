<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/functions/BitRotate.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Performs a bit shifting operation, with rotation.</source>
<seg-source><mrk mid="0" mtype="seg">Performs a bit shifting operation, with rotation.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Performs a bit shifting operation, with rotation.</mrk></target>
<note>Function BitRotate</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">The number to be operate on.</source>
<seg-source><mrk mid="0" mtype="seg">The number to be operate on.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The number to be operate on.</mrk></target>
<note>value</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Number of bits to rotate to the left (negative numbers rotate right). If not given, the default is 1.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Number of bits to rotate to the left (negative numbers rotate right).</mrk> <mrk mid="2" mtype="seg">If not given, the default is 1.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Number of bits to rotate to the left (negative numbers rotate right).</mrk> <mrk mid="2" mtype="seg">If not given, the default is 1.</mrk></target>
<note>shift</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> A string that determines the rotation size, the default is (16 bits). See below.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">A string that determines the rotation size, the default is (16 bits).</mrk> <mrk mid="2" mtype="seg">See below.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">A string that determines the rotation size, the default is (16 bits).</mrk> <mrk mid="2" mtype="seg">See below.</mrk></target>
<note>size</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">Size parameter :</source>
<seg-source><mrk mid="0" mtype="seg">Size parameter :</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Size parameter :</mrk></target>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">rotate bits within the low-order byte (8 bits).</source>
<seg-source><mrk mid="0" mtype="seg">rotate bits within the low-order byte (8 bits).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">rotate bits within the low-order byte (8 bits).</mrk></target>
<note>"B"</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">rotate bits within the low-order word (16 bits).</source>
<seg-source><mrk mid="0" mtype="seg">rotate bits within the low-order word (16 bits).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">rotate bits within the low-order word (16 bits).</mrk></target>
<note>"W"</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">rotate bits within the entire double-word (32 bits).</source>
<seg-source><mrk mid="0" mtype="seg">rotate bits within the entire double-word (32 bits).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">rotate bits within the entire double-word (32 bits).</mrk></target>
<note>"D"</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">the value rotated by the required number of bits.</source>
<seg-source><mrk mid="0" mtype="seg">the value rotated by the required number of bits.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">the value rotated by the required number of bits.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Sets the flag @error to non-zero if size is invalid.</source>
<seg-source><mrk mid="0" mtype="seg">Sets the flag @error to non-zero if size is invalid.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Sets the flag @error to non-zero if size is invalid.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">Remember hex notation can be used for numbers.</source>
<seg-source><mrk mid="0" mtype="seg">Remember hex notation can be used for numbers.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remember hex notation can be used for numbers.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Note: "b" is the symbol for byte.</source>
<seg-source><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">"b" is the symbol for byte.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">"b" is the symbol for byte.</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Assign a Local variable the bitwise left-rotate operation of 2.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable the bitwise left-rotate operation of 2.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable the bitwise left-rotate operation of 2.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">2 = 0010b left-rotated once -> 4 = 0100b</source>
<seg-source><mrk mid="0" mtype="seg">2 = 0010b left-rotated once -> 4 = 0100b</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">2 = 0010b left-rotated once -> 4 = 0100b</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Note: It is equivalent to do this: BitShift(2, -1)</source>
<seg-source><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">It is equivalent to do this:</mrk> <mrk mid="2" mtype="seg">BitShift(2, -1)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">It is equivalent to do this:</mrk> <mrk mid="2" mtype="seg">BitShift(2, -1)</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Display the result.</source>
<seg-source><mrk mid="0" mtype="seg">Display the result.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the result.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Assign a Local variable the bitwise right-rotate operation of 1.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable the bitwise right-rotate operation of 1.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable the bitwise right-rotate operation of 1.</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">1 = 0001b right-rotated once -> 32768 (32 bits) = 1000 0000 0000 0000b</source>
<seg-source><mrk mid="0" mtype="seg">1 = 0001b right-rotated once -> 32768 (32 bits) = 1000 0000 0000 0000b</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1 = 0001b right-rotated once -> 32768 (32 bits) = 1000 0000 0000 0000b</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">Display the result.</source>
<seg-source><mrk mid="0" mtype="seg">Display the result.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the result.</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Assign a Local variable the bitwise right-rotate operation of 14.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable the bitwise right-rotate operation of 14.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable the bitwise right-rotate operation of 14.</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">14 = 1110b right-rotated twice -> 32771 (16 bits) = 1000 0000 0000 0011b</source>
<seg-source><mrk mid="0" mtype="seg">14 = 1110b right-rotated twice -> 32771 (16 bits) = 1000 0000 0000 0011b</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">14 = 1110b right-rotated twice -> 32771 (16 bits) = 1000 0000 0000 0011b</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Display the result.</source>
<seg-source><mrk mid="0" mtype="seg">Display the result.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the result.</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Assign a Local variable the bitwise right-rotate operation of 14 on 32 bits.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable the bitwise right-rotate operation of 14 on 32 bits.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable the bitwise right-rotate operation of 14 on 32 bits.</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">D</source>
<seg-source><mrk mid="0" mtype="seg">D</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">D</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">14 = 1110b right-rotated twice -> -2147483645 (32 bits) = 1000 0000 0000 0000 0000 0000 0000 0011b (the first bit is signed)</source>
<seg-source><mrk mid="0" mtype="seg">14 = 1110b right-rotated twice -> -2147483645 (32 bits) = 1000 0000 0000 0000 0000 0000 0000 0011b (the first bit is signed)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">14 = 1110b right-rotated twice -> -2147483645 (32 bits) = 1000 0000 0000 0000 0000 0000 0000 0011b (the first bit is signed)</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Display the result.</source>
<seg-source><mrk mid="0" mtype="seg">Display the result.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the result.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
