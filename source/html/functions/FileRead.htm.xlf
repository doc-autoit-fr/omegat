<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/functions/FileRead.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Read in a number of characters from a previously opened file.</source>
<seg-source><mrk mid="0" mtype="seg">Read in a number of characters from a previously opened file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Read in a number of characters from a previously opened file.</mrk></target>
<note>Function FileRead</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> The handle of a file, as returned by a previous call to <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept>. Alternatively you may use a string filename as the first parameter. </source>
<seg-source> <mrk mid="0" mtype="seg">The handle of a file, as returned by a previous call to <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept>.</mrk> <mrk mid="1" mtype="seg">Alternatively you may use a string filename as the first parameter.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The handle of a file, as returned by a previous call to <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept>.</mrk> <mrk mid="1" mtype="seg">Alternatively you may use a string filename as the first parameter.</mrk> </target>
<note>filehandle/filename</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> The number of characters to read. See remarks.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The number of characters to read.</mrk> <mrk mid="2" mtype="seg">See remarks.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">The number of characters to read.</mrk> <mrk mid="2" mtype="seg">See remarks.</mrk></target>
<note>count</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">the binary/string read. @extended is set to the number of bytes/characters returned.</source>
<seg-source><mrk mid="0" mtype="seg">the binary/string read.</mrk> <mrk mid="1" mtype="seg">@extended is set to the number of bytes/characters returned.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">the binary/string read.</mrk> <mrk mid="1" mtype="seg">@extended is set to the number of bytes/characters returned.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">sets the @error flag to non-zero.</source>
<seg-source><mrk mid="0" mtype="seg">sets the @error flag to non-zero.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">sets the @error flag to non-zero.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">@error:</source>
<seg-source><mrk mid="0" mtype="seg">@error:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">@error:</mrk></target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">1 = if file not opened in read mode or other error</source>
<seg-source><mrk mid="0" mtype="seg">1 = if file not opened in read mode or other error</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1 = if file not opened in read mode or other error</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> -1 = if end-of-file is reached</source>
<seg-source> <mrk mid="0" mtype="seg">-1 = if end-of-file is reached</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">-1 = if end-of-file is reached</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">A negative or not defined count, reads the whole file from the current position.</source>
<seg-source><mrk mid="0" mtype="seg">A negative or not defined count, reads the whole file from the current position.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">A negative or not defined count, reads the whole file from the current position.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> If a filename is given rather than a file handle - the file will be opened and closed during the function call - for parsing large files this will be much slower than using filehandles.</source>
<seg-source> <mrk mid="0" mtype="seg">If a filename is given rather than a file handle - the file will be opened and closed during the function call - for parsing large files this will be much slower than using filehandles.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">If a filename is given rather than a file handle - the file will be opened and closed during the function call - for parsing large files this will be much slower than using filehandles.</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> Note: Do not mix filehandles and filenames, i.e., don't <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> a file and then use a filename in this function. Use either filehandles or filenames in your routines, not both!</source>
<seg-source> <mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">Do not mix filehandles and filenames, i.e., don't <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> a file and then use a filename in this function.</mrk> <mrk mid="2" mtype="seg">Use either filehandles or filenames in your routines, not both!</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">Do not mix filehandles and filenames, i.e., don't <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> a file and then use a filename in this function.</mrk> <mrk mid="2" mtype="seg">Use either filehandles or filenames in your routines, not both!</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> Both ANSI and UTF16/UTF8 text formats can be read - See <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> for details.</source>
<seg-source> <mrk mid="0" mtype="seg">Both ANSI and UTF16/UTF8 text formats can be read - See <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> for details.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Both ANSI and UTF16/UTF8 text formats can be read - See <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> for details.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> A file can be read as binary (byte) data by using <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> with the binary flag - in this case count is in bytes rather than characters. A count value that is too large can lead to AutoIt stopping with a memory allocation failure.</source>
<seg-source> <mrk mid="0" mtype="seg">A file can be read as binary (byte) data by using <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> with the binary flag - in this case count is in bytes rather than characters.</mrk> <mrk mid="1" mtype="seg">A count value that is too large can lead to AutoIt stopping with a memory allocation failure.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">A file can be read as binary (byte) data by using <bpt id="1" ctype="x-a">&lt;a href="FileOpen.htm"></bpt>FileOpen()<ept id="1">&lt;/a></ept> with the binary flag - in this case count is in bytes rather than characters.</mrk> <mrk mid="1" mtype="seg">A count value that is too large can lead to AutoIt stopping with a memory allocation failure.</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Create a constant variable in Local scope of the filepath that will be read/written to.</source>
<seg-source><mrk mid="0" mtype="seg">Create a constant variable in Local scope of the filepath that will be read/written to.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create a constant variable in Local scope of the filepath that will be read/written to.</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Create a temporary file to read data from.</source>
<seg-source><mrk mid="0" mtype="seg">Create a temporary file to read data from.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create a temporary file to read data from.</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">This is an example of using FileRead.</source>
<seg-source><mrk mid="0" mtype="seg">This is an example of using FileRead.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This is an example of using FileRead.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">An error occurred whilst writing the temporary file.</source>
<seg-source><mrk mid="0" mtype="seg">An error occurred whilst writing the temporary file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An error occurred whilst writing the temporary file.</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">Open the file for reading and store the handle to a variable.</source>
<seg-source><mrk mid="0" mtype="seg">Open the file for reading and store the handle to a variable.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Open the file for reading and store the handle to a variable.</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">An error occurred when reading the file.</source>
<seg-source><mrk mid="0" mtype="seg">An error occurred when reading the file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">An error occurred when reading the file.</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Read the contents of the file using the handle returned by FileOpen.</source>
<seg-source><mrk mid="0" mtype="seg">Read the contents of the file using the handle returned by FileOpen.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Read the contents of the file using the handle returned by FileOpen.</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Close the handle returned by FileOpen.</source>
<seg-source><mrk mid="0" mtype="seg">Close the handle returned by FileOpen.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the handle returned by FileOpen.</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Display the contents of the file.</source>
<seg-source><mrk mid="0" mtype="seg">Display the contents of the file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the contents of the file.</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Contents of the file:</source>
<seg-source><mrk mid="0" mtype="seg">Contents of the file:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Contents of the file:</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Delete the temporary file.</source>
<seg-source><mrk mid="0" mtype="seg">Delete the temporary file.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Delete the temporary file.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
