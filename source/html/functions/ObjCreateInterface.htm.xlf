<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/functions/ObjCreateInterface.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en"> Warning: This feature is experimental. It may not work, may contain bugs or may be changed or removed without notice.</source>
<seg-source> <mrk mid="0" mtype="seg">Warning:</mrk> <mrk mid="1" mtype="seg">This feature is experimental.</mrk> <mrk mid="2" mtype="seg">It may not work, may contain bugs or may be changed or removed without notice.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Warning:</mrk> <mrk mid="1" mtype="seg">This feature is experimental.</mrk> <mrk mid="2" mtype="seg">It may not work, may contain bugs or may be changed or removed without notice.</mrk></target>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en"> DO NOT REPORT BUGS OR REQUEST NEW FEATURES FOR THIS FEATURE. </source>
<seg-source> <mrk mid="0" mtype="seg">DO NOT REPORT BUGS OR REQUEST NEW FEATURES FOR THIS FEATURE.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">DO NOT REPORT BUGS OR REQUEST NEW FEATURES FOR THIS FEATURE.</mrk> </target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Creates a reference to an object from the given classname/object pointer, interface identifier and description string.</source>
<seg-source><mrk mid="0" mtype="seg">Creates a reference to an object from the given classname/object pointer, interface identifier and description string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creates a reference to an object from the given classname/object pointer, interface identifier and description string.</mrk></target>
<note>Function ObjCreateInterface</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Class identifier or object pointer. If this is a class identifier it can be in either ProgID or the string representation of the CLSID.</source>
<seg-source><mrk mid="0" mtype="seg">Class identifier or object pointer.</mrk> <mrk mid="1" mtype="seg">If this is a class identifier it can be in either ProgID or the string representation of the CLSID.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Class identifier or object pointer.</mrk> <mrk mid="1" mtype="seg">If this is a class identifier it can be in either ProgID or the string representation of the CLSID.</mrk></target>
<note>CLSID</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">String representation of interface identifier.</source>
<seg-source><mrk mid="0" mtype="seg">String representation of interface identifier.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">String representation of interface identifier.</mrk></target>
<note>IID</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> String describing v-table of the object. Use keyword Default to access IDispatch for dual interfaces.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">String describing v-table of the object.</mrk> <mrk mid="2" mtype="seg">Use keyword Default to access IDispatch for dual interfaces.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">String describing v-table of the object.</mrk> <mrk mid="2" mtype="seg">Use keyword Default to access IDispatch for dual interfaces.</mrk></target>
<note>interface_description</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Default value is True meaning the object interface inherits from IUnknown.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Default value is True meaning the object interface inherits from IUnknown.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Default value is True meaning the object interface inherits from IUnknown.</mrk></target>
<note>flag</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">an object.</source>
<seg-source><mrk mid="0" mtype="seg">an object.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an object.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">sets the @error flag to non-zero.</source>
<seg-source><mrk mid="0" mtype="seg">sets the @error flag to non-zero.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">sets the @error flag to non-zero.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"><bpt id="1" ctype="x-a">&lt;a href="ObjCreateInterface.htm"></bpt>ObjCreateInterface()<ept id="1">&lt;/a></ept> creates objects with methods that are listed in interface-description string.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ObjCreateInterface.htm"></bpt>ObjCreateInterface()<ept id="1">&lt;/a></ept> creates objects with methods that are listed in interface-description string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ObjCreateInterface.htm"></bpt>ObjCreateInterface()<ept id="1">&lt;/a></ept> creates objects with methods that are listed in interface-description string.</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> For COM objects (IUnknown based) first three methods are always QueryInterface, AddRef and Release. Don't specify them inside the description strings.</source>
<seg-source> <mrk mid="0" mtype="seg">For COM objects (IUnknown based) first three methods are always QueryInterface, AddRef and Release.</mrk> <mrk mid="1" mtype="seg">Don't specify them inside the description strings.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">For COM objects (IUnknown based) first three methods are always QueryInterface, AddRef and Release.</mrk> <mrk mid="1" mtype="seg">Don't specify them inside the description strings.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> <it id="1" ctype="x-strong" pos="open">&lt;strong></it>Methods listed inside description string must be in v-table order of the interface. If you provide an invalid or incorrect description AutoIt may become unstable or crash.<it id="1" ctype="x-strong" pos="close">&lt;/strong></it></source>
<seg-source> <mrk mid="0" mtype="seg"><it id="1" ctype="x-strong" pos="open">&lt;strong></it>Methods listed inside description string must be in v-table order of the interface.</mrk> <mrk mid="1" mtype="seg">If you provide an invalid or incorrect description AutoIt may become unstable or crash.<it id="1" ctype="x-strong" pos="close">&lt;/strong></it></mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><it id="1" ctype="x-strong" pos="open">&lt;strong></it>Methods listed inside description string must be in v-table order of the interface.</mrk> <mrk mid="1" mtype="seg">If you provide an invalid or incorrect description AutoIt may become unstable or crash.<it id="1" ctype="x-strong" pos="close">&lt;/strong></it></mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> Format of the description string is:</source>
<seg-source> <mrk mid="0" mtype="seg">Format of the description string is:</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Format of the description string is:</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en"> $sTagInterface = "MethodName1 RetType(ParamType1;ParamType2;...); MethodName2 RetType(..."</source>
<seg-source> <mrk mid="0" mtype="seg">$sTagInterface = "MethodName1 RetType(ParamType1;ParamType2;...);</mrk> <mrk mid="1" mtype="seg">MethodName2 RetType(..."</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">$sTagInterface = "MethodName1 RetType(ParamType1;ParamType2;...);</mrk> <mrk mid="1" mtype="seg">MethodName2 RetType(..."</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> By default, AutoIt uses the 'stdcall' calling convention for COM. To use the 'cdecl' place ':cdecl' after the return type.</source>
<seg-source> <mrk mid="0" mtype="seg">By default, AutoIt uses the 'stdcall' calling convention for COM.</mrk> <mrk mid="1" mtype="seg">To use the 'cdecl' place ':cdecl' after the return type.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">By default, AutoIt uses the 'stdcall' calling convention for COM.</mrk> <mrk mid="1" mtype="seg">To use the 'cdecl' place ':cdecl' after the return type.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en"> Valid Types are:</source>
<seg-source> <mrk mid="0" mtype="seg">Valid Types are:</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Valid Types are:</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>Type<ept id="1">&lt;/strong></ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>Type<ept id="1">&lt;/strong></ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>Type<ept id="1">&lt;/strong></ept></mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>Details<ept id="1">&lt;/strong></ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>Details<ept id="1">&lt;/strong></ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>Details<ept id="1">&lt;/strong></ept></mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">none</source>
<seg-source><mrk mid="0" mtype="seg">none</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">none</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">no value (only valid for return type - equivalent to void in C)</source>
<seg-source><mrk mid="0" mtype="seg">no value (only valid for return type - equivalent to void in C)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">no value (only valid for return type - equivalent to void in C)</mrk></target>
<note>none</note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">byte</source>
<seg-source><mrk mid="0" mtype="seg">byte</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">byte</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">an unsigned 8 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">an unsigned 8 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an unsigned 8 bit integer</mrk></target>
<note>byte</note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">boolean</source>
<seg-source><mrk mid="0" mtype="seg">boolean</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">boolean</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">an unsigned 8 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">an unsigned 8 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an unsigned 8 bit integer</mrk></target>
<note>boolean</note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">short</source>
<seg-source><mrk mid="0" mtype="seg">short</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">short</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">a 16 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">a 16 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a 16 bit integer</mrk></target>
<note>short</note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">word, ushort</source>
<seg-source><mrk mid="0" mtype="seg">word, ushort</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">word, ushort</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">an unsigned 16 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">an unsigned 16 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an unsigned 16 bit integer</mrk></target>
<note>word, ushort</note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">int, long</source>
<seg-source><mrk mid="0" mtype="seg">int, long</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int, long</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">a 32 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">a 32 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a 32 bit integer</mrk></target>
<note>int, long</note>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">bool</source>
<seg-source><mrk mid="0" mtype="seg">bool</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">bool</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">a 32 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">a 32 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a 32 bit integer</mrk></target>
<note>bool</note>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">dword, ulong, uint</source>
<seg-source><mrk mid="0" mtype="seg">dword, ulong, uint</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">dword, ulong, uint</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">an unsigned 32 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">an unsigned 32 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an unsigned 32 bit integer</mrk></target>
<note>dword, ulong, uint</note>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">hresult</source>
<seg-source><mrk mid="0" mtype="seg">hresult</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">hresult</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">a 32 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">a 32 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a 32 bit integer</mrk></target>
<note>hresult</note>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">int64</source>
<seg-source><mrk mid="0" mtype="seg">int64</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int64</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">a 64 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">a 64 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a 64 bit integer</mrk></target>
<note>int64</note>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">uint64</source>
<seg-source><mrk mid="0" mtype="seg">uint64</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">uint64</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">an unsigned 64 bit integer</source>
<seg-source><mrk mid="0" mtype="seg">an unsigned 64 bit integer</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an unsigned 64 bit integer</mrk></target>
<note>uint64</note>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">ptr</source>
<seg-source><mrk mid="0" mtype="seg">ptr</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">ptr</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">a general pointer (void *)</source>
<seg-source><mrk mid="0" mtype="seg">a general pointer (void *)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a general pointer (void *)</mrk></target>
<note>ptr</note>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">hwnd</source>
<seg-source><mrk mid="0" mtype="seg">hwnd</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">hwnd</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">a window handle (pointer)</source>
<seg-source><mrk mid="0" mtype="seg">a window handle (pointer)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a window handle (pointer)</mrk></target>
<note>hwnd</note>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">handle</source>
<seg-source><mrk mid="0" mtype="seg">handle</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">handle</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">an handle (pointer)</source>
<seg-source><mrk mid="0" mtype="seg">an handle (pointer)</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an handle (pointer)</mrk></target>
<note>handle</note>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en">float</source>
<seg-source><mrk mid="0" mtype="seg">float</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">float</mrk></target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">a single precision floating point number</source>
<seg-source><mrk mid="0" mtype="seg">a single precision floating point number</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a single precision floating point number</mrk></target>
<note>float</note>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en">double</source>
<seg-source><mrk mid="0" mtype="seg">double</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">double</mrk></target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">a double precision floating point number</source>
<seg-source><mrk mid="0" mtype="seg">a double precision floating point number</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a double precision floating point number</mrk></target>
<note>double</note>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en">int_ptr, long_ptr, lresult, lparam</source>
<seg-source><mrk mid="0" mtype="seg">int_ptr, long_ptr, lresult, lparam</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int_ptr, long_ptr, lresult, lparam</mrk></target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">an integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</source>
<seg-source><mrk mid="0" mtype="seg">an integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</mrk></target>
<note>int_ptr, long_ptr, lresult, lparam</note>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en">uint_ptr, ulong_ptr, dword_ptr, wparam</source>
<seg-source><mrk mid="0" mtype="seg">uint_ptr, ulong_ptr, dword_ptr, wparam</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">uint_ptr, ulong_ptr, dword_ptr, wparam</mrk></target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">an unsigned integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</source>
<seg-source><mrk mid="0" mtype="seg">an unsigned integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an unsigned integer big enough to hold a pointer when running on x86 or x64 versions of AutoIt.</mrk></target>
<note>uint_ptr, ulong_ptr, dword_ptr, wparam</note>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en">str</source>
<seg-source><mrk mid="0" mtype="seg">str</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">str</mrk></target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">an ANSI string (a minimum of 65536 chars is allocated).</source>
<seg-source><mrk mid="0" mtype="seg">an ANSI string (a minimum of 65536 chars is allocated).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">an ANSI string (a minimum of 65536 chars is allocated).</mrk></target>
<note>str</note>
</trans-unit>
<trans-unit id="60">
<source xml:lang="en">wstr</source>
<seg-source><mrk mid="0" mtype="seg">wstr</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">wstr</mrk></target>
</trans-unit>
<trans-unit id="61">
<source xml:lang="en">a UNICODE wide character string (a minimum of 65536 chars is allocated).</source>
<seg-source><mrk mid="0" mtype="seg">a UNICODE wide character string (a minimum of 65536 chars is allocated).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a UNICODE wide character string (a minimum of 65536 chars is allocated).</mrk></target>
<note>wstr</note>
</trans-unit>
<trans-unit id="62">
<source xml:lang="en">bstr</source>
<seg-source><mrk mid="0" mtype="seg">bstr</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">bstr</mrk></target>
</trans-unit>
<trans-unit id="63">
<source xml:lang="en">a composite data type that consists of a length prefix, a data string and a terminator</source>
<seg-source><mrk mid="0" mtype="seg">a composite data type that consists of a length prefix, a data string and a terminator</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a composite data type that consists of a length prefix, a data string and a terminator</mrk></target>
<note>bstr</note>
</trans-unit>
<trans-unit id="64">
<source xml:lang="en">variant</source>
<seg-source><mrk mid="0" mtype="seg">variant</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">variant</mrk></target>
</trans-unit>
<trans-unit id="65">
<source xml:lang="en">a tagged union that can be used to represent any other data type</source>
<seg-source><mrk mid="0" mtype="seg">a tagged union that can be used to represent any other data type</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a tagged union that can be used to represent any other data type</mrk></target>
<note>variant</note>
</trans-unit>
<trans-unit id="66">
<source xml:lang="en">idispatch, object</source>
<seg-source><mrk mid="0" mtype="seg">idispatch, object</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">idispatch, object</mrk></target>
</trans-unit>
<trans-unit id="67">
<source xml:lang="en">a composite data type that represents object with IDispatch interface</source>
<seg-source><mrk mid="0" mtype="seg">a composite data type that represents object with IDispatch interface</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a composite data type that represents object with IDispatch interface</mrk></target>
<note>idispatch, object</note>
</trans-unit>
<trans-unit id="68">
<source xml:lang="en">clsid</source>
<seg-source><mrk mid="0" mtype="seg">clsid</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">clsid</mrk></target>
</trans-unit>
<trans-unit id="69">
<source xml:lang="en">128-bit integer in form of GUID string</source>
<seg-source><mrk mid="0" mtype="seg">128-bit integer in form of GUID string</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">128-bit integer in form of GUID string</mrk></target>
<note>clsid</note>
</trans-unit>
<trans-unit id="70">
<source xml:lang="en">struct</source>
<seg-source><mrk mid="0" mtype="seg">struct</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">struct</mrk></target>
</trans-unit>
<trans-unit id="71">
<source xml:lang="en"> structure created with <bpt id="1" ctype="x-a">&lt;a href="DllStructCreate.htm"></bpt>DllStructCreate()<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg">structure created with <bpt id="1" ctype="x-a">&lt;a href="DllStructCreate.htm"></bpt>DllStructCreate()<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">structure created with <bpt id="1" ctype="x-a">&lt;a href="DllStructCreate.htm"></bpt>DllStructCreate()<ept id="1">&lt;/a></ept></mrk> </target>
<note>struct</note>
</trans-unit>
<trans-unit id="72">
<source xml:lang="en">*</source>
<seg-source><mrk mid="0" mtype="seg">*</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">*</mrk></target>
</trans-unit>
<trans-unit id="73">
<source xml:lang="en">Add * to the end of another type to pass it by reference. For example "int*" passes a pointer to an "int" type.</source>
<seg-source><mrk mid="0" mtype="seg">Add * to the end of another type to pass it by reference.</mrk> <mrk mid="1" mtype="seg">For example "int*" passes a pointer to an "int" type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Add * to the end of another type to pass it by reference.</mrk> <mrk mid="1" mtype="seg">For example "int*" passes a pointer to an "int" type.</mrk></target>
<note>*</note>
</trans-unit>
<trans-unit id="74">
<source xml:lang="en"> See the <bpt id="1" ctype="x-a">&lt;a href="../intro/ComRef.htm"></bpt>Obj/COM Reference<ept id="1">&lt;/a></ept> for more information about Objects.</source>
<seg-source> <mrk mid="0" mtype="seg">See the <bpt id="1" ctype="x-a">&lt;a href="../intro/ComRef.htm"></bpt>Obj/COM Reference<ept id="1">&lt;/a></ept> for more information about Objects.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">See the <bpt id="1" ctype="x-a">&lt;a href="../intro/ComRef.htm"></bpt>Obj/COM Reference<ept id="1">&lt;/a></ept> for more information about Objects.</mrk></target>
</trans-unit>
<trans-unit id="75">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="76">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="77">
<source xml:lang="en">Declare the CLSID, IID and interface description for ITaskbarList.</source>
<seg-source><mrk mid="0" mtype="seg">Declare the CLSID, IID and interface description for ITaskbarList.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Declare the CLSID, IID and interface description for ITaskbarList.</mrk></target>
</trans-unit>
<trans-unit id="78">
<source xml:lang="en">It is not necessary to describe the members of IUnknown.</source>
<seg-source><mrk mid="0" mtype="seg">It is not necessary to describe the members of IUnknown.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">It is not necessary to describe the members of IUnknown.</mrk></target>
</trans-unit>
<trans-unit id="79">
<source xml:lang="en">{56FDF344-FD6D-11D0-958A-006097C9A090}</source>
<seg-source><mrk mid="0" mtype="seg">{56FDF344-FD6D-11D0-958A-006097C9A090}</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">{56FDF344-FD6D-11D0-958A-006097C9A090}</mrk></target>
</trans-unit>
<trans-unit id="80">
<source xml:lang="en">{56FDF342-FD6D-11D0-958A-006097C9A090}</source>
<seg-source><mrk mid="0" mtype="seg">{56FDF342-FD6D-11D0-958A-006097C9A090}</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">{56FDF342-FD6D-11D0-958A-006097C9A090}</mrk></target>
</trans-unit>
<trans-unit id="81">
<source xml:lang="en">HrInit hresult(); AddTab hresult(hwnd); DeleteTab hresult(hwnd); ActivateTab hresult(hwnd); SetActiveAlt hresult(hwnd);</source>
<seg-source><mrk mid="0" mtype="seg">HrInit hresult(); AddTab hresult(hwnd); DeleteTab hresult(hwnd); ActivateTab hresult(hwnd); SetActiveAlt hresult(hwnd);</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">HrInit hresult(); AddTab hresult(hwnd); DeleteTab hresult(hwnd); ActivateTab hresult(hwnd); SetActiveAlt hresult(hwnd);</mrk></target>
</trans-unit>
<trans-unit id="82">
<source xml:lang="en">Create the object.</source>
<seg-source><mrk mid="0" mtype="seg">Create the object.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Create the object.</mrk></target>
</trans-unit>
<trans-unit id="83">
<source xml:lang="en">Initialize the iTaskbarList object.</source>
<seg-source><mrk mid="0" mtype="seg">Initialize the iTaskbarList object.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Initialize the iTaskbarList object.</mrk></target>
</trans-unit>
<trans-unit id="84">
<source xml:lang="en">Run Notepad.</source>
<seg-source><mrk mid="0" mtype="seg">Run Notepad.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Run Notepad.</mrk></target>
</trans-unit>
<trans-unit id="85">
<source xml:lang="en">notepad.exe</source>
<seg-source><mrk mid="0" mtype="seg">notepad.exe</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">notepad.exe</mrk></target>
</trans-unit>
<trans-unit id="86">
<source xml:lang="en">Wait for the Notepad window to appear and get a handle to it.</source>
<seg-source><mrk mid="0" mtype="seg">Wait for the Notepad window to appear and get a handle to it.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Wait for the Notepad window to appear and get a handle to it.</mrk></target>
</trans-unit>
<trans-unit id="87">
<source xml:lang="en">[CLASS:Notepad]</source>
<seg-source><mrk mid="0" mtype="seg">[CLASS:Notepad]</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">[CLASS:Notepad]</mrk></target>
</trans-unit>
<trans-unit id="88">
<source xml:lang="en">Tell the user what to look for.</source>
<seg-source><mrk mid="0" mtype="seg">Tell the user what to look for.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Tell the user what to look for.</mrk></target>
</trans-unit>
<trans-unit id="89">
<source xml:lang="en">Look in the Taskbar and you should see an entry for Notepad.</source>
<seg-source><mrk mid="0" mtype="seg">Look in the Taskbar and you should see an entry for Notepad.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Look in the Taskbar and you should see an entry for Notepad.</mrk></target>
</trans-unit>
<trans-unit id="90">
<source xml:lang="en">Press OK to continue.</source>
<seg-source><mrk mid="0" mtype="seg">Press OK to continue.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Press OK to continue.</mrk></target>
</trans-unit>
<trans-unit id="91">
<source xml:lang="en">Delete the Notepad entry from the Taskbar.</source>
<seg-source><mrk mid="0" mtype="seg">Delete the Notepad entry from the Taskbar.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Delete the Notepad entry from the Taskbar.</mrk></target>
</trans-unit>
<trans-unit id="92">
<source xml:lang="en">Tell the user to look again.</source>
<seg-source><mrk mid="0" mtype="seg">Tell the user to look again.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Tell the user to look again.</mrk></target>
</trans-unit>
<trans-unit id="93">
<source xml:lang="en">Look in the Taskbar. There should no longer be a Notepad entry but Notepad is still running.</source>
<seg-source><mrk mid="0" mtype="seg">Look in the Taskbar.</mrk> <mrk mid="1" mtype="seg">There should no longer be a Notepad entry but Notepad is still running.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Look in the Taskbar.</mrk> <mrk mid="1" mtype="seg">There should no longer be a Notepad entry but Notepad is still running.</mrk></target>
</trans-unit>
<trans-unit id="94">
<source xml:lang="en">Press OK to continue.</source>
<seg-source><mrk mid="0" mtype="seg">Press OK to continue.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Press OK to continue.</mrk></target>
</trans-unit>
<trans-unit id="95">
<source xml:lang="en">Close Notepad.</source>
<seg-source><mrk mid="0" mtype="seg">Close Notepad.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close Notepad.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
