<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/functions/TCPAccept.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Permits an incoming connection attempt on a socket.</source>
<seg-source><mrk mid="0" mtype="seg">Permits an incoming connection attempt on a socket.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Permits an incoming connection attempt on a socket.</mrk></target>
<note>Function TCPAccept</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> The main socket identifier (SocketID) as returned by a <bpt id="1" ctype="x-a">&lt;a href="TCPListen.htm"></bpt>TCPListen()<ept id="1">&lt;/a></ept> function. </source>
<seg-source> <mrk mid="0" mtype="seg">The main socket identifier (SocketID) as returned by a <bpt id="1" ctype="x-a">&lt;a href="TCPListen.htm"></bpt>TCPListen()<ept id="1">&lt;/a></ept> function.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">The main socket identifier (SocketID) as returned by a <bpt id="1" ctype="x-a">&lt;a href="TCPListen.htm"></bpt>TCPListen()<ept id="1">&lt;/a></ept> function.</mrk> </target>
<note>mainsocket</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">the connected socket identifier.</source>
<seg-source><mrk mid="0" mtype="seg">the connected socket identifier.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">the connected socket identifier.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">-1 and sets the @error flag to non-zero.</source>
<seg-source><mrk mid="0" mtype="seg">-1 and sets the @error flag to non-zero.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">-1 and sets the @error flag to non-zero.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">@error:</source>
<seg-source><mrk mid="0" mtype="seg">@error:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">@error:</mrk></target>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> -2 not connected.</source>
<seg-source> <mrk mid="0" mtype="seg">-2 not connected.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">-2 not connected.</mrk></target>
<note>@error:</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en"> Windows API WSAGetError return value (see <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/en-us/library/ms740668.aspx"></bpt>MSDN<ept id="1">&lt;/a></ept>). </source>
<seg-source> <mrk mid="0" mtype="seg">Windows API WSAGetError return value (see <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/en-us/library/ms740668.aspx"></bpt>MSDN<ept id="1">&lt;/a></ept>).</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Windows API WSAGetError return value (see <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/en-us/library/ms740668.aspx"></bpt>MSDN<ept id="1">&lt;/a></ept>).</mrk> </target>
<note>@error:</note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en"><bpt id="1" ctype="x-a">&lt;a href="TCPCloseSocket.htm"></bpt>TCPCloseSocket<ept id="1">&lt;/a></ept>, <bpt id="2" ctype="x-a">&lt;a href="TCPListen.htm"></bpt>TCPListen<ept id="2">&lt;/a></ept>, <bpt id="3" ctype="x-a">&lt;a href="TCPRecv.htm"></bpt>TCPRecv<ept id="3">&lt;/a></ept>, <bpt id="4" ctype="x-a">&lt;a href="TCPStartup.htm"></bpt>TCPStartup<ept id="4">&lt;/a></ept>, <bpt id="5" ctype="x-a">&lt;a href="AutoItSetOption.htm#TCPTimeout"></bpt>TCPTimeout (Option)<ept id="5">&lt;/a></ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="TCPCloseSocket.htm"></bpt>TCPCloseSocket<ept id="1">&lt;/a></ept>, <bpt id="2" ctype="x-a">&lt;a href="TCPListen.htm"></bpt>TCPListen<ept id="2">&lt;/a></ept>, <bpt id="3" ctype="x-a">&lt;a href="TCPRecv.htm"></bpt>TCPRecv<ept id="3">&lt;/a></ept>, <bpt id="4" ctype="x-a">&lt;a href="TCPStartup.htm"></bpt>TCPStartup<ept id="4">&lt;/a></ept>, <bpt id="5" ctype="x-a">&lt;a href="AutoItSetOption.htm#TCPTimeout"></bpt>TCPTimeout (Option)<ept id="5">&lt;/a></ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="TCPCloseSocket.htm"></bpt>TCPCloseSocket<ept id="1">&lt;/a></ept>, <bpt id="2" ctype="x-a">&lt;a href="TCPListen.htm"></bpt>TCPListen<ept id="2">&lt;/a></ept>, <bpt id="3" ctype="x-a">&lt;a href="TCPRecv.htm"></bpt>TCPRecv<ept id="3">&lt;/a></ept>, <bpt id="4" ctype="x-a">&lt;a href="TCPStartup.htm"></bpt>TCPStartup<ept id="4">&lt;/a></ept>, <bpt id="5" ctype="x-a">&lt;a href="AutoItSetOption.htm#TCPTimeout"></bpt>TCPTimeout (Option)<ept id="5">&lt;/a></ept></mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Example 1</source>
<seg-source><mrk mid="0" mtype="seg">Example 1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 1</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">I am the server, start me first! (Start in second the TCPConnect example script).</source>
<seg-source><mrk mid="0" mtype="seg">I am the server, start me first!</mrk> <mrk mid="1" mtype="seg">(Start in second the TCPConnect example script).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">I am the server, start me first!</mrk> <mrk mid="1" mtype="seg">(Start in second the TCPConnect example script).</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Start the TCP service.</source>
<seg-source><mrk mid="0" mtype="seg">Start the TCP service.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Start the TCP service.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Register OnAutoItExit to be called when the script is closed.</source>
<seg-source><mrk mid="0" mtype="seg">Register OnAutoItExit to be called when the script is closed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Register OnAutoItExit to be called when the script is closed.</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">OnAutoItExit</source>
<seg-source><mrk mid="0" mtype="seg">OnAutoItExit</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">OnAutoItExit</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Assign Local variables the loopback IP Address and the Port.</source>
<seg-source><mrk mid="0" mtype="seg">Assign Local variables the loopback IP Address and the Port.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign Local variables the loopback IP Address and the Port.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">127.0.0.1</source>
<seg-source><mrk mid="0" mtype="seg">127.0.0.1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">127.0.0.1</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">This IP Address only works for testing on your own computer.</source>
<seg-source><mrk mid="0" mtype="seg">This IP Address only works for testing on your own computer.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This IP Address only works for testing on your own computer.</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Port used for the connection.</source>
<seg-source><mrk mid="0" mtype="seg">Port used for the connection.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Port used for the connection.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">Bind to the IP Address and Port specified with a maximum of 100 pending connexions</source>
<seg-source><mrk mid="0" mtype="seg">Bind to the IP Address and Port specified with a maximum of 100 pending connexions</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Bind to the IP Address and Port specified with a maximum of 100 pending connexions</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">(Take a look at the example of this function for further details).</source>
<seg-source><mrk mid="0" mtype="seg">(Take a look at the example of this function for further details).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">(Take a look at the example of this function for further details).</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">If an error occurred display the error code and return False.</source>
<seg-source><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Someone is probably already listening on this IP Address and Port (script already running?).</source>
<seg-source><mrk mid="0" mtype="seg">Someone is probably already listening on this IP Address and Port (script already running?).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Someone is probably already listening on this IP Address and Port (script already running?).</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Could not listen, Error code:</source>
<seg-source><mrk mid="0" mtype="seg">Could not listen, Error code:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Could not listen, Error code:</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Assign Local variable to be used by Listening and Client sockets.</source>
<seg-source><mrk mid="0" mtype="seg">Assign Local variable to be used by Listening and Client sockets.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign Local variable to be used by Listening and Client sockets.</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">Wait for someone to connect (Unlimited).</source>
<seg-source><mrk mid="0" mtype="seg">Wait for someone to connect (Unlimited).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Wait for someone to connect (Unlimited).</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Accept incomming connexions if present (Socket to close when finished; one socket per client).</source>
<seg-source><mrk mid="0" mtype="seg">Accept incomming connexions if present (Socket to close when finished; one socket per client).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Accept incomming connexions if present (Socket to close when finished; one socket per client).</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">If an error occurred display the error code and return False.</source>
<seg-source><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Could not accept the incoming connection, Error code:</source>
<seg-source><mrk mid="0" mtype="seg">Could not accept the incoming connection, Error code:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Could not accept the incoming connection, Error code:</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">if different from -1 a client is connected.</source>
<seg-source><mrk mid="0" mtype="seg">if different from -1 a client is connected.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">if different from -1 a client is connected.</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Close the Listening socket to allow afterward binds.</source>
<seg-source><mrk mid="0" mtype="seg">Close the Listening socket to allow afterward binds.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the Listening socket to allow afterward binds.</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">Client Connected.</source>
<seg-source><mrk mid="0" mtype="seg">Client Connected.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Client Connected.</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Close the socket.</source>
<seg-source><mrk mid="0" mtype="seg">Close the socket.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the socket.</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">Close the TCP service.</source>
<seg-source><mrk mid="0" mtype="seg">Close the TCP service.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the TCP service.</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Example 2</source>
<seg-source><mrk mid="0" mtype="seg">Example 2</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example 2</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">Note: Check the Example 1 to get the useful comments, this example only demonstrates the SocketToIP user-defined function.</source>
<seg-source><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">Check the Example 1 to get the useful comments, this example only demonstrates the SocketToIP user-defined function.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">Check the Example 1 to get the useful comments, this example only demonstrates the SocketToIP user-defined function.</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">I am the server, start me first! (Start in second the TCPConnect example script).</source>
<seg-source><mrk mid="0" mtype="seg">I am the server, start me first!</mrk> <mrk mid="1" mtype="seg">(Start in second the TCPConnect example script).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">I am the server, start me first!</mrk> <mrk mid="1" mtype="seg">(Start in second the TCPConnect example script).</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">OnAutoItExit</source>
<seg-source><mrk mid="0" mtype="seg">OnAutoItExit</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">OnAutoItExit</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">127.0.0.1</source>
<seg-source><mrk mid="0" mtype="seg">127.0.0.1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">127.0.0.1</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">Could not listen, Error code:</source>
<seg-source><mrk mid="0" mtype="seg">Could not listen, Error code:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Could not listen, Error code:</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">Could not accept the incoming connection, Error code:</source>
<seg-source><mrk mid="0" mtype="seg">Could not accept the incoming connection, Error code:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Could not accept the incoming connection, Error code:</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">Retrieve the IP Address associated with the accepted socket and assign it to a Local variable.</source>
<seg-source><mrk mid="0" mtype="seg">Retrieve the IP Address associated with the accepted socket and assign it to a Local variable.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Retrieve the IP Address associated with the accepted socket and assign it to a Local variable.</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">Note: The above function does NOT work with the Listen socket, you can also use it with the socket returned by the TCPConnect function.</source>
<seg-source><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">The above function does NOT work with the Listen socket, you can also use it with the socket returned by the TCPConnect function.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Note:</mrk> <mrk mid="1" mtype="seg">The above function does NOT work with the Listen socket, you can also use it with the socket returned by the TCPConnect function.</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">Display the sucessful message with the client IP Address.</source>
<seg-source><mrk mid="0" mtype="seg">Display the sucessful message with the client IP Address.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the sucessful message with the client IP Address.</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">Client Connected, IP Address:</source>
<seg-source><mrk mid="0" mtype="seg">Client Connected, IP Address:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Client Connected, IP Address:</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">short;ushort;uint;char[8]</source>
<seg-source><mrk mid="0" mtype="seg">short;ushort;uint;char[8]</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">short;ushort;uint;char[8]</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">Ws2_32.dll</source>
<seg-source><mrk mid="0" mtype="seg">Ws2_32.dll</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Ws2_32.dll</mrk></target>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en">int</source>
<seg-source><mrk mid="0" mtype="seg">int</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int</mrk></target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">getpeername</source>
<seg-source><mrk mid="0" mtype="seg">getpeername</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">getpeername</mrk></target>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en">int</source>
<seg-source><mrk mid="0" mtype="seg">int</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int</mrk></target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">struct*</source>
<seg-source><mrk mid="0" mtype="seg">struct*</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">struct*</mrk></target>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en">int*</source>
<seg-source><mrk mid="0" mtype="seg">int*</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int*</mrk></target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">Ws2_32.dll</source>
<seg-source><mrk mid="0" mtype="seg">Ws2_32.dll</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Ws2_32.dll</mrk></target>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en">str</source>
<seg-source><mrk mid="0" mtype="seg">str</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">str</mrk></target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">inet_ntoa</source>
<seg-source><mrk mid="0" mtype="seg">inet_ntoa</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">inet_ntoa</mrk></target>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en">int</source>
<seg-source><mrk mid="0" mtype="seg">int</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">int</mrk></target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">Close the TCP service.</source>
<seg-source><mrk mid="0" mtype="seg">Close the TCP service.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the TCP service.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
