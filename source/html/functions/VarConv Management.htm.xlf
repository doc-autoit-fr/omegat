<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="html/functions/VarConv Management.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Variables and Conversions functions Reference</source>
<seg-source><mrk mid="0" mtype="seg">Variables and Conversions functions Reference</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Variables and Conversions functions Reference</mrk></target>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Below is a complete list of the functions available in AutoIt. Click on a function name for a detailed description.</source>
<seg-source><mrk mid="0" mtype="seg">Below is a complete list of the functions available in AutoIt.</mrk> <mrk mid="1" mtype="seg">Click on a function name for a detailed description.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Below is a complete list of the functions available in AutoIt.</mrk> <mrk mid="1" mtype="seg">Click on a function name for a detailed description.</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> </source>
<seg-source><mrk mid="0" mtype="seg"> </mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"> </mrk></target>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Function</source>
<seg-source><mrk mid="0" mtype="seg">Function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Function</mrk></target>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Description</source>
<seg-source><mrk mid="0" mtype="seg">Description</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Description</mrk></target>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Asc.htm"></bpt>Asc<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Asc.htm"></bpt>Asc<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Asc.htm"></bpt>Asc<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">Returns the ASCII code of a character.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the ASCII code of a character.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the ASCII code of a character.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="AscW.htm"></bpt>AscW<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="AscW.htm"></bpt>AscW<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="AscW.htm"></bpt>AscW<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Returns the unicode code of a character.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the unicode code of a character.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the unicode code of a character.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Assign.htm"></bpt>Assign<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Assign.htm"></bpt>Assign<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Assign.htm"></bpt>Assign<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Assigns a variable by name with the data.</source>
<seg-source><mrk mid="0" mtype="seg">Assigns a variable by name with the data.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assigns a variable by name with the data.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Binary.htm"></bpt>Binary<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Binary.htm"></bpt>Binary<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Binary.htm"></bpt>Binary<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Returns the binary representation of an expression.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the binary representation of an expression.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the binary representation of an expression.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="BinaryLen.htm"></bpt>BinaryLen<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="BinaryLen.htm"></bpt>BinaryLen<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="BinaryLen.htm"></bpt>BinaryLen<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Returns the number of bytes in a binary variant.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the number of bytes in a binary variant.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the number of bytes in a binary variant.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="BinaryMid.htm"></bpt>BinaryMid<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="BinaryMid.htm"></bpt>BinaryMid<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="BinaryMid.htm"></bpt>BinaryMid<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Extracts a number of bytes from a binary variant.</source>
<seg-source><mrk mid="0" mtype="seg">Extracts a number of bytes from a binary variant.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Extracts a number of bytes from a binary variant.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="BinaryToString.htm"></bpt>BinaryToString<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="BinaryToString.htm"></bpt>BinaryToString<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="BinaryToString.htm"></bpt>BinaryToString<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Converts a binary variant into a string.</source>
<seg-source><mrk mid="0" mtype="seg">Converts a binary variant into a string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Converts a binary variant into a string.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Chr.htm"></bpt>Chr<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Chr.htm"></bpt>Chr<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Chr.htm"></bpt>Chr<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Returns a character corresponding to an ASCII code.</source>
<seg-source><mrk mid="0" mtype="seg">Returns a character corresponding to an ASCII code.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns a character corresponding to an ASCII code.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ChrW.htm"></bpt>ChrW<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ChrW.htm"></bpt>ChrW<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ChrW.htm"></bpt>ChrW<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">Returns a character corresponding to a unicode code.</source>
<seg-source><mrk mid="0" mtype="seg">Returns a character corresponding to a unicode code.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns a character corresponding to a unicode code.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Dec.htm"></bpt>Dec<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Dec.htm"></bpt>Dec<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Dec.htm"></bpt>Dec<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Returns a numeric representation of a hexadecimal string.</source>
<seg-source><mrk mid="0" mtype="seg">Returns a numeric representation of a hexadecimal string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns a numeric representation of a hexadecimal string.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Eval.htm"></bpt>Eval<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Eval.htm"></bpt>Eval<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Eval.htm"></bpt>Eval<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Return the value of the variable defined by a string.</source>
<seg-source><mrk mid="0" mtype="seg">Return the value of the variable defined by a string.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return the value of the variable defined by a string.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="FuncName.htm"></bpt>FuncName<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="FuncName.htm"></bpt>FuncName<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="FuncName.htm"></bpt>FuncName<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Returns the name of a function stored in a variable.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the name of a function stored in a variable.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the name of a function stored in a variable.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Hex.htm"></bpt>Hex<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Hex.htm"></bpt>Hex<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Hex.htm"></bpt>Hex<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Returns a string representation of an integer or of a binary type converted to hexadecimal.</source>
<seg-source><mrk mid="0" mtype="seg">Returns a string representation of an integer or of a binary type converted to hexadecimal.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns a string representation of an integer or of a binary type converted to hexadecimal.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="HWnd.htm"></bpt>HWnd<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="HWnd.htm"></bpt>HWnd<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="HWnd.htm"></bpt>HWnd<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Converts an expression into an HWND handle.</source>
<seg-source><mrk mid="0" mtype="seg">Converts an expression into an HWND handle.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Converts an expression into an HWND handle.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Int.htm"></bpt>Int<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Int.htm"></bpt>Int<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Int.htm"></bpt>Int<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Returns the integer (whole number) representation of an expression.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the integer (whole number) representation of an expression.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the integer (whole number) representation of an expression.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsAdmin.htm"></bpt>IsAdmin<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsAdmin.htm"></bpt>IsAdmin<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsAdmin.htm"></bpt>IsAdmin<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Checks if the current user has full administrator privileges.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if the current user has full administrator privileges.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if the current user has full administrator privileges.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsArray.htm"></bpt>IsArray<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsArray.htm"></bpt>IsArray<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsArray.htm"></bpt>IsArray<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">Checks if a variable is an array type.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable is an array type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable is an array type.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsBinary.htm"></bpt>IsBinary<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsBinary.htm"></bpt>IsBinary<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsBinary.htm"></bpt>IsBinary<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">Checks if a variable or expression is a binary type.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable or expression is a binary type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable or expression is a binary type.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsBool.htm"></bpt>IsBool<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsBool.htm"></bpt>IsBool<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsBool.htm"></bpt>IsBool<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">Checks if a variable's base type is boolean.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable's base type is boolean.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable's base type is boolean.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsDeclared.htm"></bpt>IsDeclared<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsDeclared.htm"></bpt>IsDeclared<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsDeclared.htm"></bpt>IsDeclared<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">Check if a variable has been declared.</source>
<seg-source><mrk mid="0" mtype="seg">Check if a variable has been declared.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Check if a variable has been declared.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsDllStruct.htm"></bpt>IsDllStruct<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsDllStruct.htm"></bpt>IsDllStruct<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsDllStruct.htm"></bpt>IsDllStruct<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">Checks if a variable is a DllStruct type.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable is a DllStruct type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable is a DllStruct type.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsFloat.htm"></bpt>IsFloat<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsFloat.htm"></bpt>IsFloat<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsFloat.htm"></bpt>IsFloat<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">Checks if the value of a variable or expression has a fractional component.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if the value of a variable or expression has a fractional component.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if the value of a variable or expression has a fractional component.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsFunc.htm"></bpt>IsFunc<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsFunc.htm"></bpt>IsFunc<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsFunc.htm"></bpt>IsFunc<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">Checks if a variable or expression is a function type.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable or expression is a function type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable or expression is a function type.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsHWnd.htm"></bpt>IsHWnd<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsHWnd.htm"></bpt>IsHWnd<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsHWnd.htm"></bpt>IsHWnd<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">Checks if a variable's base type is a pointer and window handle.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable's base type is a pointer and window handle.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable's base type is a pointer and window handle.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsInt.htm"></bpt>IsInt<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsInt.htm"></bpt>IsInt<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsInt.htm"></bpt>IsInt<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">Checks if the value of a variable or expression has no fractional component.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if the value of a variable or expression has no fractional component.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if the value of a variable or expression has no fractional component.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsKeyword.htm"></bpt>IsKeyword<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsKeyword.htm"></bpt>IsKeyword<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsKeyword.htm"></bpt>IsKeyword<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">Checks if a variable is a keyword (for example, Default).</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable is a keyword (for example, Default).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable is a keyword (for example, Default).</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsNumber.htm"></bpt>IsNumber<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsNumber.htm"></bpt>IsNumber<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsNumber.htm"></bpt>IsNumber<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">Checks if a variable's base type is numeric.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable's base type is numeric.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable's base type is numeric.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="60">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsObj.htm"></bpt>IsObj<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsObj.htm"></bpt>IsObj<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsObj.htm"></bpt>IsObj<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="61">
<source xml:lang="en">Checks if a variable or expression is an object type.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable or expression is an object type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable or expression is an object type.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="62">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsPtr.htm"></bpt>IsPtr<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsPtr.htm"></bpt>IsPtr<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsPtr.htm"></bpt>IsPtr<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="63">
<source xml:lang="en">Checks if a variable's base type is a pointer.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable's base type is a pointer.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable's base type is a pointer.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="64">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="IsString.htm"></bpt>IsString<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsString.htm"></bpt>IsString<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="IsString.htm"></bpt>IsString<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="65">
<source xml:lang="en">Checks if a variable is a string type.</source>
<seg-source><mrk mid="0" mtype="seg">Checks if a variable is a string type.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks if a variable is a string type.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="66">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Number.htm"></bpt>Number<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Number.htm"></bpt>Number<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Number.htm"></bpt>Number<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="67">
<source xml:lang="en">Returns the numeric representation of an expression.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the numeric representation of an expression.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the numeric representation of an expression.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="68">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Ptr.htm"></bpt>Ptr<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Ptr.htm"></bpt>Ptr<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Ptr.htm"></bpt>Ptr<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="69">
<source xml:lang="en">Converts an expression into a pointer variant.</source>
<seg-source><mrk mid="0" mtype="seg">Converts an expression into a pointer variant.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Converts an expression into a pointer variant.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="70">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="String.htm"></bpt>String<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="String.htm"></bpt>String<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="String.htm"></bpt>String<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="71">
<source xml:lang="en">Returns the string representation of an expression.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the string representation of an expression.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the string representation of an expression.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="72">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="StringToBinary.htm"></bpt>StringToBinary<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StringToBinary.htm"></bpt>StringToBinary<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StringToBinary.htm"></bpt>StringToBinary<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="73">
<source xml:lang="en">Converts a string into binary data.</source>
<seg-source><mrk mid="0" mtype="seg">Converts a string into binary data.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Converts a string into binary data.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="74">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="UBound.htm"></bpt>UBound<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="UBound.htm"></bpt>UBound<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="UBound.htm"></bpt>UBound<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="75">
<source xml:lang="en">Returns the size of array dimensions or the number of keys in a map.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the size of array dimensions or the number of keys in a map.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the size of array dimensions or the number of keys in a map.</mrk></target>
<note>
        </note>
</trans-unit>
</body>
</file>
</xliff>
