<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="functions/UDPOpen.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Open a socket connected to an existing server .</source>
<seg-source><mrk mid="0" mtype="seg">Open a socket connected to an existing server .</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Open a socket connected to an existing server .</mrk></target>
<note>Function UDPOpen</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">Internet Protocol dotted address(IpV4) as "192.162.1.1".</source>
<seg-source><mrk mid="0" mtype="seg">Internet Protocol dotted address(IpV4) as "192.162.1.1".</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Internet Protocol dotted address(IpV4) as "192.162.1.1".</mrk></target>
<note>IPAddr</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">port on which the created socket will be connected.</source>
<seg-source><mrk mid="0" mtype="seg">port on which the created socket will be connected.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">port on which the created socket will be connected.</mrk></target>
<note>port</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk></target>
<note>flag</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en">     $UDP_OPEN_DEFAULT (0) - (Default) - No additional options are set.</source>
<seg-source> <mrk mid="0" mtype="seg">    $UDP_OPEN_DEFAULT (0) - (Default) - No additional options are set.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $UDP_OPEN_DEFAULT (0) - (Default) - No additional options are set.</mrk></target>
<note>flag</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">     $UDP_OPEN_BROADCAST (1) - Allow the broadcasting on the address "255.255.255.255".</source>
<seg-source> <mrk mid="0" mtype="seg">    $UDP_OPEN_BROADCAST (1) - Allow the broadcasting on the address "255.255.255.255".</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">    $UDP_OPEN_BROADCAST (1) - Allow the broadcasting on the address "255.255.255.255".</mrk></target>
<note>flag</note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> Constants are defined in "AutoItConstants.au3".</source>
<seg-source> <mrk mid="0" mtype="seg">Constants are defined in "AutoItConstants.au3".</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Constants are defined in "AutoItConstants.au3".</mrk></target>
<note>flag</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> an array : $aArray[1] contains the real socket, $aArray[2] contains the specified IP address and $aArray[3] contains the port. We need this information in subsequent calls to <bpt id="1" ctype="x-a">&lt;a href="UDPSend.htm"></bpt>UDPSend()<ept id="1">&lt;/a></ept>, where we pass this socket structure/array. </source>
<seg-source> <mrk mid="0" mtype="seg">an array :</mrk> <mrk mid="1" mtype="seg">$aArray[1] contains the real socket, $aArray[2] contains the specified IP address and $aArray[3] contains the port.</mrk> <mrk mid="2" mtype="seg">We need this information in subsequent calls to <bpt id="1" ctype="x-a">&lt;a href="UDPSend.htm"></bpt>UDPSend()<ept id="1">&lt;/a></ept>, where we pass this socket structure/array.</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">an array :</mrk> <mrk mid="1" mtype="seg">$aArray[1] contains the real socket, $aArray[2] contains the specified IP address and $aArray[3] contains the port.</mrk> <mrk mid="2" mtype="seg">We need this information in subsequent calls to <bpt id="1" ctype="x-a">&lt;a href="UDPSend.htm"></bpt>UDPSend()<ept id="1">&lt;/a></ept>, where we pass this socket structure/array.</mrk> </target>
<note>Success:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">$aArray[0]=0 and set the @error flag to non-zero.</source>
<seg-source><mrk mid="0" mtype="seg">$aArray[0]=0 and set the @error flag to non-zero.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">$aArray[0]=0 and set the @error flag to non-zero.</mrk></target>
<note>Failure:</note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">@error:</source>
<seg-source><mrk mid="0" mtype="seg">@error:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">@error:</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> Windows API WSAGetError return value (see <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/en-us/library/ms740668.aspx"></bpt>MSDN<ept id="1">&lt;/a></ept>). </source>
<seg-source> <mrk mid="0" mtype="seg">Windows API WSAGetError return value (see <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/en-us/library/ms740668.aspx"></bpt>MSDN<ept id="1">&lt;/a></ept>).</mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Windows API WSAGetError return value (see <bpt id="1" ctype="x-a">&lt;a href="http://msdn.microsoft.com/en-us/library/ms740668.aspx"></bpt>MSDN<ept id="1">&lt;/a></ept>).</mrk> </target>
<note>@error:</note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">This function is used by a client to communicate with the server.</source>
<seg-source><mrk mid="0" mtype="seg">This function is used by a client to communicate with the server.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This function is used by a client to communicate with the server.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Start First clicking on "1. Server"</source>
<seg-source><mrk mid="0" mtype="seg">Start First clicking on "1.</mrk> <mrk mid="1" mtype="seg">Server"</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Start First clicking on "1.</mrk> <mrk mid="1" mtype="seg">Server"</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Then start a second instance of the script selecting "2. Client"</source>
<seg-source><mrk mid="0" mtype="seg">Then start a second instance of the script selecting "2.</mrk> <mrk mid="1" mtype="seg">Client"</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Then start a second instance of the script selecting "2.</mrk> <mrk mid="1" mtype="seg">Client"</mrk></target>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en">Start the UDP service.</source>
<seg-source><mrk mid="0" mtype="seg">Start the UDP service.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Start the UDP service.</mrk></target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Register OnAutoItExit to be called when the script is closed.</source>
<seg-source><mrk mid="0" mtype="seg">Register OnAutoItExit to be called when the script is closed.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Register OnAutoItExit to be called when the script is closed.</mrk></target>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en">OnAutoItExit</source>
<seg-source><mrk mid="0" mtype="seg">OnAutoItExit</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">OnAutoItExit</mrk></target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">Assign Local variables the loopback IP Address and the Port.</source>
<seg-source><mrk mid="0" mtype="seg">Assign Local variables the loopback IP Address and the Port.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign Local variables the loopback IP Address and the Port.</mrk></target>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en">127.0.0.1</source>
<seg-source><mrk mid="0" mtype="seg">127.0.0.1</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">127.0.0.1</mrk></target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">This IP Address only works for testing on your own computer.</source>
<seg-source><mrk mid="0" mtype="seg">This IP Address only works for testing on your own computer.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">This IP Address only works for testing on your own computer.</mrk></target>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en">Port used for the connection.</source>
<seg-source><mrk mid="0" mtype="seg">Port used for the connection.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Port used for the connection.</mrk></target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">UDP Start</source>
<seg-source><mrk mid="0" mtype="seg">UDP Start</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">UDP Start</mrk></target>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en">1. Server</source>
<seg-source><mrk mid="0" mtype="seg">1.</mrk> <mrk mid="1" mtype="seg">Server</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">1.</mrk> <mrk mid="1" mtype="seg">Server</mrk></target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">2. Client</source>
<seg-source><mrk mid="0" mtype="seg">2.</mrk> <mrk mid="1" mtype="seg">Client</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">2.</mrk> <mrk mid="1" mtype="seg">Client</mrk></target>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en">UDP Server started</source>
<seg-source><mrk mid="0" mtype="seg">UDP Server started</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">UDP Server started</mrk></target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">UDP Client started</source>
<seg-source><mrk mid="0" mtype="seg">UDP Client started</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">UDP Client started</mrk></target>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en">Assign a Local variable the socket and bind to the IP Address and Port specified.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable the socket and bind to the IP Address and Port specified.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable the socket and bind to the IP Address and Port specified.</mrk></target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">If an error occurred display the error code and return False.</source>
<seg-source><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></target>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en">Someone is probably already binded on this IP Address and Port (script already running?).</source>
<seg-source><mrk mid="0" mtype="seg">Someone is probably already binded on this IP Address and Port (script already running?).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Someone is probably already binded on this IP Address and Port (script already running?).</mrk></target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Server:</source>
<seg-source><mrk mid="0" mtype="seg">Server:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Server:</mrk></target>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en">Could not bind, Error code:</source>
<seg-source><mrk mid="0" mtype="seg">Could not bind, Error code:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Could not bind, Error code:</mrk></target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Assign a Local variable to store the data received.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable to store the data received.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable to store the data received.</mrk></target>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en">We are waiting for the string "toto" OR "tata" (example script UDPSend): 4 bytes length.</source>
<seg-source><mrk mid="0" mtype="seg">We are waiting for the string "toto" OR "tata" (example script UDPSend):</mrk> <mrk mid="1" mtype="seg">4 bytes length.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">We are waiting for the string "toto" OR "tata" (example script UDPSend):</mrk> <mrk mid="1" mtype="seg">4 bytes length.</mrk></target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">Notes: If you don't know how much length will be the data,</source>
<seg-source><mrk mid="0" mtype="seg">Notes:</mrk> <mrk mid="1" mtype="seg">If you don't know how much length will be the data,</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Notes:</mrk> <mrk mid="1" mtype="seg">If you don't know how much length will be the data,</mrk></target>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en">use e.g: 2048 for maxlen parameter and call the function until the it returns nothing/error.</source>
<seg-source><mrk mid="0" mtype="seg">use e.g:</mrk> <mrk mid="1" mtype="seg">2048 for maxlen parameter and call the function until the it returns nothing/error.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">use e.g:</mrk> <mrk mid="1" mtype="seg">2048 for maxlen parameter and call the function until the it returns nothing/error.</mrk></target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">Display the string received.</source>
<seg-source><mrk mid="0" mtype="seg">Display the string received.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the string received.</mrk></target>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en">Server:</source>
<seg-source><mrk mid="0" mtype="seg">Server:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Server:</mrk></target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">Received:</source>
<seg-source><mrk mid="0" mtype="seg">Received:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Received:</mrk></target>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en">Close the socket.</source>
<seg-source><mrk mid="0" mtype="seg">Close the socket.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the socket.</mrk></target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">Assign a Local variable the socket and connect to a listening socket with the IP Address and Port specified.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable the socket and connect to a listening socket with the IP Address and Port specified.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable the socket and connect to a listening socket with the IP Address and Port specified.</mrk></target>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en">If an error occurred display the error code and return False.</source>
<seg-source><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">The server is probably offline/port is not opened on the server.</source>
<seg-source><mrk mid="0" mtype="seg">The server is probably offline/port is not opened on the server.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The server is probably offline/port is not opened on the server.</mrk></target>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en">Client:</source>
<seg-source><mrk mid="0" mtype="seg">Client:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Client:</mrk></target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">Could not connect, Error code:</source>
<seg-source><mrk mid="0" mtype="seg">Could not connect, Error code:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Could not connect, Error code:</mrk></target>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en">Send the string "toto" converted to binary to the server.</source>
<seg-source><mrk mid="0" mtype="seg">Send the string "toto" converted to binary to the server.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Send the string "toto" converted to binary to the server.</mrk></target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">toto</source>
<seg-source><mrk mid="0" mtype="seg">toto</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">toto</mrk></target>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en">If an error occurred display the error code and return False.</source>
<seg-source><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">If an error occurred display the error code and return False.</mrk></target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">Client:</source>
<seg-source><mrk mid="0" mtype="seg">Client:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Client:</mrk></target>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en">Could not send the data, Error code:</source>
<seg-source><mrk mid="0" mtype="seg">Could not send the data, Error code:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Could not send the data, Error code:</mrk></target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">Close the socket.</source>
<seg-source><mrk mid="0" mtype="seg">Close the socket.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the socket.</mrk></target>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en">Close the UDP service.</source>
<seg-source><mrk mid="0" mtype="seg">Close the UDP service.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Close the UDP service.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
