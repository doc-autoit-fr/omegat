<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="functions/Process Management.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Process functions Reference</source>
<seg-source><mrk mid="0" mtype="seg">Process functions Reference</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Process functions Reference</mrk></target>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Below is a complete list of the functions available in AutoIt. Click on a function name for a detailed description.</source>
<seg-source><mrk mid="0" mtype="seg">Below is a complete list of the functions available in AutoIt.</mrk> <mrk mid="1" mtype="seg">Click on a function name for a detailed description.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Below is a complete list of the functions available in AutoIt.</mrk> <mrk mid="1" mtype="seg">Click on a function name for a detailed description.</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en"> </source>
<seg-source><mrk mid="0" mtype="seg"> </mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"> </mrk></target>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en">Function</source>
<seg-source><mrk mid="0" mtype="seg">Function</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Function</mrk></target>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en">Description</source>
<seg-source><mrk mid="0" mtype="seg">Description</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Description</mrk></target>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllCall.htm"></bpt>DllCall<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCall.htm"></bpt>DllCall<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCall.htm"></bpt>DllCall<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">Dynamically calls a function in a DLL.</source>
<seg-source><mrk mid="0" mtype="seg">Dynamically calls a function in a DLL.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dynamically calls a function in a DLL.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllCallAddress.htm"></bpt>DllCallAddress<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallAddress.htm"></bpt>DllCallAddress<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallAddress.htm"></bpt>DllCallAddress<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Dynamically calls a function at a specific memory address.</source>
<seg-source><mrk mid="0" mtype="seg">Dynamically calls a function at a specific memory address.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Dynamically calls a function at a specific memory address.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllCallbackFree.htm"></bpt>DllCallbackFree<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallbackFree.htm"></bpt>DllCallbackFree<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallbackFree.htm"></bpt>DllCallbackFree<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Frees a previously created handle created with DllCallbackRegister.</source>
<seg-source><mrk mid="0" mtype="seg">Frees a previously created handle created with DllCallbackRegister.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Frees a previously created handle created with DllCallbackRegister.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllCallbackGetPtr.htm"></bpt>DllCallbackGetPtr<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallbackGetPtr.htm"></bpt>DllCallbackGetPtr<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallbackGetPtr.htm"></bpt>DllCallbackGetPtr<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en">Returns the pointer to a callback function that can be passed to the Win32 API.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the pointer to a callback function that can be passed to the Win32 API.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the pointer to a callback function that can be passed to the Win32 API.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllCallbackRegister.htm"></bpt>DllCallbackRegister<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallbackRegister.htm"></bpt>DllCallbackRegister<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllCallbackRegister.htm"></bpt>DllCallbackRegister<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en">Creates a user-defined DLL Callback function.</source>
<seg-source><mrk mid="0" mtype="seg">Creates a user-defined DLL Callback function.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creates a user-defined DLL Callback function.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllClose.htm"></bpt>DllClose<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllClose.htm"></bpt>DllClose<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllClose.htm"></bpt>DllClose<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Closes a previously opened DLL.</source>
<seg-source><mrk mid="0" mtype="seg">Closes a previously opened DLL.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Closes a previously opened DLL.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllOpen.htm"></bpt>DllOpen<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllOpen.htm"></bpt>DllOpen<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllOpen.htm"></bpt>DllOpen<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Opens a DLL file for use in DllCall.</source>
<seg-source><mrk mid="0" mtype="seg">Opens a DLL file for use in DllCall.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Opens a DLL file for use in DllCall.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="20">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllStructCreate.htm"></bpt>DllStructCreate<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructCreate.htm"></bpt>DllStructCreate<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructCreate.htm"></bpt>DllStructCreate<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="21">
<source xml:lang="en">Creates a C/C++ style structure to be used in DllCall.</source>
<seg-source><mrk mid="0" mtype="seg">Creates a C/C++ style structure to be used in DllCall.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Creates a C/C++ style structure to be used in DllCall.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="22">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllStructGetData.htm"></bpt>DllStructGetData<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructGetData.htm"></bpt>DllStructGetData<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructGetData.htm"></bpt>DllStructGetData<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="23">
<source xml:lang="en">Returns the data of an element of the struct.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the data of an element of the struct.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the data of an element of the struct.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="24">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllStructGetPtr.htm"></bpt>DllStructGetPtr<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructGetPtr.htm"></bpt>DllStructGetPtr<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructGetPtr.htm"></bpt>DllStructGetPtr<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="25">
<source xml:lang="en">Returns the pointer to the struct or an element in the struct.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the pointer to the struct or an element in the struct.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the pointer to the struct or an element in the struct.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="26">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllStructGetSize.htm"></bpt>DllStructGetSize<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructGetSize.htm"></bpt>DllStructGetSize<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructGetSize.htm"></bpt>DllStructGetSize<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="27">
<source xml:lang="en">Returns the size of the struct in bytes.</source>
<seg-source><mrk mid="0" mtype="seg">Returns the size of the struct in bytes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns the size of the struct in bytes.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="28">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="DllStructSetData.htm"></bpt>DllStructSetData<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructSetData.htm"></bpt>DllStructSetData<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="DllStructSetData.htm"></bpt>DllStructSetData<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="29">
<source xml:lang="en">Sets the data of an element in the struct.</source>
<seg-source><mrk mid="0" mtype="seg">Sets the data of an element in the struct.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Sets the data of an element in the struct.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="30">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ProcessClose.htm"></bpt>ProcessClose<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessClose.htm"></bpt>ProcessClose<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessClose.htm"></bpt>ProcessClose<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="31">
<source xml:lang="en">Terminates a named process.</source>
<seg-source><mrk mid="0" mtype="seg">Terminates a named process.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Terminates a named process.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="32">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ProcessExists.htm"></bpt>ProcessExists<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessExists.htm"></bpt>ProcessExists<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessExists.htm"></bpt>ProcessExists<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="33">
<source xml:lang="en">Checks to see if a specified process exists.</source>
<seg-source><mrk mid="0" mtype="seg">Checks to see if a specified process exists.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Checks to see if a specified process exists.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="34">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ProcessGetStats.htm"></bpt>ProcessGetStats<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessGetStats.htm"></bpt>ProcessGetStats<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessGetStats.htm"></bpt>ProcessGetStats<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="35">
<source xml:lang="en">Returns an array about Memory or IO infos of a running process.</source>
<seg-source><mrk mid="0" mtype="seg">Returns an array about Memory or IO infos of a running process.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns an array about Memory or IO infos of a running process.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="36">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ProcessList.htm"></bpt>ProcessList<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessList.htm"></bpt>ProcessList<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessList.htm"></bpt>ProcessList<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="37">
<source xml:lang="en">Returns an array listing the currently running processes (names and PIDs).</source>
<seg-source><mrk mid="0" mtype="seg">Returns an array listing the currently running processes (names and PIDs).</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns an array listing the currently running processes (names and PIDs).</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="38">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ProcessSetPriority.htm"></bpt>ProcessSetPriority<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessSetPriority.htm"></bpt>ProcessSetPriority<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessSetPriority.htm"></bpt>ProcessSetPriority<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="39">
<source xml:lang="en">Changes the priority of a process.</source>
<seg-source><mrk mid="0" mtype="seg">Changes the priority of a process.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Changes the priority of a process.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="40">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ProcessWait.htm"></bpt>ProcessWait<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessWait.htm"></bpt>ProcessWait<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessWait.htm"></bpt>ProcessWait<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="41">
<source xml:lang="en">Pauses script execution until a given process exists.</source>
<seg-source><mrk mid="0" mtype="seg">Pauses script execution until a given process exists.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Pauses script execution until a given process exists.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="42">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ProcessWaitClose.htm"></bpt>ProcessWaitClose<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessWaitClose.htm"></bpt>ProcessWaitClose<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ProcessWaitClose.htm"></bpt>ProcessWaitClose<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="43">
<source xml:lang="en">Pauses script execution until a given process does not exist.</source>
<seg-source><mrk mid="0" mtype="seg">Pauses script execution until a given process does not exist.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Pauses script execution until a given process does not exist.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="44">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Run.htm"></bpt>Run<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Run.htm"></bpt>Run<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Run.htm"></bpt>Run<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="45">
<source xml:lang="en">Runs an external program.</source>
<seg-source><mrk mid="0" mtype="seg">Runs an external program.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Runs an external program.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="46">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="RunAs.htm"></bpt>RunAs<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="RunAs.htm"></bpt>RunAs<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="RunAs.htm"></bpt>RunAs<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="47">
<source xml:lang="en">Runs an external program under the context of a different user.</source>
<seg-source><mrk mid="0" mtype="seg">Runs an external program under the context of a different user.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Runs an external program under the context of a different user.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="48">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="RunAsWait.htm"></bpt>RunAsWait<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="RunAsWait.htm"></bpt>RunAsWait<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="RunAsWait.htm"></bpt>RunAsWait<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="49">
<source xml:lang="en">Runs an external program under the context of a different user and pauses script execution until the program finishes.</source>
<seg-source><mrk mid="0" mtype="seg">Runs an external program under the context of a different user and pauses script execution until the program finishes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Runs an external program under the context of a different user and pauses script execution until the program finishes.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="50">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="RunWait.htm"></bpt>RunWait<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="RunWait.htm"></bpt>RunWait<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="RunWait.htm"></bpt>RunWait<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="51">
<source xml:lang="en">Runs an external program and pauses script execution until the program finishes.</source>
<seg-source><mrk mid="0" mtype="seg">Runs an external program and pauses script execution until the program finishes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Runs an external program and pauses script execution until the program finishes.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="52">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ShellExecute.htm"></bpt>ShellExecute<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ShellExecute.htm"></bpt>ShellExecute<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ShellExecute.htm"></bpt>ShellExecute<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="53">
<source xml:lang="en">Runs an external program using the ShellExecute API.</source>
<seg-source><mrk mid="0" mtype="seg">Runs an external program using the ShellExecute API.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Runs an external program using the ShellExecute API.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="54">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="ShellExecuteWait.htm"></bpt>ShellExecuteWait<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ShellExecuteWait.htm"></bpt>ShellExecuteWait<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="ShellExecuteWait.htm"></bpt>ShellExecuteWait<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="55">
<source xml:lang="en">Runs an external program using the ShellExecute API and pauses script execution until it finishes.</source>
<seg-source><mrk mid="0" mtype="seg">Runs an external program using the ShellExecute API and pauses script execution until it finishes.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Runs an external program using the ShellExecute API and pauses script execution until it finishes.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="56">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="Shutdown.htm"></bpt>Shutdown<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Shutdown.htm"></bpt>Shutdown<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="Shutdown.htm"></bpt>Shutdown<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="57">
<source xml:lang="en">Shuts down the system.</source>
<seg-source><mrk mid="0" mtype="seg">Shuts down the system.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Shuts down the system.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="58">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="StderrRead.htm"></bpt>StderrRead<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StderrRead.htm"></bpt>StderrRead<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StderrRead.htm"></bpt>StderrRead<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="59">
<source xml:lang="en">Reads from the STDERR stream of a previously run child process.</source>
<seg-source><mrk mid="0" mtype="seg">Reads from the STDERR stream of a previously run child process.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reads from the STDERR stream of a previously run child process.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="60">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="StdinWrite.htm"></bpt>StdinWrite<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StdinWrite.htm"></bpt>StdinWrite<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StdinWrite.htm"></bpt>StdinWrite<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="61">
<source xml:lang="en">Writes a number of characters to the STDIN stream of a previously run child process.</source>
<seg-source><mrk mid="0" mtype="seg">Writes a number of characters to the STDIN stream of a previously run child process.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Writes a number of characters to the STDIN stream of a previously run child process.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="62">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="StdioClose.htm"></bpt>StdioClose<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StdioClose.htm"></bpt>StdioClose<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StdioClose.htm"></bpt>StdioClose<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="63">
<source xml:lang="en">Closes all resources associated with a process previously run with STDIO redirection.</source>
<seg-source><mrk mid="0" mtype="seg">Closes all resources associated with a process previously run with STDIO redirection.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Closes all resources associated with a process previously run with STDIO redirection.</mrk></target>
<note>
        </note>
</trans-unit>
<trans-unit id="64">
<source xml:lang="en"> <bpt id="1" ctype="x-a">&lt;a href="StdoutRead.htm"></bpt>StdoutRead<ept id="1">&lt;/a></ept> </source>
<seg-source> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StdoutRead.htm"></bpt>StdoutRead<ept id="1">&lt;/a></ept></mrk> </seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg"><bpt id="1" ctype="x-a">&lt;a href="StdoutRead.htm"></bpt>StdoutRead<ept id="1">&lt;/a></ept></mrk> </target>
</trans-unit>
<trans-unit id="65">
<source xml:lang="en">Reads from the STDOUT stream of a previously run child process.</source>
<seg-source><mrk mid="0" mtype="seg">Reads from the STDOUT stream of a previously run child process.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Reads from the STDOUT stream of a previously run child process.</mrk></target>
<note>
        </note>
</trans-unit>
</body>
</file>
</xliff>
