<?xml version="1.0" encoding="UTF-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:okp="okapi-framework:xliff-extensions">
<file original="functions/Hex.htm" source-language="en" target-language="fr" datatype="html">
<body>
<trans-unit id="1">
<source xml:lang="en">Returns a string representation of an integer or of a binary type converted to hexadecimal.</source>
<seg-source><mrk mid="0" mtype="seg">Returns a string representation of an integer or of a binary type converted to hexadecimal.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Returns a string representation of an integer or of a binary type converted to hexadecimal.</mrk></target>
<note>Function Hex</note>
</trans-unit>
<trans-unit id="2">
<source xml:lang="en">Parameters</source>
<seg-source><mrk mid="0" mtype="seg">Parameters</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Parameters</mrk></target>
</trans-unit>
<trans-unit id="3">
<source xml:lang="en">The expression to convert.</source>
<seg-source><mrk mid="0" mtype="seg">The expression to convert.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">The expression to convert.</mrk></target>
<note>expression</note>
</trans-unit>
<trans-unit id="4">
<source xml:lang="en"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept> Number of characters to be returned for integer.</source>
<seg-source><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Number of characters to be returned for integer.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg"><bpt id="1" ctype="x-strong">&lt;strong></bpt>[optional]<ept id="1">&lt;/strong></ept></mrk> <mrk mid="1" mtype="seg">Number of characters to be returned for integer.</mrk></target>
<note>length</note>
</trans-unit>
<trans-unit id="5">
<source xml:lang="en"> Characters are truncated from the left-hand side if length is too small.</source>
<seg-source> <mrk mid="0" mtype="seg">Characters are truncated from the left-hand side if length is too small.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Characters are truncated from the left-hand side if length is too small.</mrk></target>
<note>length</note>
</trans-unit>
<trans-unit id="6">
<source xml:lang="en"> This parameter is ignored if the data is binary data.</source>
<seg-source> <mrk mid="0" mtype="seg">This parameter is ignored if the data is binary data.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">This parameter is ignored if the data is binary data.</mrk></target>
<note>length</note>
</trans-unit>
<trans-unit id="7">
<source xml:lang="en">Return Value</source>
<seg-source><mrk mid="0" mtype="seg">Return Value</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Return Value</mrk></target>
</trans-unit>
<trans-unit id="8">
<source xml:lang="en">a string of <bpt id="1" ctype="x-em">&lt;em></bpt>length<ept id="1">&lt;/em></ept> (never more than 16) characters, zero-padded if necessary for integer. Returns the binary type converted.</source>
<seg-source><mrk mid="0" mtype="seg">a string of <bpt id="1" ctype="x-em">&lt;em></bpt>length<ept id="1">&lt;/em></ept> (never more than 16) characters, zero-padded if necessary for integer.</mrk> <mrk mid="1" mtype="seg">Returns the binary type converted.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">a string of <bpt id="1" ctype="x-em">&lt;em></bpt>length<ept id="1">&lt;/em></ept> (never more than 16) characters, zero-padded if necessary for integer.</mrk> <mrk mid="1" mtype="seg">Returns the binary type converted.</mrk></target>
<note>Success:</note>
</trans-unit>
<trans-unit id="9">
<source xml:lang="en">Special:</source>
<seg-source><mrk mid="0" mtype="seg">Special:</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Special:</mrk></target>
</trans-unit>
<trans-unit id="10">
<source xml:lang="en">"" (empty string) if length is less than 1.</source>
<seg-source><mrk mid="0" mtype="seg">"" (empty string) if length is less than 1.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">"" (empty string) if length is less than 1.</mrk></target>
<note>Special:</note>
</trans-unit>
<trans-unit id="11">
<source xml:lang="en">Remarks</source>
<seg-source><mrk mid="0" mtype="seg">Remarks</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Remarks</mrk></target>
</trans-unit>
<trans-unit id="12">
<source xml:lang="en">Omitting the second parameter (<bpt id="1" ctype="x-em">&lt;em></bpt>length<ept id="1">&lt;/em></ept>) or using the keyword Default results in automatic sizing of the output; 8-characters display for numbers that can fit in that and 16-characters display for others.</source>
<seg-source><mrk mid="0" mtype="seg">Omitting the second parameter (<bpt id="1" ctype="x-em">&lt;em></bpt>length<ept id="1">&lt;/em></ept>) or using the keyword Default results in automatic sizing of the output; 8-characters display for numbers that can fit in that and 16-characters display for others.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Omitting the second parameter (<bpt id="1" ctype="x-em">&lt;em></bpt>length<ept id="1">&lt;/em></ept>) or using the keyword Default results in automatic sizing of the output; 8-characters display for numbers that can fit in that and 16-characters display for others.</mrk></target>
</trans-unit>
<trans-unit id="13">
<source xml:lang="en"> A pointer type parameter is displayed in size of pointer by default (8 characters for x86 and 16 characters for x64).</source>
<seg-source> <mrk mid="0" mtype="seg">A pointer type parameter is displayed in size of pointer by default (8 characters for x86 and 16 characters for x64).</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">A pointer type parameter is displayed in size of pointer by default (8 characters for x86 and 16 characters for x64).</mrk></target>
</trans-unit>
<trans-unit id="14">
<source xml:lang="en"> 64bit integers have 16 characters displayed by default.</source>
<seg-source> <mrk mid="0" mtype="seg">64bit integers have 16 characters displayed by default.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">64bit integers have 16 characters displayed by default.</mrk></target>
</trans-unit>
<trans-unit id="15">
<source xml:lang="en"> Numbers passed as non-integers (those with decimal separator or exponent) are processed as doubles.</source>
<seg-source> <mrk mid="0" mtype="seg">Numbers passed as non-integers (those with decimal separator or exponent) are processed as doubles.</mrk></seg-source>
<target xml:lang="fr"> <mrk mid="0" mtype="seg">Numbers passed as non-integers (those with decimal separator or exponent) are processed as doubles.</mrk></target>
</trans-unit>
<trans-unit id="16">
<source xml:lang="en">Related</source>
<seg-source><mrk mid="0" mtype="seg">Related</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Related</mrk></target>
</trans-unit>
<trans-unit id="17">
<source xml:lang="en">Example</source>
<seg-source><mrk mid="0" mtype="seg">Example</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Example</mrk></target>
</trans-unit>
<trans-unit id="18">
<source xml:lang="en">Assign a Local variable the hex number representation of 1033.</source>
<seg-source><mrk mid="0" mtype="seg">Assign a Local variable the hex number representation of 1033.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Assign a Local variable the hex number representation of 1033.</mrk></target>
</trans-unit>
<trans-unit id="19">
<source xml:lang="en">Display the result.</source>
<seg-source><mrk mid="0" mtype="seg">Display the result.</mrk></seg-source>
<target xml:lang="fr"><mrk mid="0" mtype="seg">Display the result.</mrk></target>
</trans-unit>
</body>
</file>
</xliff>
