<!DOCTYPE html>
<html>
<head>
  <title>Function _WinAPI_MessageBeep</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>
<body>
  <h1 class="small">Function Reference</h1>
  <hr style="height:0px">
  <h1>_WinAPI_MessageBeep</h1>
  <p class="funcdesc">Plays a waveform sound<br></p>
  <p class="codeheader">#include &lt;WinAPI.au3&gt;<br>
  _WinAPI_MessageBeep ( [$iType = 1] )<br></p>
  <h2>Parameters</h2>
  <table>
    <tr>
      <td style="width:15%">$iType</td>
      <td style="width:85%"><strong>[optional]</strong> The sound type, as identified by an entry in the registry. This can be one of the following<br>
      values:<br>
      0 - Simple beep. If a sound card is not available, the speaker is used.<br>
      1 - OK<br>
      2 - Hand<br>
      3 - Question<br>
      4 - Exclamation<br>
      5 - Asterisk</td>
    </tr>
  </table>
  <h2>Return Value</h2>
  <table class="noborder">
    <tr>
      <td class="valign-top" style="width:10%">Success:</td>
      <td style="width:90%">True</td>
    </tr>
    <tr>
      <td class="valign-top">Failure:</td>
      <td>
        False, call <a href="_WinAPI_GetLastError.htm">_WinAPI_GetLastError()</a> to get extended error information
      </td>
    </tr>
  </table>
  <h2>Remarks</h2>
  <p>After queuing the sound, the MessageBeep function returns control to the calling function and plays the sound<br>
  asynchronously. If it cannot play the specified alert sound, MessageBeep attempts to play the system default<br>
  sound. If it cannot play the system default sound, the function produces a standard beep sound through the<br>
  computer speaker.<br></p>
  <h2>See Also</h2>
  <p>Search <a href="http://msdn.microsoft.com/query/dev10.query?appId=Dev10IDEF1&amp;l=EN-US&amp;k=k(MessageBeep);k(DevLang-C);k(TargetOS-WINDOWS)&amp;rd=true">MessageBeep</a> in MSDN Library.</p>
</body>
</html>
