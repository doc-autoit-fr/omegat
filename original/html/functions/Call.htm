<!DOCTYPE html>
<html>
<head>
  <meta content="HTML Tidy for HTML5 for Windows version 5.1.14" name="generator">
  <title>Function Call</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>
<body>
  <h1 class="small">Function Reference</h1>
  <hr style="height:0px">
  <h1>Call</h1>
  <p class="funcdesc">Calls a user-defined or built-in function contained in first parameter.<br></p>
  <p class="codeheader">Call ( "function" [, param1 [, param2 [, paramN]]] )<br></p>
  <h2>Parameters</h2>
  <table>
    <tr>
      <td style="width:15%">function</td>
      <td style="width:85%">The name of function or function to call.</td>
    </tr>
    <tr>
      <td>param</td>
      <td>Arguments that will be passed to the function being invoked.</td>
    </tr>
  </table>
  <h2>Return Value</h2>
  <table class="noborder">
    <tr>
      <td class="valign-top" style="width:10%">Success:</td>
      <td style="width:90%">the return value of the called function. Both @error and @extended may contain values if the called function set them.</td>
    </tr>
    <tr>
      <td class="valign-top">Failure:</td>
      <td>sets the @error flag to 0xDEAD and @extended to 0xBEEF if the function does not exist or invalid number of parameters.</td>
    </tr>
  </table>
  <h2>Remarks</h2>
  <p>The function can pass arguments to functions, however, <em>ByRef</em> parameters are not supported; there is no way to retrieve the ByRef parameter.<br>
  <br>
  A special array can be passed in lieu of individual parameters. This array must have its first element set to "CallArgArray" and elements 1 - <em>n</em> will be passed as separate arguments to the function. If using this special array, no other arguments can be passed to <a href="Call.htm">Call()</a>. See example for a demonstration.<br>
  Both <a href="Call.htm">Call()</a> itself can set the @error flag or the called function can set the @error flag. If <a href="Call.htm">Call()</a> sets the @error flag, the value will be 0xDEAD and @extended will also be set to 0xBEEF. See the example for a demonstration of testing for a function that was not found.<br></p>
  <h2>Related</h2>
  <p translate="no"><a href="Execute.htm">Execute</a></p>
  <h2 class="bottom">Example</h2>
  <script type="text/javascript">
  if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
  function copyToClipboard(section) {
  if (window.clipboardData && clipboardData.setData) {
  clipboardData.setData("text", section + "\r\n");
  alert("Copied to clipboard");
  }
  }
  </script>
  <div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
      <script type="text/javascript">
      if (document.URL.match(/^mk:@MSITStore:/i)) {
      document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
      document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\Call.au3,"><\/object>');
      document.write('<\/div>');
      }
      </script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
      <div class="codeSnippetToolBar">
        <div class="codeSnippetToolBarText">
          <script type="text/javascript">
          if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
          document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
          </script>
        </div>
      </div>
      <div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
        <pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7" translate="no">&lt;MsgBoxConstants.au3&gt;</span>

<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">    </span><span class="S1">; <span translate="yes">This calls a function accepting no arguments.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/Call.htm"><span class="S4">Call</span></a><span class="S8">(</span><span class="S7">"<span translate="yes">Test1</span>"</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">This calls a function accepting one argument and passes it an argument.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/Call.htm"><span class="S4">Call</span></a><span class="S8">(</span><span class="S7">"<span translate="yes">Test2</span>"</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">Message from Call()!</span>"</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">This demonstrates how to use the special array argument.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArgs</span><span class="S8">[</span><span class="S3">4</span><span class="S8">]</span>
<span class="S0">    </span><span class="S9">$aArgs</span><span class="S8">[</span><span class="S3">0</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"<span translate="yes">CallArgArray</span>"</span><span class="S0"> </span><span class="S1">; <span translate="yes">This is required, otherwise, Call() will not recognize the array as containing arguments</span></span>
<span class="S0">    </span><span class="S9">$aArgs</span><span class="S8">[</span><span class="S3">1</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"<span translate="yes">This is a string</span>"</span><span class="S0"> </span><span class="S1">; <span translate="yes">Parameter one is a string</span></span>
<span class="S0">    </span><span class="S9">$aArgs</span><span class="S8">[</span><span class="S3">2</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">47</span><span class="S0"> </span><span class="S1">; <span translate="yes">Parameter two is a number</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArray</span><span class="S8">[</span><span class="S3">2</span><span class="S8">]</span>
<span class="S0">    </span><span class="S9">$aArray</span><span class="S8">[</span><span class="S3">0</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"<span translate="yes">Array Element 0</span>"</span>
<span class="S0">    </span><span class="S9">$aArray</span><span class="S8">[</span><span class="S3">1</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"<span translate="yes">Array Element 1</span>"</span>
<span class="S0">    </span><span class="S9">$aArgs</span><span class="S8">[</span><span class="S3">3</span><span class="S8">]</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S9">$aArray</span><span class="S0"> </span><span class="S1">; <span translate="yes">Parameter three is an array</span></span>

<span class="S0">    </span><span class="S1">; <span translate="yes">We've built the special array, now call the function</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/Call.htm"><span class="S4">Call</span></a><span class="S8">(</span><span class="S7">"<span translate="yes">Test3</span>"</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$aArgs</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Test calling a function that does not exist.  This shows the proper way to test by</span></span>
<span class="S0">    </span><span class="S1">; <span translate="yes">checking that both @error and @extended contain the documented failure values.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Const</span></a><span class="S0"> </span><span class="S9">$sFunction</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"<span translate="yes">DoesNotExist</span>"</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/Call.htm"><span class="S4">Call</span></a><span class="S8">(</span><span class="S9">$sFunction</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@error"><span class="S6">@error</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0xDEAD</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S5">And</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@extended"><span class="S6">@extended</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0xBEEF</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">Function does not exist.</span>"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0">   </span><span class="S1" translate="no">;==&gt;Example</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Test1</span><span class="S8">()</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">Hello</span>"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0">   </span><span class="S1" translate="no">;==&gt;Test1</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Test2</span><span class="S8">(</span><span class="S9">$sMsg</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sMsg</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0">   </span><span class="S1" translate="no">;==&gt;Test2</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Test3</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$nNumber</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$aArray</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">The string is:</span> "</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$sString</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">The number is:</span> "</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$nNumber</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/For.htm"><span class="S5">For</span></a><span class="S0"> </span><span class="S9">$i</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S3">0</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/For.htm"><span class="S5">To</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/UBound.htm"><span class="S4">UBound</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">)</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">-</span></a><span class="S0"> </span><span class="S3">1</span>
<span class="S0">        </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">Array[</span>"</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$i</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">"<span translate="yes">] contains:</span>"</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$aArray</span><span class="S8">[</span><span class="S9">$i</span><span class="S8">])</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/For.htm"><span class="S5">Next</span></a>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0">   </span><span class="S1" translate="no">;==&gt;Test3</span>
</span>
</pre>
      </div>
    </div>
  </div>
</body>
</html>
