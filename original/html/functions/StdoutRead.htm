<!DOCTYPE html>
<html>
<head>
  <meta content="HTML Tidy for HTML5 for Windows version 5.1.14" name="generator">
  <title>Function StdoutRead</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>
<body>
  <h1 class="small">Function Reference</h1>
  <hr style="height:0px">
  <h1>StdoutRead</h1>
  <p class="funcdesc">Reads from the STDOUT stream of a previously run child process.<br></p>
  <p class="codeheader">StdoutRead ( process_id [, peek = False [, binary = False]] )<br></p>
  <h2>Parameters</h2>
  <table>
    <tr>
      <td style="width:15%">process_id</td>
      <td style="width:85%">The process ID of a child process, as returned by a previous call to Run.</td>
    </tr>
    <tr>
      <td>peek</td>
      <td><strong>[optional]</strong> If True the function does not remove the read characters from the stream.</td>
    </tr>
    <tr>
      <td>binary</td>
      <td><strong>[optional]</strong> If True the function reads the data as binary instead of text (default is text).</td>
    </tr>
  </table>
  <h2>Return Value</h2>
  <table class="noborder">
    <tr>
      <td class="valign-top" style="width:10%">Success:</td>
      <td style="width:90%">the data read. @extended contains the number of bytes read.</td>
    </tr>
    <tr>
      <td class="valign-top">Failure:</td>
      <td>sets the @error flag to non-zero if EOF is reached, STDOUT was not redirected for the process or other error.</td>
    </tr>
  </table>
  <h2>Remarks</h2>
  <p><a href="StdoutRead.htm">StdoutRead()</a> reads from the console standard output stream of a child process, which is normally used by console applications to write to the screen. During the call to <a href="Run.htm">Run()</a> for the child process you wish to read from the STD I/O parameter must have included the value of $STDOUT_CHILD (2) for this function to work properly (see the <a href="Run.htm">Run()</a> function).<br>
  <a href="StdoutRead.htm">StdoutRead()</a> does not block, it will return immediately. In order to get all data, it must be called in a loop.<br>
  Peeking on the stream does not remove the data from the buffer, however, it does return the available data as normal.<br>
  By default, data is returned in text format. By using the binary option, the data will be returned in binary format.<br></p>
  <h2>Related</h2>
  <p translate="no"><a href="Run.htm">Run</a>, <a href="RunAs.htm">RunAs</a>, <a href="StderrRead.htm">StderrRead</a>, <a href="StdinWrite.htm">StdinWrite</a>, <a href="StdioClose.htm">StdioClose</a></p>
  <h2 class="bottom">Example</h2>
  <script type="text/javascript">
  if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
  function copyToClipboard(section) {
  if (window.clipboardData && clipboardData.setData) {
  clipboardData.setData("text", section + "\r\n");
  alert("Copied to clipboard");
  }
  }
  </script>
  <div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
      <script type="text/javascript">
      if (document.URL.match(/^mk:@MSITStore:/i)) {
      document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
      document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\StdoutRead.au3,"><\/object>');
      document.write('<\/div>');
      }
      </script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
      <div class="codeSnippetToolBar">
        <div class="codeSnippetToolBarText">
          <script type="text/javascript">
          if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
          document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
          </script>
        </div>
      </div>
      <div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
        <pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7" translate="no">&lt;AutoItConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7" translate="no">&lt;MsgBoxConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7" translate="no">&lt;Array.au3&gt;</span><span class="S0"> </span><span class="S1">; <span translate="yes">Required for _ArrayDisplay only.</span></span>

<span class="S1">; <span translate="yes">Recursively display a list of files in a directory.</span></span>
<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sFilePath</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@ScriptDir"><span class="S6">@ScriptDir</span></a><span class="S0"> </span><span class="S1">; <span translate="yes">Search the current script directory.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sFilter</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"<span translate="yes">*.*</span>"</span><span class="S0"> </span><span class="S1">; <span translate="yes">Search for all files in the current directory. For a list of valid wildcards, search for 'Wildcards' in the Help file.</span></span>

<span class="S0">    </span><span class="S1">; <span translate="yes">If the file path isn't a directory then return from the 'Example' function.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S5">Not</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringInStr.htm"><span class="S4">StringInStr</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../functions/FileGetAttrib.htm"><span class="S4">FileGetAttrib</span></a><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">),</span><span class="S0"> </span><span class="S7">"<span translate="yes">D</span>"</span><span class="S8">)</span><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">        </span><a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Return</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/SetError.htm"><span class="S4">SetError</span></a><span class="S8">(</span><span class="S3">1</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">,</span><span class="S0"> </span><span class="S3">0</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>

<span class="S0">    </span><span class="S1">; <span translate="yes">Remove trailing backslashes and append a single trailing backslash.</span></span>
<span class="S0">    </span><span class="S9">$sFilePath</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringRegExpReplace.htm"><span class="S4">StringRegExpReplace</span></a><span class="S8">(</span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">[\\/]+\z</span>"</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">)</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">"<span translate="yes">\</span>"</span>

<span class="S0">    </span><span class="S2">#cs</span>
<span class="S2">        Commandline parameters for DIR:</span>
<span class="S2">        /B - Simple output.</span>
<span class="S2">        /A-D - Search for all files, minus folders.</span>
<span class="S2">        /S - Search within subfolders.</span>
<span class="S2">    #ce</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$iPID</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Run.htm"><span class="S4">Run</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../macros.htm#@ComSpec"><span class="S6">@ComSpec</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">' <span translate="yes">/C DIR "</span>'</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$sFilePath</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$sFilter</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">'<span translate="yes">" /B /A-D /S</span>'</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sFilePath</span><span class="S8">,</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@SW_HIDE"><span class="S6">@SW_HIDE</span></a><span class="S8">,</span><span class="S0"> </span><span class="S9">$STDOUT_CHILD</span><span class="S8">)</span>
<span class="S0">    </span><span class="S1">; <span translate="yes">If you want to search with files that contains unicode characters, then use the /U commandline parameter.</span></span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Wait until the process has closed using the PID returned by Run.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/ProcessWaitClose.htm"><span class="S4">ProcessWaitClose</span></a><span class="S8">(</span><span class="S9">$iPID</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Read the Stdout stream of the PID returned by Run. This can also be done in a while loop. Look at the example for StderrRead.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$sOutput</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StdoutRead.htm"><span class="S4">StdoutRead</span></a><span class="S8">(</span><span class="S9">$iPID</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Use StringSplit to split the output of StdoutRead to an array. All carriage returns (@CRLF) are stripped and @CRLF (line feed) is used as the delimiter.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$aArray</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringSplit.htm"><span class="S4">StringSplit</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../functions/StringTrimRight.htm"><span class="S4">StringTrimRight</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../functions/StringStripCR.htm"><span class="S4">StringStripCR</span></a><span class="S8">(</span><span class="S9">$sOutput</span><span class="S8">),</span><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringLen.htm"><span class="S4">StringLen</span></a><span class="S8">(</span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S8">)),</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/If.htm"><span class="S5">If</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@error"><span class="S6">@error</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Then</span></a>
<span class="S0">        </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">It appears there was an error trying to find all the files in the current script directory.</span>"</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">Else</span></a>
<span class="S0">        </span><span class="S1">; <span translate="yes">Display the results.</span></span>
<span class="S0">        </span><a class="codeSnippetLink" href="../libfunctions/_ArrayDisplay.htm"><span class="S15">_ArrayDisplay</span></a><span class="S8">(</span><span class="S9">$aArray</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/IfElseEndIf.htm"><span class="S5">EndIf</span></a>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0">   </span><span class="S1" translate="no">;==&gt;Example</span>
</span>
</pre>
      </div>
    </div>
  </div>
</body>
</html>
