<!DOCTYPE html>
<html>
<head>
  <title>Function StringToBinary</title>
  <meta charset="utf-8">
  <link href="../css/default.css" rel="stylesheet">
</head>
<body>
  <h1 class="small">Function Reference</h1>
  <hr style="height:0px">
  <h1>StringToBinary</h1>
  <p class="funcdesc">Converts a string into binary data.<br></p>
  <p class="codeheader">StringToBinary ( expression [, flag = 1] )<br></p>
  <h2>Parameters</h2>
  <table>
    <tr>
      <td style="width:15%">expression</td>
      <td style="width:85%">An expression to convert into binary data.</td>
    </tr>
    <tr>
      <td>flag</td>
      <td><strong>[optional]</strong> Changes how the string is stored as binary:<br>
      &nbsp;&nbsp;&nbsp; $SB_ANSI (1) = string data is ANSI (default)<br>
      &nbsp;&nbsp;&nbsp; $SB_UTF16LE (2) = string data is UTF16 Little Endian<br>
      &nbsp;&nbsp;&nbsp; $SB_UTF16BE (3) = string data is UTF16 Big Endian<br>
      &nbsp;&nbsp;&nbsp; $SB_UTF8 (4) = string data is UTF8<br>
      <br>
      Constants are defined in StringConstants.au3.</td>
    </tr>
  </table>
  <h2>Return Value</h2>Returns a binary variant.<br>
  <h2>Remarks</h2>
  <p>See <a href="../intro/unicode.htm">"Unicode Support"</a> for a detailed description.<br></p>
  <h2>Related</h2>
  <p translate="no"><a href="Binary.htm">Binary</a>, <a href="BinaryToString.htm">BinaryToString</a>, <a href="IsBinary.htm">IsBinary</a>, <a href="String.htm">String</a></p>
  <h2 class="bottom">Example</h2>
  <script type="text/javascript">
  if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
  function copyToClipboard(section) {
  if (window.clipboardData && clipboardData.setData) {
  clipboardData.setData("text", section + "\r\n");
  alert("Copied to clipboard");
  }
  }
  </script>
  <div class="codeSnippetContainer">
    <div class="codeSnippetContainerTabs">
      <script type="text/javascript">
      if (document.URL.match(/^mk:@MSITStore:/i)) {
      document.write('<div class="codeSnippetContainerTab codeSnippetContainerTabSingle" dir="ltr">');
      document.write('<object id=hhctrl type="application/x-oleobject" classid="clsid:adb880a6-d8ff-11cf-9377-00aa003b7a11"><param name="Command" value="ShortCut"><param name="Font" value="Verdana,10pt"><param name="Text" value="Text:Open this Script"><param name="Item1" value=",Examples\\HelpFile\\BinaryToString.au3,"><\/object>');
      document.write('<\/div>');
      }
      </script>
    </div>
    <div class="codeSnippetContainerCodeContainer">
      <div class="codeSnippetToolBar">
        <div class="codeSnippetToolBarText">
          <script type="text/javascript">
          if ((navigator.appName == "Microsoft Internet Explorer") && (parseInt(navigator.appVersion) >= 4)) // IE (4+) only
          document.write('<a href="#" id="copy" onclick="copyToClipboard(document.getElementById(\'copytext1\').innerText)">Copy to clipboard<\/a>');
          </script>
        </div>
      </div>
      <div class="codeSnippetContainerCode" dir="ltr" id="copytext1">
        <pre>
<span><a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7" translate="no">&lt;MsgBoxConstants.au3&gt;</span>
<a class="codeSnippetLink" href="../keywords/include.htm"><span class="S11">#include</span></a><span class="S0"> </span><span class="S7" translate="no">&lt;StringConstants.au3&gt;</span>

<span class="S0">Example</span><span class="S8">()</span>

<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> Example</span><span class="S8">()</span>
<span class="S0">    </span><span class="S1">; <span translate="yes">Define the string that will be converted later.</span></span>
<span class="S0">    </span><span class="S1">; <span translate="yes">NOTE: This string may show up as ?? in the help file and even in some editors.</span></span>
<span class="S0">    </span><span class="S1">; <span translate="yes">This example is saved as UTF-8 with BOM.  It should display correctly in editors</span></span>
<span class="S0">    </span><span class="S1">; <span translate="yes">which support changing code pages based on BOMs.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Const</span></a><span class="S0"> </span><span class="S9">$sString</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7">"<span translate="yes">Hello - 你好</span>"</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Temporary variables used to store conversion results.  $dBinary will hold</span></span>
<span class="S0">    </span><span class="S1">; <span translate="yes">the original string in binary form and $sConverted will hold the result</span></span>
<span class="S0">    </span><span class="S1">; <span translate="yes">afte it's been transformed back to the original format.</span></span>
<span class="S0">    </span><a class="codeSnippetLink" href="../keywords/Dim.htm"><span class="S5">Local</span></a><span class="S0"> </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/Binary.htm"><span class="S4">Binary</span></a><span class="S8">(</span><span class="S7" translate="no">""</span><span class="S8">),</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><span class="S7" translate="no">""</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the original UTF-8 string to an ANSI compatible binary string.</span></span>
<span class="S0">    </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the ANSI compatible binary string back into a string.</span></span>
<span class="S0">    </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Display the resulsts.  Note that the last two characters will appear</span></span>
<span class="S0">    </span><span class="S1">; <span translate="yes">as ?? since they cannot be represented in ANSI.</span></span>
<span class="S0">    DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">ANSI</span>"</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the original UTF-8 string to an UTF16-LE binary string.</span></span>
<span class="S0">    </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16LE</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the UTF16-LE binary string back into a string.</span></span>
<span class="S0">    </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16LE</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Display the resulsts.</span></span>
<span class="S0">    DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">UTF16-LE</span>"</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the original UTF-8 string to an UTF16-BE binary string.</span></span>
<span class="S0">    </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16BE</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the UTF16-BE binary string back into a string.</span></span>
<span class="S0">    </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF16BE</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Display the resulsts.</span></span>
<span class="S0">    DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">UTF16-BE</span>"</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the original UTF-8 string to an UTF-8 binary string.</span></span>
<span class="S0">    </span><span class="S9">$dBinary</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/StringToBinary.htm"><span class="S4">StringToBinary</span></a><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF8</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Convert the UTF8 binary string back into a string.</span></span>
<span class="S0">    </span><span class="S9">$sConverted</span><span class="S0"> </span><a class="codeSnippetLink" href="../intro/lang_operators.htm"><span class="S8">=</span></a><span class="S0"> </span><a class="codeSnippetLink" href="../functions/BinaryToString.htm"><span class="S4">BinaryToString</span></a><span class="S8">(</span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$SB_UTF8</span><span class="S8">)</span>

<span class="S0">    </span><span class="S1">; <span translate="yes">Display the resulsts.</span></span>
<span class="S0">    DisplayResults</span><span class="S8">(</span><span class="S9">$sString</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">UTF8</span>"</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0">   </span><span class="S1" translate="no">;==&gt;Example</span>

<span class="S1">; <span translate="yes">Helper function which formats the message for display.  It takes the following parameters:</span></span>
<span class="S1">; <span translate="yes">$sOriginal - The original string before conversions.</span></span>
<span class="S1">; <span translate="yes">$dBinary - The original string after it has been converted to binary.</span></span>
<span class="S1">; <span translate="yes">$sConverted- The string after it has been converted to binary and then back to a string.</span></span>
<span class="S1">; <span translate="yes">$sConversionType - A human friendly name for the encoding type used for the conversion.</span></span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">Func</span></a><span class="S0"> DisplayResults</span><span class="S8">(</span><span class="S9">$sOriginal</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">,</span><span class="S0"> </span><span class="S9">$sConversionType</span><span class="S8">)</span>
<span class="S0">    </span><a class="codeSnippetLink" href="../functions/MsgBox.htm"><span class="S4">MsgBox</span></a><span class="S8">(</span><span class="S9">$MB_SYSTEMMODAL</span><span class="S8">,</span><span class="S0"> </span><span class="S7" translate="no">""</span><span class="S8">,</span><span class="S0"> </span><span class="S7">"<span translate="yes">Original:</span>"</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$sOriginal</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">"<span translate="yes">Binary:</span>"</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$dBinary</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$sConversionType</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S7">"<span translate="yes">:</span>"</span><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><a class="codeSnippetLink" href="../macros.htm#@CRLF"><span class="S6">@CRLF</span></a><span class="S0"> </span><span class="S8">&</span><span class="S0"> </span><span class="S9">$sConverted</span><span class="S8">)</span>
<a class="codeSnippetLink" href="../keywords/Func.htm"><span class="S5">EndFunc</span></a><span class="S0">   </span><span class="S1" translate="no">;==&gt;DisplayResults</span>
</span>
</pre>
      </div>
    </div>
  </div>
</body>
</html>
